<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c03ffb20"/></to>
    </wire>
    <wire loc="103:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bf931ca0"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c078d560"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0427470"/></to>
    </wire>
    <wire loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0a16dd0"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0a9fb70"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0abe750"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0adb080"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0c1d130"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0d1e620"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0e0ec60"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c16067f0"/></to>
    </wire>
    <wire loc="103:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bfce5140"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c12d0020"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c16bad70"/></to>
    </wire>
    <wire loc="40:FWBAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0940420"/></to>
    </wire>
    <wire loc="41:FWBAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc8c0940a80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc8c1c38e00"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc8c1c38e00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc8c1a7a590"/></to>
    </wire>
    <wire loc="42:FWBAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7fc8c09373b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c17dfe40"/></to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c17dfe40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c178c680"/></to>
    </wire>
    <wire loc="43:FWBAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c093b0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a51c00"/></to>
    </wire>
    <wire loc="44:FWBAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c093a780"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c1788020"/></to>
    </wire>
    <wire loc="47:FWBAppC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x7fc8c0939e40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c083c020"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c083c020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8bfacc020"/></to>
    </wire>
    <wire loc="48:FWBAppC.nc">
      <from><interface-ref name="ReceiveData" scoped="" ref="0x7fc8c0938b70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0834cc0"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c0834cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c17cfb10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:FWBAppC.nc">
      <from><interface-ref name="RetryTimer" scoped="" ref="0x7fc8c09361c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c082b1e0"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c082b1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:FWBAppC.nc">
      <from><interface-ref name="TimerPeriodic" scoped="" ref="0x7fc8c0931680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c0824b00"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c0824b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:FWBAppC.nc">
      <from><interface-ref name="TimerPeriodic2" scoped="" ref="0x7fc8c092cbf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c081d560"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c081d560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:FWBAppC.nc">
      <from><interface-ref name="TimerPeriodic3" scoped="" ref="0x7fc8c09260f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c0816020"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c0816020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:FWBAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc8c0921450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc8c0ae5a20"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc8c0ae5a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc8c0adaa20"/></to>
    </wire>
    <wire loc="57:FWBAppC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c0921c50"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16c0550"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16c0550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16b61a0"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fc8c1a7ac00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fc8c212a3a0"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fc8c212a3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fc8c1cd4140"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fc8c1a6a6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1c35310"/></to>
    </wire>
    <wire loc="48:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c1c35310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1c2f550"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1a6adc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></to>
    </wire>
    <wire loc="49:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fc8c1c2fc60"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fc8c1c30920"/></to>
    </wire>
    <wire loc="46:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fc8c1c30920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1c10860"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fc8c1c2e380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1c316e0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fc8c1c2ea60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1a28600"/></to>
    </wire>
    <wire loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c1c10860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1bf8b60"/></to>
    </wire>
    <wire loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc8c1c08de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc8c1bf7350"/></to>
    </wire>
    <wire loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc8c1dad4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc8c1bf6680"/></to>
    </wire>
    <wire loc="113:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fc8c1bb15a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1aef6d0"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fc8c1b9f020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1ae8b30"/></to>
    </wire>
    <wire loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fc8c1ba8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1af4160"/></to>
    </wire>
    <wire loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fc8c1b8da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1acecb0"/></to>
    </wire>
    <wire loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fc8c1bafaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1af5480"/></to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fc8c1b93020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1ace020"/></to>
    </wire>
    <wire loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fc8c1b89a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1ab7cb0"/></to>
    </wire>
    <wire loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fc8c1b9a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1ac8220"/></to>
    </wire>
    <wire loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fc8c1bb3b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1b459d0"/></to>
    </wire>
    <wire loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fc8c1b8fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1add2f0"/></to>
    </wire>
    <wire loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fc8c1b953e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1ade610"/></to>
    </wire>
    <wire loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fc8c1b9e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1adf220"/></to>
    </wire>
    <wire loc="115:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fc8c1ba7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1aed7a0"/></to>
    </wire>
    <wire loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fc8c1b8ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1ac52f0"/></to>
    </wire>
    <wire loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fc8c1b9dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1ad86d0"/></to>
    </wire>
    <wire loc="114:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fc8c1bae890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1aeeac0"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fc8c1bc3060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b53540"/></to>
    </wire>
    <wire loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fc8c1b93da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1ac7610"/></to>
    </wire>
    <wire loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fc8c1bb90c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1af6020"/></to>
    </wire>
    <wire loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fc8c1b99a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1ac06d0"/></to>
    </wire>
    <wire loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fc8c1ba36d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1afda90"/></to>
    </wire>
    <wire loc="142:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fc8c1b8ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1ad57a0"/></to>
    </wire>
    <wire loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fc8c1babcf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1afede0"/></to>
    </wire>
    <wire loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fc8c1b941f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1ad6ac0"/></to>
    </wire>
    <wire loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fc8c1b8aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1abe7a0"/></to>
    </wire>
    <wire loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fc8c1b9b0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1ad0b30"/></to>
    </wire>
    <wire loc="120:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fc8c1b92b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1abfac0"/></to>
    </wire>
    <wire loc="128:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fc8c1b90a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c1ae5cb0"/></to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fc8c1b91a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1ab7020"/></to>
    </wire>
    <wire loc="127:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fc8c1b96570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc8c1ae5020"/></to>
    </wire>
    <wire loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fc8c1b97020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fc8c1ab9b30"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fc8c1b50450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b51d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc8c1b50aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fc8c1ab1aa0"/></to>
    </wire>
    <wire loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc8c1b4f120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fc8c1aae260"/></to>
    </wire>
    <wire loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1afc930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b53540"/></to>
    </wire>
    <wire loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1afa020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b51d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1af3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b53540"/></to>
    </wire>
    <wire loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1af27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b51d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1aec610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b53540"/></to>
    </wire>
    <wire loc="117:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1aebc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b51d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fc8c1b492f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc8c1b49940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fc8c1aae9f0"/></to>
    </wire>
    <wire loc="123:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc8c1b48020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fc8c1aad240"/></to>
    </wire>
    <wire loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1ae4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1ae22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1adc160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1adb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1ad4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="144:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1ad3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1acdb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1acb2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1ac4160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1ac37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1abd610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1abcc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c1ab5b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></to>
    </wire>
    <wire loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fc8c1ab32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c1cd2040"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fc8c1cce490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fc8c20c13b0"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c1a28600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c1a51600"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fc8c1a471d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fc8c1a52da0"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fc8c1a52da0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c1810020"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fc8c1a4d4d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fc8c1a2a020"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fc8c1a2a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c17fcb90"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fc8c1a4c7f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fc8c1a29380"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fc8c1a29380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c17f6710"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c17ff2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fc8c19d09a0"/></to>
    </wire>
    <wire loc="486:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fc8c19d09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18acd10"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c17fbde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fc8c19ce9a0"/></to>
    </wire>
    <wire loc="487:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fc8c19ce9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18a7740"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c17f5930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fc8c19cc9a0"/></to>
    </wire>
    <wire loc="488:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fc8c19cc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18a2100"/></to>
    </wire>
    <wire loc="442:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fc8c1a11810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1946740"/></to>
    </wire>
    <wire loc="455:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fc8c19fd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1915100"/></to>
    </wire>
    <wire loc="531:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fc8c19b3ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1907100"/></to>
    </wire>
    <wire loc="551:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fc8c198fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c187c740"/></to>
    </wire>
    <wire loc="532:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fc8c19b1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1903d10"/></to>
    </wire>
    <wire loc="460:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fc8c19f9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c190c740"/></to>
    </wire>
    <wire loc="473:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fc8c19e49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18dc460"/></to>
    </wire>
    <wire loc="497:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fc8c19c09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1885100"/></to>
    </wire>
    <wire loc="535:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fc8c19abcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18f9100"/></to>
    </wire>
    <wire loc="545:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fc8c199bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1899740"/></to>
    </wire>
    <wire loc="557:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fc8c1986cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1877100"/></to>
    </wire>
    <wire loc="445:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fc8c1a0b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1937740"/></to>
    </wire>
    <wire loc="536:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fc8c19a9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18f4d10"/></to>
    </wire>
    <wire loc="450:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fc8c1a07810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c192ed10"/></to>
    </wire>
    <wire loc="463:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fc8c19f3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18fe740"/></to>
    </wire>
    <wire loc="476:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fc8c19de9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18cd100"/></to>
    </wire>
    <wire loc="489:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fc8c19ca9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c189ed10"/></to>
    </wire>
    <wire loc="500:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fc8c19b99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1877100"/></to>
    </wire>
    <wire loc="440:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fc8c1a15810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c194f100"/></to>
    </wire>
    <wire loc="453:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fc8c1a01810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1920d80"/></to>
    </wire>
    <wire loc="466:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fc8c19ed810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18ef740"/></to>
    </wire>
    <wire loc="530:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fc8c19b5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1907100"/></to>
    </wire>
    <wire loc="548:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fc8c1995cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c188b740"/></to>
    </wire>
    <wire loc="555:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fc8c1988cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1877100"/></to>
    </wire>
    <wire loc="541:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fc8c19a1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18b1100"/></to>
    </wire>
    <wire loc="471:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fc8c19e8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18e6e60"/></to>
    </wire>
    <wire loc="484:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fc8c19d49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18b6740"/></to>
    </wire>
    <wire loc="495:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fc8c19c49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1890d10"/></to>
    </wire>
    <wire loc="549:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fc8c1993cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1885100"/></to>
    </wire>
    <wire loc="538:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fc8c19a7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18bf100"/></to>
    </wire>
    <wire loc="443:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fc8c1a0f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1941100"/></to>
    </wire>
    <wire loc="456:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fc8c19fb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1911d10"/></to>
    </wire>
    <wire loc="493:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fc8c19c89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1899740"/></to>
    </wire>
    <wire loc="461:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fc8c19f7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1907100"/></to>
    </wire>
    <wire loc="474:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fc8c19e29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18d8e00"/></to>
    </wire>
    <wire loc="498:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fc8c19be9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1881d10"/></to>
    </wire>
    <wire loc="540:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fc8c19a3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18b6740"/></to>
    </wire>
    <wire loc="438:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fc8c1a18870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c197fd10"/></to>
    </wire>
    <wire loc="451:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fc8c1a05810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1929740"/></to>
    </wire>
    <wire loc="464:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fc8c19f1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18f9100"/></to>
    </wire>
    <wire loc="477:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fc8c19dc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18c9d10"/></to>
    </wire>
    <wire loc="542:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fc8c199fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18ef740"/></to>
    </wire>
    <wire loc="546:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fc8c1999cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1894100"/></to>
    </wire>
    <wire loc="552:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fc8c198dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1877100"/></to>
    </wire>
    <wire loc="482:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fc8c19d89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18bf100"/></to>
    </wire>
    <wire loc="543:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fc8c199dcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18ea100"/></to>
    </wire>
    <wire loc="441:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fc8c1a13810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c194bd10"/></to>
    </wire>
    <wire loc="454:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fc8c19ff810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c191a740"/></to>
    </wire>
    <wire loc="467:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fc8c19eb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18ea100"/></to>
    </wire>
    <wire loc="539:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fc8c19a5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18bbd10"/></to>
    </wire>
    <wire loc="550:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fc8c1991cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1881d10"/></to>
    </wire>
    <wire loc="472:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fc8c19e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18e19f0"/></to>
    </wire>
    <wire loc="485:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fc8c19d29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18b1100"/></to>
    </wire>
    <wire loc="496:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fc8c19c29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c188b740"/></to>
    </wire>
    <wire loc="444:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fc8c1a0d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c193cd10"/></to>
    </wire>
    <wire loc="494:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fc8c19c69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1894100"/></to>
    </wire>
    <wire loc="449:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fc8c1a09810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1932100"/></to>
    </wire>
    <wire loc="462:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fc8c19f5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1903d10"/></to>
    </wire>
    <wire loc="475:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fc8c19e09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18d3740"/></to>
    </wire>
    <wire loc="499:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fc8c19bc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c187c740"/></to>
    </wire>
    <wire loc="439:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fc8c1a22810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1954740"/></to>
    </wire>
    <wire loc="452:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fc8c1a03810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1924100"/></to>
    </wire>
    <wire loc="465:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fc8c19ef810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18f4d10"/></to>
    </wire>
    <wire loc="478:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fc8c19da9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18c4740"/></to>
    </wire>
    <wire loc="534:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fc8c19adca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18fe740"/></to>
    </wire>
    <wire loc="547:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fc8c1997cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c1890d10"/></to>
    </wire>
    <wire loc="533:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fc8c19afcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18fe740"/></to>
    </wire>
    <wire loc="483:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fc8c19d69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c18bbd10"/></to>
    </wire>
    <wire loc="554:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fc8c198acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c187c740"/></to>
    </wire>
    <wire loc="558:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fc8c1984cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c189ed10"/></to>
    </wire>
    <wire loc="529:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fc8c19b79f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc8c190c740"/></to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c178c680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c1768b90"/></to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c17d4b00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c178b7f0"/></to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c178b7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c09d9020"/></to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fc8c17d5880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fc8c1789880"/></to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fc8c1789880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fc8c09d7df0"/></to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c17c4180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c1787760"/></to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c1787760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c09d5a80"/></to>
    </wire>
    <wire loc="89:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c17a56b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c99550"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c99550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c8ba80"/></to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c17975b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c177bbb0"/></to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c177bbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c174e080"/></to>
    </wire>
    <wire loc="81:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c17cfb10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c178ab20"/></to>
    </wire>
    <wire loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c178ab20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c09d7210"/></to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c17ad4c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c1784810"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c1784810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c174f020"/></to>
    </wire>
    <wire loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c1788020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c09d6470"/></to>
    </wire>
    <wire loc="90:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c17a4840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c0c95660"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c0c95660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c0c87af0"/></to>
    </wire>
    <wire loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c1768b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c0a0ab80"/></to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c1772d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c09d38b0"/></to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fc8c1765d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fc8c09d4ce0"/></to>
    </wire>
    <wire loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c177d970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c1750020"/></to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c1750020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c174e080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c0a0a080"/></to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c174f020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fc8c0c9b6e0"/></to>
    </wire>
    <wire loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fc8c1771020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fc8c174eb70"/></to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fc8c174eb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fc8c09f5020"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c177aa80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c174f9d0"/></to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c174f9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c0c9aa70"/></to>
    </wire>
    <wire loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fc8c09ca0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1761210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c09d2860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c175a990"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c175a990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c0a73ca0"/></to>
    </wire>
    <wire loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c09d1690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c1752840"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c1752840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c0a72a50"/></to>
    </wire>
    <wire loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c09cc4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c0ec5b40"/></to>
    </wire>
    <wire loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c09d1ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c90d30"/></to>
    </wire>
    <wire loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c09cfb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c8c640"/></to>
    </wire>
    <wire loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c09ce610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16c0550"/></to>
    </wire>
    <wire loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fc8c09cb1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c17463b0"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c17463b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c1741970"/></to>
    </wire>
    <wire loc="109:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c09cad30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c0a0ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fc8c0a07d90"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c0c9aa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c0c8b020"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fc8c09f5020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fc8c09f3420"/></to>
    </wire>
    <wire loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c0a73ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c0a68a20"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c0a0a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c0a032d0"/></to>
    </wire>
    <wire loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fc8c175b500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0a735f0"/></to>
    </wire>
    <wire loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c0a735f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fc8c0a68370"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc8c0c9b6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fc8c0c8dc50"/></to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c1761210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0a75cb0"/></to>
    </wire>
    <wire loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0a75cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0a6a7b0"/></to>
    </wire>
    <wire loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fc8c17516f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c0a74960"/></to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c0a74960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fc8c0a694d0"/></to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fc8c175bbc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fc8c0a71170"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fc8c0a71170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fc8c0a66020"/></to>
    </wire>
    <wire loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c0a72a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c0a67840"/></to>
    </wire>
    <wire loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fc8c0a07d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c17493b0"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c17493b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c1742080"/></to>
    </wire>
    <wire loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a706b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c0ac3260"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c0ac3260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c0ac1a30"/></to>
    </wire>
    <wire loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c0ac2020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c09f8360"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c09f8360"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc8c09f5d70"/></to>
    </wire>
    <wire loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c09f5d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c0a0ed00"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c0a0ed00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a08860"/></to>
    </wire>
    <wire loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a08860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c1747020"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c1747020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c1742b70"/></to>
    </wire>
    <wire loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a70020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0a0b980"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c0a0b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a07690"/></to>
    </wire>
    <wire loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a07690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0aa6ab0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c0aa6ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0aa2e40"/></to>
    </wire>
    <wire loc="109:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0aa3950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c1747cc0"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c1747cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0d237c0"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c0d237c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c0d1c020"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c17407d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c16cf020"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c16cf020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c16b7470"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c1738cd0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c16cd4b0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c16cd4b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c16b4020"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fc8c1735840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e1d6d0"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fc8c1735840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c0d265d0"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fc8c0d265d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c0d1eca0"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e1d6d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e0d320"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc8c172d6c0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc8c0e1a020"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc8c0e1a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c0e0dbc0"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fc8c1736570"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c0e1acb0"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c0e1acb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c0e0c970"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c172b970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></to>
    </wire>
    <wire loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c1728020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc8c172a9d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc8c0ae5a20"/></to>
    </wire>
    <wire loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fc8c171d720"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c0ae7aa0"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc8c0ae7aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c12d4280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c172c2e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fc8c17182a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fc8c17192a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fc8c171a2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fc8c16bb890"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fc8c16b3500"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fc8c16a8790"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c1603220"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c1603220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c15fdd20"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc8c16a69d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fc8c14fe080"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc8c14fe080"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14f1020"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fc8c16a4ce0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fc8c14fb9c0"/></to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fc8c14fb9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14e21d0"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fc8c16a2020"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fc8c14f8020"/></to>
    </wire>
    <wire loc="77:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fc8c14f8020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14d9b70"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fc8c169dc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fc8c14c2d60"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fc8c14c2d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fc8c13a3490"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc8c168bb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0f51e20"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0f51e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc8c168abb0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fc8c0f4d7b0"/></to>
    </wire>
    <wire loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc8c0f4d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c168c3b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0f4cae0"/></to>
    </wire>
    <wire loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0f4cae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c168b440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0f4ead0"/></to>
    </wire>
    <wire loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0f4ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c168cae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0f4b160"/></to>
    </wire>
    <wire loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0f4b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c168f4a0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0f42870"/></to>
    </wire>
    <wire loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0f42870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c168fd50"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0f40880"/></to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0f40880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c1696630"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0f3f0a0"/></to>
    </wire>
    <wire loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0f3f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c1691020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0f47e50"/></to>
    </wire>
    <wire loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0f47e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c16918f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0f46670"/></to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0f46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc8c1692e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fc8c0f30500"/></to>
    </wire>
    <wire loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc8c0f30500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c16924a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0f31ce0"/></to>
    </wire>
    <wire loc="183:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0f31ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c168e1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0f44e50"/></to>
    </wire>
    <wire loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0f44e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc8c168ea80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fc8c0f46e50"/></to>
    </wire>
    <wire loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc8c0f46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c168d3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0f45e50"/></to>
    </wire>
    <wire loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0f45e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fc8c1687880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0f1ea80"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0f1ea80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fc8c1688a10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0ef29e0"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0ef29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c1697390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c0ec5b40"/></to>
    </wire>
    <wire loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c16af970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c0ec4d40"/></to>
    </wire>
    <wire loc="23:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c0ec4d40"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c0eaa310"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fc8c167c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fc8c167d410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c16067f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c15fd490"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c15fd490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bfe6d950"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c15fdd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe6c1d0"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8bfe6d950"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bfe65a10"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe6c1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe5f5f0"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8bfe65a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bfe49510"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fc8bfe59d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe642a0"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe642a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe49da0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8bfe5b9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c1589020"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c1589020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c154d0f0"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfe44020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfe4e1b0"/></to>
    </wire>
    <wire loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfe4e1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfe43760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfe4d8f0"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfe4d8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfe42a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfe4cc10"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfe4cc10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fc8c1b9f020"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fc8c1b96570"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fc8c1b9dbe0"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fc8c1b941f0"/></to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fc8c1b9b0c0"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fc8c1b93020"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fc8c1b9a5a0"/></to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fc8c1b93da0"/></to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="79:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fc8c1b99a50"/></to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fc8c1b92b80"/></to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fc8c1b97020"/></to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fc8c1b91a20"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fc8c154b540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc8c1580060"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc8c1580060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c157b0a0"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c156d2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></to>
    </wire>
    <wire loc="73:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fc8c14fd380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14edb70"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fc8c14fc6b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14e7710"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fc8c1604e50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14f6440"/></to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fc8c14facd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14ded60"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14f5610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fc8c1a11810"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14f02f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fc8c19e49a0"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14ecde0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fc8c1a13810"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14e6930"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fc8c1a18870"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14e1480"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fc8c19dc9a0"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14dc020"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fc8c19e69a0"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14d8de0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fc8c19de9a0"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fc8c14c2150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fc8c14baa20"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc8c14c1a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fc8c1393490"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c14a65d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fc8c1b9e5a0"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fc8c14a58f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fc8c1b8fa20"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14a47a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fc8c19e69a0"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fc8c1395020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fc8c1495a30"/></to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fc8c1495a30"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fc8c1481a30"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fc8c1392020"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fc8c1497a20"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fc8c1497a20"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fc8c14889d0"/></to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fc8c148bbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fc8c1477bc0"/></to>
    </wire>
    <wire loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fc8c1492a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fc8c147ea30"/></to>
    </wire>
    <wire loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fc8c1490a30"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fc8c147ca30"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fc8c149ba30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fc8c1484a30"/></to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fc8c148da30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fc8c1479a30"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fc8c1494a30"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fc8c1480a30"/></to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fc8c148abc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fc8c1476bc0"/></to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fc8c148fa30"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fc8c147ba30"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fc8c1496a30"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fc8c1483a30"/></to>
    </wire>
    <wire loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fc8c148cbc0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fc8c1478bc0"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fc8c1493a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fc8c147fa30"/></to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fc8c1491a30"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fc8c147da30"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fc8c149ca30"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fc8c1485a30"/></to>
    </wire>
    <wire loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fc8c148ea30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fc8c147aa30"/></to>
    </wire>
    <wire loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0f4d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0f41880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0f390a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0f400a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0f2b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0f2e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0f4c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc8c0f36880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0f2f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0f3b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc8c0f3d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0f4fa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c134d940"/></to>
    </wire>
    <wire loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0f4be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc8c0f4a490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0f34c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0f4abe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0f2fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0f360a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0f45670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0f370a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0f39880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0f37880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0f2dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0f2ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc8c0f3d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0f380a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0f30ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0f3f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0f2bce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0f4e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc8c0f47670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0f44670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0f3a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0f3a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0f410a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0f482f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc8c0f47020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0f4b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0f31500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc8c0f2d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0f3b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0f38880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc8c0f4de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0f3e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc8c0f48940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0f3e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0f340a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0f2a9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1349bb0"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c1346020"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c1346db0"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c134a810"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c1345ba0"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fc8c1340020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c12d8770"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc8c12d8770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c12d4280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc8c1344400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c12b7c40"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c12b7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8bfd68c30"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc8c1341080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc8c0f778f0"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc8c0f778f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc8bfd650c0"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c1338680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c0f76020"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c0f76020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc8bfd642b0"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c1340df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fc8c1333120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc8c12d4280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c12d0b70"/></to>
    </wire>
    <wire loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc8bfd642b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c124e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc8bfd650c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc8c1251dd0"/></to>
    </wire>
    <wire loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8bfd68c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1255a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfd668f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfd5c2c0"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfd5c2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c10d98a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc8c1251dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc8c11d5440"/></to>
    </wire>
    <wire loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8bfd656d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8c1250480"/></to>
    </wire>
    <wire loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8c1250480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8c11d5a50"/></to>
    </wire>
    <wire loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8c124b600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8bfd64a50"/></to>
    </wire>
    <wire loc="115:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bfd4e760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c12515e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fc8c124c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8bfd5d640"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8bfd5d640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c10da5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c12476a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8bfd56c10"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8bfd56c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc8c10dfa90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c12515e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c11d6c40"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c124e510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c11d4700"/></to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c1255a30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c11d7e80"/></to>
    </wire>
    <wire loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8c11d3e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8c124b600"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fc8c11d3060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fc8c124c370"/></to>
    </wire>
    <wire loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c11cede0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c12476a0"/></to>
    </wire>
    <wire loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fc8c11d2490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c11c5870"/></to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c11c5870"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fc8c11b9060"/></to>
    </wire>
    <wire loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c11cc5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fc8c11cbc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc8c11bb980"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c11b4750"/></to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8c11be3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc8c11b5dc0"/></to>
    </wire>
    <wire loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fc8c1186700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fc8c19b5cc0"/></to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fc8c1184670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fc8c19b1cc0"/></to>
    </wire>
    <wire loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fc8c1182670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fc8c19afcc0"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fc8c117f670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fc8c19a9cc0"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fc8c117d670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fc8c19abcc0"/></to>
    </wire>
    <wire loc="14:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fc8c118b5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fc8c1033430"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc8bfd55440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c10dc9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc8bfd55a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc8c103f890"/></to>
    </wire>
    <wire loc="11:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc8c103f890"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fc8c1033430"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8bfd5a2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c11c5870"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bfd5ca60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c10d8130"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c10d8130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c1047060"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c10d7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bfd4e760"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c10d98a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c1049bf0"/></to>
    </wire>
    <wire loc="106:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c1049bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfce1850"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fc8c10dfa90"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc8c10d55c0"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c10da5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c104ae60"/></to>
    </wire>
    <wire loc="105:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c104ae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8bfce2970"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c10dc9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c10c3020"/></to>
    </wire>
    <wire loc="108:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c1047060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bfce0c30"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c1047930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c10d7020"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c10c24b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c1047060"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fc8c10c3690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8c11be3b0"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fc8c10c3e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc8c11bb980"/></to>
    </wire>
    <wire loc="107:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c1048400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8bfce0020"/></to>
    </wire>
    <wire loc="109:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bfcdf590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c1047930"/></to>
    </wire>
    <wire loc="111:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc8bfcdfd50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc8bfce5750"/></to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fc8bfcdc020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fc8c102c250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fc8c11b9060"/></to>
    </wire>
    <wire loc="18:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fc8c1028d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fc8c19b5cc0"/></to>
    </wire>
    <wire loc="19:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fc8c1026cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fc8c19afcc0"/></to>
    </wire>
    <wire loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0f11c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0f1cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0f15b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0f0f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0f08e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0f0fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0efb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0efd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0f19120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc8c0f03670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0efe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc8c0f13c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0f12c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0f09670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc8c0f0be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0f0e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0f1d760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></to>
    </wire>
    <wire loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0f18aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc8c0f17120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0f02a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0f17870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0efead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0f19dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0f04e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0f12480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0f13480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0f1c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0f05e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0f06670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0f04670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0efcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0efdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc8c0f0a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0f06e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0f00ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0f0c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0efbad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0f1c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc8c0f15370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0f11480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0f09e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0f0ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0f08670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0f10670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc8c0f1b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0f10e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0f16020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc8c0f16cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc8c0f002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0f01ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0f18450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0f012f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc8c0efc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0f0ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0f05670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc8c0f1baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0f19770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0f0ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc8c0f16670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0f0b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0f03e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0efa7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0ee5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0eefda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0ee8b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0ee2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0edbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0ee2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0ece2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0ed12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0eed120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc8c0ed6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0ed22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc8c0ee7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0ee6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0edc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc8c0edfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0ee1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0ef0760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></to>
    </wire>
    <wire loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0eecaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc8c0eea120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0ed5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0eea870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0ed2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0eeddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0ed8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0ee6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0ee7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0eef750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0ed9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0eda670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0ed8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0ecfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0ed1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc8c0edd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0edae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0ed3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0ee0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0ecead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0eef100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc8c0ee8370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0ee5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0edce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0ee1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0edb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0ee3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc8c0eee450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0ee3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0ee9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc8c0ee9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc8c0ed32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0ed4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0eec450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0ed42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc8c0ecf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0edde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0ed9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc8c0eeeaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0eed770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0ee0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc8c0ee9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0edf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0ed6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0ecd7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0ea78c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0e9c020"/></to>
    </wire>
    <wire loc="20:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0e9c020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0e96210"/></to>
    </wire>
    <wire loc="16:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e92cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e82020"/></to>
    </wire>
    <wire loc="21:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e82020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e7f4a0"/></to>
    </wire>
    <wire loc="17:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fc8c0e955b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e33a30"/></to>
    </wire>
    <wire loc="18:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fc8c0e828c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fc8c0e835b0"/></to>
    </wire>
    <wire loc="11:/home/rodrigoct/tinyos-main-master/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fc8c0e835b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c0e319e0"/></to>
    </wire>
    <wire loc="18:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e77b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e57020"/></to>
    </wire>
    <wire loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e57020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e55d20"/></to>
    </wire>
    <wire loc="19:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fc8c0e7fd40"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fc8c0e828c0"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c0e44260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fc8c0e418a0"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fc8c0e418a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c0e3a060"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c0e37190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fc8c1bc3060"/></to>
    </wire>
    <wire loc="9:/home/rodrigoct/tinyos-main-master/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c0e30c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fc8c1a01810"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc8c0e169f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc8c0e0b900"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fc8c0e18190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fc8c0e0a0f0"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fc8c0e0aae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c1603220"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fc8c0dfc500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fc8c1604e50"/></to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc8c0df5820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fc8c14fe080"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fc8c0df4b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fc8c14facd0"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fc8c0dfd880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fc8c14c2150"/></to>
    </wire>
    <wire loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc8c0df2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0d57c30"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0d57c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0df2d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0d558f0"/></to>
    </wire>
    <wire loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0d558f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></to>
    </wire>
    <wire loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0def6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fc8c0d542f0"/></to>
    </wire>
    <wire loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0d542f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc8c0defde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fc8c0d53cc0"/></to>
    </wire>
    <wire loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc8c0d53cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0dee530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0d52370"/></to>
    </wire>
    <wire loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0d52370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0deec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0d51d00"/></to>
    </wire>
    <wire loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0d51d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0df0e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0d4bc60"/></to>
    </wire>
    <wire loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0d4bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0df1780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0d327a0"/></to>
    </wire>
    <wire loc="196:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0d327a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0df0550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0d372f0"/></to>
    </wire>
    <wire loc="186:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0d372f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0dec3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0d4c480"/></to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0d4c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0deb5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0d48e50"/></to>
    </wire>
    <wire loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0d48e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0dea020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0d47670"/></to>
    </wire>
    <wire loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0d47670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc8c0dece80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fc8c0d4e7b0"/></to>
    </wire>
    <wire loc="142:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc8c0d4e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0de99c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0d34ad0"/></to>
    </wire>
    <wire loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0d34ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0dea890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fc8c0d362f0"/></to>
    </wire>
    <wire loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0d362f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0de9130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fc8c0d36ad0"/></to>
    </wire>
    <wire loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0d36ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0de4d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0d26e00"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0d26e00"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0d1d550"/></to>
    </wire>
    <wire loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0e06d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></to>
    </wire>
    <wire loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0e05bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc8c0e02950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c99550"/></to>
    </wire>
    <wire loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0df7be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0c91480"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0c91480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0c838b0"/></to>
    </wire>
    <wire loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c0de76c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0d4ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0d53020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0d4dc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0d40e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0d47e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0d332f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc8c0d3b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc8c0d4cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0d41670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc8c0d44e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0d46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc8c0d4f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0d3aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0d4fac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0d37ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0d51060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0d3de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0d4b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0d54940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0d3ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0d3f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0d3d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc8c0d42670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0d3fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0d38ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0d45670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0d33ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc8c0d4d490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0d4a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0d41e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0d46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0d40670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0d48670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc8c0d53670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0d4e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc8c0d4ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc8c0d382f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0d39ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0d516b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0d392f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc8c0d342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0d42e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0d3e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0d529c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0d45e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0d44670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0d3be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fc8c0d22020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fc8c0d1c7c0"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c0d07150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fc8c0d1b020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fc8c14fe080"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fc8c0d1a380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fc8c14fd380"/></to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fc8c0d186b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fc8c14fc6b0"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc8c0d17a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc8c14c1a20"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fc8c0d166e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0b33d00"/></to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0b33d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0d15530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0b10ad0"/></to>
    </wire>
    <wire loc="195:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0b10ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0d14ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0b2d6b0"/></to>
    </wire>
    <wire loc="137:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0b2d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc8c0d143a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fc8c0b2c370"/></to>
    </wire>
    <wire loc="139:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fc8c0b2c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0d13330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></to>
    </wire>
    <wire loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0d121e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc8c0d10d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c99550"/></to>
    </wire>
    <wire loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c0d12b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16c0550"/></to>
    </wire>
    <wire loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0d0b3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0b25e50"/></to>
    </wire>
    <wire loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0b25e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0d0bcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0b24670"/></to>
    </wire>
    <wire loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0b24670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0d0cb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0b2b160"/></to>
    </wire>
    <wire loc="141:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0b2b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0d096d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0b102f0"/></to>
    </wire>
    <wire loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0b102f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0d0a590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fc8c0b122f0"/></to>
    </wire>
    <wire loc="188:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fc8c0b122f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0d0ae00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fc8c0b12ad0"/></to>
    </wire>
    <wire loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fc8c0b12ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0d08020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0b14ad0"/></to>
    </wire>
    <wire loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0b14ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0d088b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fc8c0b31300"/></to>
    </wire>
    <wire loc="129:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fc8c0b31300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fc8c0cfb9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c0c247c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c1589020"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fc8c0c7e820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0c2d4e0"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fc8c0c80b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0c0fb80"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0c0fb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0b562b0"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0c1c7d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c0b64150"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c0c1d130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0be02a0"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c0be02a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bfbd59d0"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fc8c0b5e640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc8c0bb3830"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc8c0baecd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8c0be0af0"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc8c0be0af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbce5f0"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c0b54690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c0bfc080"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c0bfc080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c0bf7cd0"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8bfbd59d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8bfbb8360"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fc8bfbc8d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbd4260"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbd4260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbb8bf0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8bfbca9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c0bfc080"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfbb5dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfbbe020"/></to>
    </wire>
    <wire loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfbbe020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfbb2440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfbbc760"/></to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfbbc760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfb8e760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfbbba80"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfbbba80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fc8c0bf30f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc8c1580060"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fc8c0ba9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fc8c0b59a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc8c0b4c8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0c1c7d0"/></to>
    </wire>
    <wire loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0b26c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0b30020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0b2ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0b1de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0b24e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0b2f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fc8c0b18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0b142f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fc8c0b29c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0b27c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0b1e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fc8c0b20e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0b23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0b32970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></to>
    </wire>
    <wire loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0b2dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0b17a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0b2cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0b2d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0b19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0b27480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0b29480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0b31950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0b1be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0b1c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0b19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0b11ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fc8c0b1f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0b1ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0b15ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0b22670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fc8c0b2a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0b26480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0b1ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0b23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0b1d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0b25670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fc8c0b30670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fc8c0b2be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fc8c0b152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0b16ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0b162f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fc8c0b112f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0b1fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0b1b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fc8c0b30cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0b2f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0b22e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fc8c0b2b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0b20670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0b18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0b0f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fc8c0ae2920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fc8c0adb940"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c0ae99b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c0adb080"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c0abee60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc8c0ac2020"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc8c0abdae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c0abf690"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc8c0abf690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c12d4280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fc8c0abc8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fc8c0ae5a20"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0abb170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc8c0aa3200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc8c0a9f570"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a9e3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0aa3950"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0a9ea70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a66d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a706b0"/></to>
    </wire>
    <wire loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a65b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a70020"/></to>
    </wire>
    <wire loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0a642f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></to>
    </wire>
    <wire loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0a63170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></to>
    </wire>
    <wire loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc8c0a63b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc8c0a15410"/></to>
    </wire>
    <wire loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fc8c0a37db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fc8c0a09800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c0a05580"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fc8c0a05580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fc8c12d4280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c09f01c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c174f020"/></to>
    </wire>
    <wire loc="273:FWBC.nc">
      <from><interface-ref name="sendDataTask" scoped="" ref="0x7fc8c08ec020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8bfacc020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8bfabf200"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c083cc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8bfaccc30"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8bfaccc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c17c4180"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c083b8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfacb8b0"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfacb8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc8c0838020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fc8bfac9020"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc8bfac9020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c17ad4c0"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8bfabfe70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c089e950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfabeab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></to>
    </wire>
    <wire loc="53:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c089e950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c08514b0"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c0850400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c17d4b00"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c084f060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c084e720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c17c4180"/></to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fc8c084d480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fc8c084dc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c082f2f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c17c4180"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c082e020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc8c04265a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fc8c0451720"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c0420020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c0459020"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c0459020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8bfa5f020"/></to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c0420c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c0459c30"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c0459c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c07ef470"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fc8c04037e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fc8c0424c90"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c07ef470"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c0793d60"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c04588b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07ee120"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07ee120"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07946c0"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fc8c0455020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c07ed800"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c07ed800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c0792a10"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8bfa5fc90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c07ff530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfa5d930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07ee120"/></to>
    </wire>
    <wire loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c07ff530"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c07fb060"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c07fbe20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c07f2b10"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fc8c07f2b10"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fc8c07e9300"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07faa70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07ee120"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fc8c07f80e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fc8c07ef470"/></to>
    </wire>
    <wire loc="169:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fc8c07f8d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fc8c07f75e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c07f5ab0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c078dbb0"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc8c078dbb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c077d7c0"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c07f1e40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c07940d0"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc8c078d560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc8c077d170"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c07872b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c07ec300"/></to>
    </wire>
    <wire loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fc8c07914a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c0789790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0790120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c078ac60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fc8c0782970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fc8c04708e0"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fc8c0789790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fc8c064dde0"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fc8c078ac60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fc8c064d6c0"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fc8c064cc20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fc8c0782970"/></to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c0771020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c07872b0"/></to>
    </wire>
    <wire loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c0649920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c07872b0"/></to>
    </wire>
    <wire loc="72:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c0640cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c07872b0"/></to>
    </wire>
    <wire loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fc8c064b590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fc8c0772c40"/></to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fc8c064be80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fc8c0776720"/></to>
    </wire>
    <wire loc="77:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fc8c0774020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fc8c0645e20"/></to>
    </wire>
    <wire loc="78:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fc8c076b860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c061b0c0"/></to>
    </wire>
    <wire loc="17:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fc8c061b0c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fc8c04830c0"/></to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fc8c0637d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fc8c061b8d0"/></to>
    </wire>
    <wire loc="13:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fc8c061b8d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fc8c0489440"/></to>
    </wire>
    <wire loc="332:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fc8c07166e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fc8c074d4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fc8c071ac70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fc8c0712a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fc8c0647020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fc8c0647800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fc8c0619020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fc8c0488440"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fc8c0488440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fc8c0604020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fc8c0489440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fc8c0607860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0487020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0483920"/></to>
    </wire>
    <wire loc="19:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c0482020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c048a020"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c048a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c06097a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c048ac70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bf99ba90"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bf99ba90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c04cc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0602450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0487020"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bf994be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c0608a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fc8c06031d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8bf99ce00"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8bf99ce00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c04cd280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c06011d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8bf994440"/></to>
    </wire>
    <wire loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8bf994440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc8c04cf510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c0608a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c0596dc0"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fc8c0604020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fc8c0593890"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fc8c0607860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fc8c05946d0"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c06097a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c0596020"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c05913e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0602450"/></to>
    </wire>
    <wire loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fc8c05925b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fc8c06031d0"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c058c5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c06011d0"/></to>
    </wire>
    <wire loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fc8c0591a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c057cd30"/></to>
    </wire>
    <wire loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c057cd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fc8c0575550"/></to>
    </wire>
    <wire loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c058b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc8c04e8110"/></to>
    </wire>
    <wire loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc8c04e8110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc8c1580060"/></to>
    </wire>
    <wire loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc8c0588120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></to>
    </wire>
    <wire loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8c0579860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc8c0570130"/></to>
    </wire>
    <wire loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c057c500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c0578bd0"/></to>
    </wire>
    <wire loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fc8c0570a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fc8c19a5cc0"/></to>
    </wire>
    <wire loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fc8c056e990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fc8c19a3cc0"/></to>
    </wire>
    <wire loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fc8c056c990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fc8c19a1cc0"/></to>
    </wire>
    <wire loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fc8c056a990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fc8c199dcc0"/></to>
    </wire>
    <wire loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fc8c0568990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fc8c199fcc0"/></to>
    </wire>
    <wire loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8bf999a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c057cd30"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bf9992b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04ccd20"/></to>
    </wire>
    <wire loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04ccd20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04c1060"/></to>
    </wire>
    <wire loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c04cbaf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bf994be0"/></to>
    </wire>
    <wire loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c04cc510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c04c3bd0"/></to>
    </wire>
    <wire loc="106:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c04c3bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bf92c3a0"/></to>
    </wire>
    <wire loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fc8c04cf510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fc8c04c9230"/></to>
    </wire>
    <wire loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c04cd280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8c04c4e30"/></to>
    </wire>
    <wire loc="105:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc8c04c4e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc8bf92d540"/></to>
    </wire>
    <wire loc="108:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04c1060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bf92b8b0"/></to>
    </wire>
    <wire loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fc8c04c82f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8c0579860"/></to>
    </wire>
    <wire loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c04c1930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c04cbaf0"/></to>
    </wire>
    <wire loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04c6120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04c1060"/></to>
    </wire>
    <wire loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c04a49d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c04c2400"/></to>
    </wire>
    <wire loc="107:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c04c2400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8bf92cb20"/></to>
    </wire>
    <wire loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c04bcb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c057c500"/></to>
    </wire>
    <wire loc="109:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bf92a210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c04c1930"/></to>
    </wire>
    <wire loc="111:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc8bf92a9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc8bf92f330"/></to>
    </wire>
    <wire loc="75:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fc8bf927c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8bf8f73a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c04bcb20"/></to>
    </wire>
    <wire loc="82:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc8bf8f7b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc8c04a4400"/></to>
    </wire>
    <wire loc="84:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8bf8f60f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c04a49d0"/></to>
    </wire>
    <wire loc="85:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bf8f6d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04a3720"/></to>
    </wire>
    <wire loc="114:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fc8c0419020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fc8c03fc300"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fc8c04037e0"/></to>
    </wire>
    <wire loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc8c03f4220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc8c1c38e00"/></to>
    </wire>
    <wire loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fc8c03f4940"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc8c07f5ab0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/rodrigoct/tinyos-main-master/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/rodrigoct/tinyos-main-master/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/rodrigoct/tinyos-main-master/tos/system/StateImplC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/rodrigoct/tinyos-main-master/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/rodrigoct/tinyos-main-master/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/rodrigoct/tinyos-main-master/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FWBC" loc="45:FWBC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FWBAppC.SenderReq" loc="47(FWBAppC.SenderReq):/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FWBAppC.SenderReq.SenderC" loc="47(FWBAppC.SenderReq.SenderC):/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FWBAppC.SenderReq.SenderC.AMQueueEntryP" loc="43(FWBAppC.SenderReq.SenderC.AMQueueEntryP):/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FWBAppC.ReceiverReq" loc="43(FWBAppC.ReceiverReq):/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FWBAppC.RetryTimerC" loc="44(FWBAppC.RetryTimerC):/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="FWBAppC.PeriodicTimerC" loc="44(FWBAppC.PeriodicTimerC):/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="FWBAppC.PeriodicTimerC2" loc="44(FWBAppC.PeriodicTimerC2):/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="FWBAppC.PeriodicTimerC3" loc="44(FWBAppC.PeriodicTimerC3):/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharP.nc">
      <documentation loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fc8c1b84890" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fc8c1b84c30" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fc8c1b83020" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fc8c1b833a0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fc8c1b83720" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fc8c1b83a90" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fc8c1b83e20" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fc8c1b82200" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fc8c1b825d0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fc8c1b47e80" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fc8c1b44270" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fc8c197e1d0" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fc8c197e580" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fc8c197e930" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fc8c197ece0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fc8c197d0d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fc8c15bc9e0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fc8c15bc9e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fc8c157a160" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fc8c157a160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fc8c1569a70" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fc8c1569a70"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fc8c1566290" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fc8c1566290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fc8c1566680" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fc8c1566680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fc8c1566e60" loc="58:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fc8c1566e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fc8c1565260" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fc8c1565a60" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fc8c1565a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fc8c1546a40" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fc8c1546a40"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fc8c1543290" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fc8c1543290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fc8c1543680" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fc8c1543680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fc8c1543e60" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fc8c1543e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fc8c1542260" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fc8c10bc020" loc="89:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fc8c10b00d0" loc="42:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fc8c1095800" loc="52:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0e53400" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0e53400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc8c0e53b90" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c0e53b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0c2fa70" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0c2fa70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0bd8160" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0bd8160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0ba7750" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0ba7750"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fc8c0ba7a80" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fc8c08c35d0" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fc8c08b9360" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fc8c08b10d0" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fc8c0899c90" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fc8c08363f0" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fc8c080d690" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fc8c04534b0" loc="42:/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fc8c04534b0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fc8c0453830" loc="42:/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fc8c1c34320" loc="58:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1c34320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c346a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fc8c1c38e00" loc="57:/home/rodrigoct/tinyos-main-master/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc8c1c38e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc8c1c371c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c1c35310" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1c35310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c35690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fc8c1c2e380" loc="6:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fc8c1c2e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c2e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c1c2f550" loc="4:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1c2f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c2f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fc8c1c2fc60" loc="5:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fc8c1c2fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fc8c1c2ea60" loc="7:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fc8c1c2ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c2ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c1c316e0" loc="2:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1c316e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c31a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fc8c1c30920" loc="39:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fc8c1c30920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c30ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fc8c1c08de0" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc8c1c08de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fc8c1c0cc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fc8c1c0c310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fc8c1c0c4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fc8c1c0c630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fc8c1c0c180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fc8c1c0c7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fc8c1c0c950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fc8c1c0cae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c1c10860" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1c10860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1c10be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fc8c1bf7350" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc8c1bf7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fc8c1bf6340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fc8c1bf7860"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fc8c1bf79f0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fc8c1bf7b80"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fc8c1bf76d0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fc8c1bf7d10"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fc8c1bf6020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fc8c1bf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fc8c1bf6680" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc8c1bf6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fc8c1bf6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c1bf8b60" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1bf8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1bf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fc8c1bb15a0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fc8c1bb15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1bb1920"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1bb1ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1bb1c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1bb1dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1bb0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1bb01b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1bb0340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1bb04d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1bb0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fc8c1b9f020" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fc8c1b9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b9f3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b9f530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b9f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b9f850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b9f9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b9fb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b9fd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b9e020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b9e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fc8c1ba8700" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fc8c1ba8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ba8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ba8c10"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ba8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ba7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ba71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ba7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fc8c1b8da20" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fc8c1b8da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b8dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b8c020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b8c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b8c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b8c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fc8c1bafaa0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fc8c1bafaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1bafe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1bae020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1bae1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1bae340"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1bae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fc8c1b93020" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fc8c1b93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b933a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b93530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b936c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b93850"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fc8c1b89a20" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fc8c1b89a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b89da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b88020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b881b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b88340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b884d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fc8c1b9a5a0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fc8c1b9a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b9a920"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b9aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b9ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b9add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b99020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b991b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b99340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b994d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fc8c1bb3b10" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fc8c1bb3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1bba020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1bba1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1bba340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1bba4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1bba660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1bba7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1bba980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1bbab10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1bbaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fc8c1b8fa20" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fc8c1b8fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b8fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b8e020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b8e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b8e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b8e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fc8c1b953e0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fc8c1b953e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b95760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b958f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b95a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b95c10"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b95da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fc8c1b9e5a0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fc8c1b9e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b9ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b9ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b9ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b9d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b9d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b9d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b9d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b9d660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fc8c1ba7700" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fc8c1ba7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ba7a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ba7c10"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ba7da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ba1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ba11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ba1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fc8c1b8ca20" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fc8c1b8ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b8cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b8a020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b8a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b8a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b8a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fc8c1b9dbe0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fc8c1b9dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b9c020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b9c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b9c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b9c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b9c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b9c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b9c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b9cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b9cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fc8c1bae890" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fc8c1bae890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1baec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1baeda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1ba9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1ba91b0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ba9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fc8c1bc3060" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fc8c1bc3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1bc33e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1bc3570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1bc3700"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1bc3890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1bc3a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1bc3bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1bc3d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1bc1020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1bc11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1bc1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1bc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fc8c1b93da0" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fc8c1b93da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b92180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b92310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b924a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b92630"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b927c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fc8c1bb90c0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fc8c1bb90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1bb9440"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1bb95d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1bb9760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1bb98f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1bb9a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1bb9c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1bb9da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1bb1020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1bb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fc8c1b99a50" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fc8c1b99a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b99dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b98020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b981b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b98340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b984d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b98660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b987f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b98980"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b98b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fc8c1ba36d0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fc8c1ba36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ba3a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ba3be0"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ba3d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ba8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ba81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ba8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fc8c1b8ea20" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fc8c1b8ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b8eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b8d020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b8d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b8d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b8d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fc8c1babcf0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fc8c1babcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1baf0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1baf230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1baf3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1baf550"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1baf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fc8c1b941f0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fc8c1b941f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b94570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b94700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b94890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b94a20"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b94bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fc8c1b8aa20" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fc8c1b8aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b8ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b89020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b891b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b89340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b894d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fc8c1b9b0c0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fc8c1b9b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b9b440"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b9b5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b9b760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b9b8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b9ba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b9bc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b9bda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b9a020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fc8c1ba16c0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fc8c1ba16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1ba1a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1ba1bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ba1d60"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1ba0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ba01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ba0340"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1ba04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ba0660"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1ba07f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1ba0980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1ba0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fc8c1b92b80" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fc8c1b92b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b91020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b911b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b91340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b914d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fc8c1b90a20" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fc8c1b90a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b90da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1b8f020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1b8f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b8f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b8f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1b8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fc8c1b91a20" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fc8c1b91a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b90020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b901b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b90340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b904d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b90660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fc8c1b96570" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fc8c1b96570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1b968f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1b96a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1b96c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1b96da0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fc8c1b97020" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fc8c1b97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b973a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1b97530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b976c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1b97850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1b979e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b97b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1b97d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1b96020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1b961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fc8c1b50aa0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc8c1b50aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b50e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fc8c1b50450" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fc8c1b50450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b507d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fc8c1b4f120" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc8c1b4f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b4f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fc8c1b51d80" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1b51d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b50180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c1b53540" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1b53540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1b538c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1b53a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b53be0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1b53d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b51020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b511b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1b51340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b514d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1b51660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1b517f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1b51980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fc8c1b49940" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fc8c1b49940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b49cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fc8c1b492f0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fc8c1b492f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b49670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fc8c1b48020" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fc8c1b48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fc8c1b4abf0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1b4abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1b49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c1b4b3e0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1b4b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1b4b760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1b4b8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1b4ba80"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1b4bc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1b4bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1b4a020"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1b4a1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1b4a340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1b4a4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1b4a660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1b4a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1afda90" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1afda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1afde10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1afc020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1afc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1afc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1afc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1afc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1b459d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1b459d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1b45d50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1afe020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1afe1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1afe340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1afe4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1afe660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1afe7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1afe980"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1afeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1afa020" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1afa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1afa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1afede0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1afede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1afd180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1afd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1afd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1afd630"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1afd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1afc930" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1afc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1afccb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1afce40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1afb020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1afb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1afb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1afb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1afb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1afb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1afb980"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1afbb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1afbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1af4160" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1af4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1af44e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1af4670"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1af4800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1af4990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1af4b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1af4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1af6020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1af6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1af63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1af6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1af66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1af6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1af69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1af6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1af6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1af5020"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1af51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1af27a0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1af27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1af2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1af5480" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1af5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1af5800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1af5990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1af5b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1af5cb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1af5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1af3020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1af3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1af33a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1af3530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1af36c0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1af3850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1af39e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1af3b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1af3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1af2020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1af21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1af2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1af24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1aed7a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1aed7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1aedb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1aedcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1aede40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1aec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1aec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1aec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1aef6d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1aef6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1aefa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1aefbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1aefd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1aee020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1aee1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1aee340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1aee4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1aee660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1aee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1aebc50" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1aebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1aea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1aeeac0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1aeeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1aeee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1aed020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1aed1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1aed340"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1aed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1aec610" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1aec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1aec990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1aecb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1aeccb0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1aece40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1aeb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1aeb1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1aeb340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1aeb4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1aeb660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1aeb7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1aeb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1ae5cb0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1ae5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ae40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ae4230"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ae43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ae4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ae46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ae4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1ae8b30" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1ae8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1ae6020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1ae61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ae6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1ae64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1ae6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ae67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1ae6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1ae6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1ae6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1ae22f0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1ae22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ae2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1ae5020" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1ae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ae53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1ae5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1ae56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1ae5850"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ae59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1ae4b40" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1ae4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1ae3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1ae31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ae3340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1ae34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ae3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ae37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1ae3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ae3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1ae3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1ae3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1ae2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1add2f0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1add2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1add670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1add800"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1add990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1addb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1addcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1adde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1adf220" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1adf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1adf5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1adf730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1adf8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1adfa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1adfbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1adfd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1ade020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1ade1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1ade340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1adb7a0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1adb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1adbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1ade610" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1ade610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ade990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1adeb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1adecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1adee40"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1add020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1adc160" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1adc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1adc4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1adc670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1adc800"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1adc990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1adcb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1adccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1adce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1adb020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1adb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1adb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1adb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1ad57a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1ad57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ad5b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ad5cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ad5e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ad4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ad41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ad4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1ad86d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1ad86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1ad8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1ad8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ad8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1ad6020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1ad61b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ad6340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1ad64d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1ad6660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1ad67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1ad3c50" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1ad3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ad2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1ad6ac0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1ad6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ad6e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1ad5020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1ad51b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1ad5340"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ad54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1ad4610" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1ad4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1ad4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1ad4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ad4cb0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1ad4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ad3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ad31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1ad3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ad34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1ad3660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1ad37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1ad3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1acecb0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1acecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1acd0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1acd230"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1acd3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1acd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1acd6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1acd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1ad0b30" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1ad0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1acf020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1acf1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1acf340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1acf4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1acf660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1acf7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1acf980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1acfb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1acfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1acb2f0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1acb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1acb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1ace020" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1ace020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ace3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1ace530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1ace6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1ace850"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ace9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1acdb40" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1acdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1acc020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1acc1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1acc340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1acc4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1acc660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1acc7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1acc980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1accb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1accca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1acce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1acb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1ac52f0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1ac52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ac5670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ac5800"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ac5990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ac5b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ac5cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ac5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1ac8220" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1ac8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1ac85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1ac8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ac88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1ac8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1ac8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ac8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1ac7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1ac71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1ac7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1ac37a0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1ac37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ac3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1ac7610" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1ac7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ac7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1ac7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1ac7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1ac7e40"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ac5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1ac4160" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1ac4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1ac44e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1ac4670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ac4800"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1ac4990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ac4b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ac4cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1ac4e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ac3020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1ac31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1ac3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1ac34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1abe7a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1abe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1abeb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1abecb0"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1abee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1abd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1abd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1abd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1ac06d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1ac06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1ac0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1ac0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ac0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1abf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1abf1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1abf340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1abf4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1abf660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1abf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1abcc50" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1abcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1abb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1abfac0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1abfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1abfe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1abe020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1abe1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1abe340"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1abe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1abd610" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1abd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1abd990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1abdb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1abdcb0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1abde40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1abc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1abc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1abc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1abc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1abc660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1abc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1abc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c1ab7cb0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c1ab7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ab50a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c1ab5230"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c1ab53c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ab5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ab56e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c1ab5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fc8c1ab9b30" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fc8c1ab9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c1ab8020"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c1ab81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ab8340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c1ab84d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c1ab8660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ab87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c1ab8980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c1ab8b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c1ab8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fc8c1ab32f0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fc8c1ab32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ab3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc8c1ab7020" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fc8c1ab7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c1ab73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c1ab7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c1ab76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c1ab7850"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ab79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc8c1ab5b40" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c1ab5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1ab4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c1ab41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c1ab4340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1ab44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c1ab4660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1ab47f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c1ab4980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1ab4b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1ab4ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c1ab4e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c1ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fc8c1aad240" loc="7:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fc8c1aad240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1aad5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fc8c1ab1aa0" loc="4:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fc8c1ab1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1ab1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fc8c1aae260" loc="5:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fc8c1aae260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1aae5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fc8c1aae9f0" loc="6:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fc8c1aae9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1aaed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fc8c1dad4c0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc8c1dad4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fc8c1dad840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fc8c20c13b0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fc8c20c13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fc8c20c1730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fc8c20c18c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fc8c20c1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fc8c1ee9be0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fc8c1ee9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fc8c2025020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fc8c1c0eb60" loc="39:/home/rodrigoct/tinyos-main-master/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fc8c1c0eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fc8c1a79b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fc8c1a791b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fc8c1a79340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fc8c1a794d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fc8c1a79020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fc8c1a79660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fc8c1a797f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fc8c1a79980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fc8c1a6adc0" loc="60:/home/rodrigoct/tinyos-main-master/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fc8c1a6adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1a69180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fc8c1a7a590" loc="57:/home/rodrigoct/tinyos-main-master/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc8c1a7a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc8c1a7a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fc8c1a6a6c0" loc="59:/home/rodrigoct/tinyos-main-master/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fc8c1a6a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1a6aa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fc8c1a7ac00" loc="58:/home/rodrigoct/tinyos-main-master/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fc8c1a7ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1a6a020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc8c1a6a1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc8c1a6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fc8c21994f0" loc="48:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c21994f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c2199870"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c2199a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fc8c212a3a0" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fc8c212a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c212a720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc8c212a8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc8c212aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fc8c1cd2040" loc="56:/home/rodrigoct/tinyos-main-master/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fc8c1cd2040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c1cd23c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c1cd2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fc8c1cce490" loc="57:/home/rodrigoct/tinyos-main-master/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fc8c1cce490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fc8c1cce810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fc8c1cce9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fc8c1cceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fc8c1cd4140" loc="55:/home/rodrigoct/tinyos-main-master/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fc8c1cd4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1cd44c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc8c1cd4650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc8c1cd47e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc8c1a53330" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c1a53330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c1a536b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c1a53840"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c1a539d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c1a53b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c1a53cf0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a53e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c1a5e030"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c1a5e670"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a5e1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c1a5e350"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c1a5e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fc8c1a471d0" loc="50:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fc8c1a471d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a47550"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a476e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a47870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a47a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a47b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a47d20"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a4d020"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a4d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c1a51600" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1a51600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1a51980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fc8c1a4d4d0" loc="51:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fc8c1a4d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a4d850"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a4d9e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a4db70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a4dd00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a4c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a4c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a4c340"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc8c1a51c00" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c1a51c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c1a4f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c1a4f1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c1a4f340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c1a4f4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c1a4f660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a4f7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c1a4f980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c1a4e020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a4fb10"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c1a4fca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c1a4fe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fc8c1a4c7f0" loc="52:/home/rodrigoct/tinyos-main-master/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fc8c1a4c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a4cb70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a4cd00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a46020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a461b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a46340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a464d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a46660"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fc8c1a52da0" loc="41:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fc8c1a52da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a2b180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a2b310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a2b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a2b630"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a2b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a2b950"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a2bae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a2bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fc8c1a2a020" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fc8c1a2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a2a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a2a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a2a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a2a850"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a2a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a2ab70"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a2ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a29020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fc8c1a28600" loc="44:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c1a28600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1a28980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fc8c1a29380" loc="43:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fc8c1a29380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a29700"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a29890"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a29a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a29bb0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a29d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a28020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a281b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fc8c1a11810" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fc8c1a11810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a11b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a11d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a10020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a10340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a10660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a107f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a10980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a10b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a10ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a10e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a0f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a0f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a0f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fc8c19fd810" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fc8c19fd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19fdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19fdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19fc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19fc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19fc660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19fc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19fc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19fcb10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19fcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19fce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19fb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19fb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19fb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fc8c19b3ca0" loc="145:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fc8c19b3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19b2a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19b1020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19b1760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fc8c198fcb0" loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fc8c198fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c198e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c198e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c198e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c198e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c198e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c198e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c198ea00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c198eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c198ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c198d020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c198d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c198d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c198d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c198d760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c198d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fc8c19b1cc0" loc="146:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fc8c19b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19b0a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19af020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19af760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fc8c19f9810" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fc8c19f9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19f9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19f9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19f8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19f81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19f8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19f84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19f8660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19f87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19f8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19f8b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19f8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19f8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19f7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19f72b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fc8c19e49a0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fc8c19e49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19e4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19e3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19e31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19e3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19e34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19e3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19e37f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19e3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19e3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19e3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19e2440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19e25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fc8c19d09a0" loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fc8c19d09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19d0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19cf020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19cf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19cf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19cf7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19cf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19cfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19cfca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19cfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19ce020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ce1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ce440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ce5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fc8c19c09a0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fc8c19c09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19c0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19bf020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19bf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19bf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19bf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19bf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19bf7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19bf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19bfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19bfca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19bfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19be020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19be1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19be440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19be5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fc8c19abcc0" loc="149:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fc8c19abcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19aa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19aa230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19aa3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19aa550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19aa6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19aa870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19aaa00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19aab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19aad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19a9020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19a91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19a9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19a94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19a9760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19a98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fc8c199bcb0" loc="159:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fc8c199bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c199a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c199a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c199a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c199a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c199a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c199a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c199aa00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c199ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c199ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1999020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1999340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1999760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19998f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fc8c1986cc0" loc="171:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fc8c1986cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1985230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19853c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1985550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19856e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1985870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1985a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1985b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1985d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1984020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19841b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1984340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19844d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1984760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19848f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fc8c1a0b810" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fc8c1a0b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a0bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a0bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a0a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a0a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a0a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a0a660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a0a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a0a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a0ab10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a0aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a0ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a09020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a092b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a09440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fc8c19a9cc0" loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fc8c19a9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19a80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19a8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19a83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19a8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19a86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19a8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19a8a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19a8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19a8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19a7020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19a7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19a74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19a7760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19a78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fc8c1a07810" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fc8c1a07810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a07b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a07d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a06020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a06340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a06660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a067f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a06980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a06b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a06ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a06e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a05020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a052b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a05440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fc8c19f3810" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fc8c19f3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19f3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19f3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19f2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19f2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19f2660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19f27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19f2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19f2b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19f2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19f2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19f1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19f12b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19f1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fc8c19de9a0" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fc8c19de9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ded20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19dd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19dd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19dd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19dd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19dd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19dd7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19dd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19ddb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19ddca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19dde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19dc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19dc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19dc440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19dc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fc8c19ca9a0" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fc8c19ca9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19cad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19c9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19c91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19c9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19c94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19c9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19c97f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19c9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19c9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19c9ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19c9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19c8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19c81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19c8440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19c85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fc8c19b99a0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fc8c19b99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19b9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19b8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19b81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19b8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19b84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19b87f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19b8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19b8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19b8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19b8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19b7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19b71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19b7440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19b75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fc8c1a15810" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fc8c1a15810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a15b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a15d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a14020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a14340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a14660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a147f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a14980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a14b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a14ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a14e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a13020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a132b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a13440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fc8c1a01810" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fc8c1a01810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a01c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a01e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a00020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a001b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a00340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a004d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a00660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a007f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a00980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a00b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a00ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a00e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ff020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ff2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ff440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fc8c19ed810" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fc8c19ed810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19edb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19edd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19ec1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19ec340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19ec660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19ec7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19ec980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19ecb10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19ecca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19ece30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19eb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19eb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19eb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fc8c19b5cc0" loc="144:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fc8c19b5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19b4a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19b3020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19b3760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fc8c1995cb0" loc="162:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fc8c1995cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19940a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1994230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19943c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1994550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19946e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1994870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1994a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1994b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1994d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1993020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19931b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1993340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19934d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1993760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fc8c1988cb0" loc="169:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fc8c1988cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1987230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19873c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1987550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19876e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1987870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1987a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1987b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1987d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1986020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19861b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1986340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19864d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1986760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19868f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fc8c19a1cc0" loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fc8c19a1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19a00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19a0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19a03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19a0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19a06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19a0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19a0a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19a0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19a0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c199f020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c199f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c199f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c199f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c199f760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c199f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fc8c19e8810" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fc8c19e8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19e8d90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19e77f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19e6440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fc8c19d49a0" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fc8c19d49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19d4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19d3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19d31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19d3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19d34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19d3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19d37f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19d3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19d3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19d3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19d3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19d2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19d21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19d2440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19d25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fc8c19c49a0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fc8c19c49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19c4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19c3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19c31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19c3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19c34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19c3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19c37f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19c3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19c3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19c3ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19c3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19c2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19c21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19c2440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19c25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fc8c1993cb0" loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fc8c1993cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1992230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19923c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1992550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19926e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1992870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1992a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1992b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1992d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1991020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1991340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1991760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fc8c19a7cb0" loc="152:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fc8c19a7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19a6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19a63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19a6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19a66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19a6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19a6a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19a6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19a6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19a5020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19a51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19a5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19a54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19a5760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19a58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fc8c1a0f810" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fc8c1a0f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a0fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a0fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a0e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a0e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a0e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a0e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a0e660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a0e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a0e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a0eb10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a0eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a0ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a0d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a0d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a0d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fc8c19fb810" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fc8c19fb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19fbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19fbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19fa340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19fa660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19fa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19fa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19fab10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19faca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19fae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19f9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19f92b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19f9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fc8c19c89a0" loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fc8c19c89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19c8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19c7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19c71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19c74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19c7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19c77f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19c7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19c7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19c7ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19c7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19c6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19c61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19c6440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19c65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fc8c19f7810" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fc8c19f7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19f7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19f7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19f6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19f6660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19f67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19f6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19f6b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19f6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19f6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19f5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19f52b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19f5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fc8c19e29a0" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fc8c19e29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19e2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19e1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19e14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19e17f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19e1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19e1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19e1ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19e1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19e0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19e01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19e0440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19e05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fc8c19ce9a0" loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fc8c19ce9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ced20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19cd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19cd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19cd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19cd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19cd7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19cd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19cdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19cdca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19cde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19cc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19cc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19cc440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19cc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fc8c19be9a0" loc="109:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fc8c19be9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19bed20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19bd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19bd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19bd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19bd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19bd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19bd7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19bd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19bdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19bdca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19bde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19bc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19bc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19bc440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19bc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fc8c19a3cc0" loc="154:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fc8c19a3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19a20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19a2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19a23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19a2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19a26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19a2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19a2a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19a2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19a2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19a1020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19a11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19a1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19a14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19a1760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fc8c1a18870" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fc8c1a18870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a18bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a18d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a23020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a23340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a23660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a237f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a23980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a23b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a23ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a23e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a22020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a222b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a22440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fc8c1a05810" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fc8c1a05810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a05b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a05d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a04020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a04340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a04660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a04980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a04b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a04ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a04e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a03020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a032b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a03440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fc8c19f1810" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fc8c19f1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19f1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19f1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19f01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19f0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19f04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19f0660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19f07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19f0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19f0b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19f0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19f0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ef020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ef2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ef440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fc8c19dc9a0" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fc8c19dc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19dcd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19db020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19db340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19db4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19db7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19db980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19dbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19dbca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19dbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19da020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19da1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19da440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19da5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fc8c199fcc0" loc="156:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fc8c199fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c199e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c199e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c199e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c199e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c199e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c199e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c199ea00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c199eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c199ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c199d020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c199d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c199d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c199d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c199d760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c199d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fc8c1999cb0" loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fc8c1999cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19980a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1998230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19983c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1998550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19986e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1998870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1998a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1998b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1998d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1997020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19971b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1997340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19974d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1997760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fc8c198dcb0" loc="166:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fc8c198dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c198b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c198b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c198b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c198b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c198b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c198b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c198ba00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c198bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c198bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c198a020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c198a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c198a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c198a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c198a760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c198a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fc8c19d89a0" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fc8c19d89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19d8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19d7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19d71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19d7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19d74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19d7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19d77f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19d7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19d7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19d7ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19d7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19d6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19d61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19d6440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19d65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fc8c199dcc0" loc="157:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fc8c199dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c199c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c199c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c199c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c199c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c199c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c199c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c199ca00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c199cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c199cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c199b020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c199b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c199b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c199b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c199b760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c199b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fc8c1a13810" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fc8c1a13810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a13b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a13d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a12020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a12340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a12660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a12980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a12b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a12ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a12e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a11020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a112b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a11440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fc8c19ff810" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fc8c19ff810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ffb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19ffd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19fe340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19fe660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19fe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19fe980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19feb10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19feca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19fee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19fd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19fd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fc8c19eb810" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fc8c19eb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ebb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19ebd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19e9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19e91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19e9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19e94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19e9660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19e9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19e9b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19e9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19e9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19e8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19e82b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19e8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fc8c19a5cc0" loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fc8c19a5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19a40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19a4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19a43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19a4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19a46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19a4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19a4a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19a4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19a4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19a3020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19a31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19a3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19a34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19a3760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fc8c1991cb0" loc="164:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fc8c1991cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1990230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19903c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1990550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19906e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1990870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1990a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1990b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1990d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c198f020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c198f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c198f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c198f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c198f760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c198f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fc8c19e69a0" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fc8c19e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19e5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19e54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19e57f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19e5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19e5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19e5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19e4440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fc8c19d29a0" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fc8c19d29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19d2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19d1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19d11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19d1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19d14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19d1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19d17f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19d1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19d1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19d1ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19d1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19d0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19d01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19d0440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19d05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fc8c19c29a0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fc8c19c29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19c2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19c1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19c14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19c1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19c17f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19c1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19c1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19c1ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19c1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19c0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19c01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19c0440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19c05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fc8c1a0d810" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fc8c1a0d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a0db90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a0dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a0c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a0c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a0c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a0c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a0c660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a0c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a0c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a0cb10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a0cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a0ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a0b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a0b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a0b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fc8c19c69a0" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fc8c19c69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19c6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19c5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19c51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19c5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19c54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19c5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19c57f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19c5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19c5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19c5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19c5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19c4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19c41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19c4440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19c45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fc8c1a09810" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fc8c1a09810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a09b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a09d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a08020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a08340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a08660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a087f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a08980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a08b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a08ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a08e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a07020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a072b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a07440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fc8c19f5810" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fc8c19f5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19f5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19f5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19f4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19f41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19f4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19f44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19f4660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19f47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19f4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19f4b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19f4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19f4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19f3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19f32b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19f3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fc8c19e09a0" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fc8c19e09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19e0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19df020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19df1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19df340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19df4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19df660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19df7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19df980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19dfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19dfca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19dfe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19de020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19de1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19de440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19de5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fc8c19cc9a0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fc8c19cc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ccd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19cb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19cb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19cb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19cb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19cb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19cb7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19cb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19cbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19cbca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19cbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19ca020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ca1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ca440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ca5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fc8c19bc9a0" loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fc8c19bc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19bcd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19ba020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19ba4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19ba7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19bab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19baca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19bae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19b91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19b9440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19b95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fc8c1a22810" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fc8c1a22810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a22b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a22d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a16020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a16340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a16660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a16980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a16b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a16ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a16e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a15020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a152b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a15440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fc8c1a03810" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fc8c1a03810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1a03b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1a03d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1a02020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1a021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1a02340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1a024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1a02660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1a027f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1a02980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1a02b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1a02ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1a02e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1a01020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1a012b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1a01440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fc8c19ef810" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fc8c19ef810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19efb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19efd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19ee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19ee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19ee340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19ee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19ee660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19ee7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19ee980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19eeb10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19eeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19eee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ed020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ed2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ed440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fc8c19da9a0" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fc8c19da9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19dad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19d9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19d91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19d9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19d94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19d9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19d97f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19d9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19d9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19d9ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19d9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19d8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19d81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19d8440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19d85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fc8c19adca0" loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fc8c19adca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19ac230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19ac3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19ac550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19ac6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19ac870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19aca00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19acb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19acd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19ab020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ab760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fc8c1997cb0" loc="161:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fc8c1997cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1996230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19963c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1996550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19966e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1996870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1996a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1996b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1996d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1995020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19951b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1995340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19954d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1995760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19958f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fc8c19afcc0" loc="147:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fc8c19afcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19ae230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19ae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19ae550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19ae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19ae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19aea00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19aeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19aed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19ad020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19ad760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fc8c19d69a0" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fc8c19d69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19d6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19d5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19d5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19d54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19d5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19d57f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19d5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19d5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19d5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19d5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19d4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19d41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19d4440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19d45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fc8c198acb0" loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fc8c198acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19890a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1989230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19893c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1989550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19896e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1989870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1989a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1989b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1989d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1988020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19881b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1988340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19884d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1988760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19888f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fc8c1984cc0" loc="172:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fc8c1984cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1983230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19833c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1983550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19836e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1983870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1983a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1983b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1983d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1982020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1982340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1982760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fc8c19b79f0" loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fc8c19b79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19b61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c19b6350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19b64e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c19b6670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19b6800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19b6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19b6b20"/>
        <function-ref name="get" scoped="" ref="0x7fc8c19b6cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19b6e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c19b5020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c19b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c19b5760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c197fd10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c197fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19580e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1958270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1958400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1958590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1958720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19588b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1958a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1958bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1958d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1957020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1957340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1957760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1954740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1954740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1954ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1954c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1954de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1953020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19531b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1953340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19534d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1953660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19537f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1953980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1953b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1953ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1953e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1952120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c194f100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c194f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c194f480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c194f610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c194f7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c194f930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c194fac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c194fc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c194fde0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c194e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c194e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c194e340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c194e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c194e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c194e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c194ea80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c194ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c194bd10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c194bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c194a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c194a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c194a400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c194a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c194a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c194a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c194aa40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c194abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c194ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1949020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1949340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1949760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1946740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1946740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1946ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1946c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1946de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1945020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1945340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19454d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1945660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1945980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1945b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1945ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1945e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1944120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1941100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1941100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1941480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1941610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19417a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1941930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1941ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1941c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1941de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c193f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c193f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c193f340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c193f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c193f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c193f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c193fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c193fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c193cd10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c193cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c193b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c193b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c193b400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c193b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c193b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c193b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c193ba40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c193bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c193bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c193a020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c193a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c193a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c193a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c193a760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c193a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1937740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1937740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1937ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1937c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1937de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1936020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1936340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19364d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1936660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1936980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1936b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1936ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1936e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1935120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1932100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1932100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1932480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1932610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19327a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1932930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1932ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1932c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1932de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1931020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1931340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1931660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1931a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1931c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c192ed10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c192ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c192d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c192d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c192d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c192d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c192d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c192d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c192da40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c192dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c192dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c192c020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c192c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c192c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c192c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c192c760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c192c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1929740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1929740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1929ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1929c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1929de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1928020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1928340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19284d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1928660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1928980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1928b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1928ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1928e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1927120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1924100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1924100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1924480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1924610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19247a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1924930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1924ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1924c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1924de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1923020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1923340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1923660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1923a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1923c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1920d80" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1920d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c191f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c191f310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c191f4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c191f630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c191f7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c191f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c191fae0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c191fc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c191fe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c191e020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c191e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c191e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c191e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c191e760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c191e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c191a740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c191a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c191aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c191ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c191ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1919020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c19191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1919340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c19194d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1919660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1919980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1919b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1919ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1919e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1918120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1915100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1915100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1915480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1915610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19157a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1915930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1915ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1915c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1915de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1914020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1914340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1914660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1914a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1914c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1911d10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1911d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19100e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1910270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1910400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1910590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1910720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19108b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1910a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1910bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1910d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c190f020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c190f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c190f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c190f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c190f760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c190f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c190c740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c190c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c190cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c190cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c190cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c190b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c190b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c190b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c190b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c190b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c190b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c190b980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c190bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c190bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c190be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c190a120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c190a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1907100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1907100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1907480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1907610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c19077a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1907930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1907ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1907c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1907de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1906020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c19061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1906340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1906660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1906a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1906c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1903d10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1903d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c19020e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1902270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1902400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1902590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1902720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c19028b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1902a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1902bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1902d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1901020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c19011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1901340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c19014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1901760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c19018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18fe740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18fe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18feac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18fec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18fede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18fd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18fd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18fd980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18fdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18fdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18fde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18fc120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18f9100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18f9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18f9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18f97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18f9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18f9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18f9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18f9de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18f7340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18f7a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18f4d10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18f4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18f3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18f3400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18f3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18f3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18f38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18f3a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18f3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18f3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18f2020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18f2760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18ef740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18efac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18efc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18efde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18ee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18ee980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18eeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18eeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18eee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18ed120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18ea100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18ea480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18ea610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18ea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18ea930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18eaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18eac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18eade0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18e9340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18e9a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18e6e60" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18e6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18e5210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18e53a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18e5530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18e56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18e5850"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18e59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18e5b70"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18e5d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18e4020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18e41b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18e4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18e44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18e4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18e48f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18e4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18e19f0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18e19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18e1d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18e0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18e04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18e07f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18e0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18e0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18e0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18e0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18df020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18df1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18df440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18df5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18dc460" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18dc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18dc7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18dc970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18dcb00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18dcc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18dce20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18db1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18db340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18db4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18db660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18db7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18db980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18dbb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18dbda0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18d8e00" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18d8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18d71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18d7350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18d74e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18d7670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18d7800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18d7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18d7b20"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18d7cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18d7e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18d6020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18d6760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18d3740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18d3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18d3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18d3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18d3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18d14d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18d1980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18d0120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18cd100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18cd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18cd480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18cd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18cd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18cd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18cdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18cdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18cdde0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18cc340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18cca80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18c9d10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18c9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18c80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18c8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18c8400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18c8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18c8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18c88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18c8a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18c8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18c8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18c7020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18c7760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18c4740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18c4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18c4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18c4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18c4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18c34d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18c37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18c3980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18c3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18c3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18c3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18c2120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18bf100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18bf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18bf480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18bf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18bf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18bf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18bfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18bfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18bfde0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18be020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18be1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18be340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18be4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18be660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18be7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18bea80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18bbd10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18bbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18ba0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18ba270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18ba400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18ba590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18ba720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18ba8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18baa40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18babd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18bad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18b9020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18b9760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18b6740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18b6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18b6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18b6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18b6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18b5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18b54d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18b5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18b57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18b5980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18b5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18b5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18b5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18b4120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18b1100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18b1480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18b1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18b17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18b1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18b1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18b1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18b1de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18b0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18b01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18b0340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18b04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18b0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18b07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18b0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18b0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18acd10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18acd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18ab0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18ab270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18ab400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18ab590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18ab720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18ab8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18aba40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18abbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18abd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18aa020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18aa760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18a7740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18a7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18a7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18a7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18a7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18a61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18a6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18a64d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18a6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18a67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18a6980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18a6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18a6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18a6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18a5120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c18a2100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c18a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18a2480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c18a2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18a27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18a2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18a2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18a2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18a2de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18a1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18a11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c18a1340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18a14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c18a1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18a17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c18a1a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18a1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c189ed10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c189ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c189d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c189d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c189d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c189d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c189d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c189d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c189da40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c189dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c189dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c189c020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c189c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c189c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c189c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c189c760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c189c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1899740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1899740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1899ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1899c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1899de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1898020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18981b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1898340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18984d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1898660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18987f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1898980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1898b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1898ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1898e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1897120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18972b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1894100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1894100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1894480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1894610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18947a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1894930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1894ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1894c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1894de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1893020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18931b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1893340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18934d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1893660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18937f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1893a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1893c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1890d10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1890d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c188f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c188f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c188f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c188f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c188f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c188f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c188fa40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c188fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c188fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c188e020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c188e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c188e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c188e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c188e760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c188e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c188b740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c188b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c188bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c188bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c188bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1889020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c18891b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1889340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c18894d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1889660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1889980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1889b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1889ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1889e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1888120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c18882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1885100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1885100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1885480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1885610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18857a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1885930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1885ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1885c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1885de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1884020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1884340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1884660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1884a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1884c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1881d10" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1881d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1880270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1880400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1880590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1880720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c18808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1880a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1880bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1880d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c187f020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c187f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c187f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c187f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c187f760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c187f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c187c740" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c187c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c187cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c187cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c187cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c187b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c187b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c187b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c187b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c187b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c187b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c187b980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c187bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c187bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c187be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c187a120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c187a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc8c1877100" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fc8c1877100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1877480"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1877610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c18777a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1877930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1877ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1877c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1877de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1876020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c18761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1876340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c18764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1876660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c18767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1876a80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c1876c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c17ff2f0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c17ff2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c17ff670"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c17ff800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c17ff990"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c17ffb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c17ffcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c17ffe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c17fe020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c17fe1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c17fe340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c17fe4d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17fe660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c17fe7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c17fe980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c17fec10"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c17feda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c1810020" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c1810020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c18103a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1810530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c18106c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1810850"/>
        <function-ref name="get" scoped="" ref="0x7fc8c18109e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1810b70"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1810d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c17ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c17fbde0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c17fbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c17fa180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c17fa310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c17fa4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c17fa630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c17fa7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c17fa950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c17faae0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c17fac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c17fae00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c17f9020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c17f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c17f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c17f9760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c17f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c17fcb90" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c17fcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c17fb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c17fb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c17fb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c17fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c17fb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c17fb7f0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17fb980"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c17fbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c17f5930" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c17f5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c17f5cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c17f5e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c17f4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c17f41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c17f4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c17f44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c17f4660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c17f47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c17f4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c17f4b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17f4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c17f4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c17f3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c17f32b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c17f3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c17f6710" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c17f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c17f6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c17f6c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c17f6db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c17f5020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c17f51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c17f5340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17f54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c17f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c17dfe40" loc="61:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c17dfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c17e31e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c17e3370"/>
        <function-ref name="start" scoped="" ref="0x7fc8c17e3500"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c17e3690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c17d4b00" loc="63:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c17d4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c17d4e80"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c17e2030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c17e21c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c17e2350"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c17e24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fc8c17d5880" loc="65:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fc8c17d5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c17d5c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c17c4180" loc="67:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c17c4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c17c4500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c17c4690"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c17c4820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c17c49b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c17c4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fc8c17a56b0" loc="70:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c17a56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c17b3ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c17b1460"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c17b35b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17b1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc8c17975b0" loc="72:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c17975b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc8c1797930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc8c1797ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc8c1797c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc8c1797de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c17cfb10" loc="64:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c17cfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c17d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc8c17ad4c0" loc="69:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c17ad4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c17ad840"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c17ad9d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c17adb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c17b51e0" loc="68:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c17b51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c17b5560"/>
        <function-ref name="source" scoped="" ref="0x7fc8c17b56f0"/>
        <function-ref name="address" scoped="" ref="0x7fc8c17b5880"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c17b5a10"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c17b5ba0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c17b5d30"/>
        <function-ref name="type" scoped="" ref="0x7fc8c17cd020"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c17cd1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c17cd340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c17cd4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c17cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fc8c17a4840" loc="71:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c17a4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c17a3dd0"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c17a2540"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c17a36a0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c17a2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c178c680" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c178c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c178ca00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c178cb90"/>
        <function-ref name="start" scoped="" ref="0x7fc8c178cd20"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c178b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc8c1772d40" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c1772d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c177b0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c177b270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c177b400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c177b590"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c177b720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c177b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fc8c1765d20" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fc8c1765d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fc8c17701c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c1787760" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c1787760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1787ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c1787c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c1787e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c1785020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c17851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c178b7f0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c178b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c178bb70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c178bd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c178a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c178a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c178a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fc8c1789880" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fc8c1789880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c1789c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc8c177d970" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c177d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c177dcf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c177de80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c1784030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c17841c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c1784350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c17844e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc8c177bbb0" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c177bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc8c1779020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc8c17791b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc8c1779340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc8c17794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c178ab20" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c178ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c1789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc8c1784810" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c1784810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c1784b90"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c1784d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c1783020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc8c1771020" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc8c1771020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc8c17713a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc8c1771530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc8c17716c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc8c1771850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc8c17719e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c1788020" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c1788020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c17883a0"/>
        <function-ref name="source" scoped="" ref="0x7fc8c1788530"/>
        <function-ref name="address" scoped="" ref="0x7fc8c17886c0"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c1788850"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c17889e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c1788b70"/>
        <function-ref name="type" scoped="" ref="0x7fc8c1788d00"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c1787020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c17871b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c1787340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c17874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc8c177aa80" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c177aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc8c177ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c1768b90" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c1768b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c1762020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c17621b0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c1762340"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c17624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc8c174f9d0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c174f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc8c174fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc8c174eb70" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc8c174eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc8c174c020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc8c174c1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc8c174c340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc8c174c4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc8c174c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc8c1750020" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c1750020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c17503a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c1750530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c17506c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c1750850"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c17509e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c1750b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fc8c175a990" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c175a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c175ad10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c1752020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c17521b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c1752340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c17524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc8c174e080" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c174e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc8c174e400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc8c174e590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc8c174e720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc8c174e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fc8c175b500" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fc8c175b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c175b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc8c174f020" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c174f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c174f3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c174f530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c174f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c1761210" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c1761210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1761590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1761720"/>
        <function-ref name="request" scoped="" ref="0x7fc8c17618b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c1761a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1761bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fc8c17516f0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fc8c17516f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c1751a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c1751c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c1751d90"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c175b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c175b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fc8c175bbc0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fc8c175bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c175a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c175a1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c175a340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c175a4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c175a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fc8c1752840" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c1752840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c1752bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c17493b0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c17493b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c1749730"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c17498c0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c1749a50"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c1749be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc8c17463b0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c17463b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c1746730"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c17468c0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c1746a50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c1746be0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c1746d70"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c1745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c1747020" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c1747020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c17473a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c1747530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c17476c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c1747850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c17479e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c1747cc0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c1747cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c17460a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c1742080" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c1742080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c1742400"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c1742590"/>
        <function-ref name="start" scoped="" ref="0x7fc8c1742720"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c17428b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc8c1741970" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c1741970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c1741cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c1741e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c1740030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c17401c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c1740350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c17404e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fc8c1736570" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fc8c1736570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c17368f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c1736a80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c1736c10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c1736da0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c1734020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c17341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc8c172b970" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c172b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c172bcf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c172be80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c1729030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c17291c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c1729350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c17294e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fc8c172d6c0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc8c172d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c172da40"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c172dbd0"/>
        <function-ref name="modify" scoped="" ref="0x7fc8c172dd60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c1736020"/>
        <function-ref name="resend" scoped="" ref="0x7fc8c17361b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c1742b70" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c1742b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c1741020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c17411b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c1741340"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c17414d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c1741660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fc8c172a9d0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc8c172a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc8c172ad50"/>
        <function-ref name="rand32" scoped="" ref="0x7fc8c172c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fc8c1735840" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fc8c1735840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c1735bc0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c1735d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c1728020" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c1728020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c17283a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c1728530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c17286c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fc8c1738cd0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c1738cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fc8c173e0a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fc8c173e230"/>
        <function-ref name="rxOn" scoped="" ref="0x7fc8c173e3c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fc8c173e550"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fc8c173e6e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fc8c173e870"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fc8c173ea00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fc8c173eb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c172c2e0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c172c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c172c660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c172c7f0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c172c980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c172cb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c172cca0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c172ce30"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c172b020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c172b660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c172b1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c172b340"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c172b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fc8c17407d0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c17407d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1740b50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1740ce0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1740e70"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c173f030"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c173f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fc8c171d720" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fc8c171d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c171dba0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c171dd30"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c1727020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c17271b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c1727340"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c17274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fc8c17182a0" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fc8c17182a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c1718620"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c17187b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fc8c17192a0" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fc8c17192a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c1719620"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c17197b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fc8c171a2b0" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fc8c171a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c171a630"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c171a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fc8c16c0550" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16c0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc8c16c08d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc8c16c0a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc8c16c0bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc8c16c0d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc8c16ce020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc8c16ce1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc8c16ce340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc8c16ce4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc8c16ce660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc8c16ce7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc8c16ce980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc8c16ceb10"/>
        <function-ref name="sync" scoped="" ref="0x7fc8c16ceca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc8c16cd020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc8c16cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fc8c16bb890" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fc8c16bb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c16be4c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c16be940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fc8c16cd4b0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c16cd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fc8c16cd830"/>
        <function-ref name="rfOff" scoped="" ref="0x7fc8c16cd9c0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fc8c16cdb50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fc8c16cdce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fc8c16cde70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fc8c16bf030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fc8c16bf1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fc8c16bf350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c16cf020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c16cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c16cf3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c16cf530"/>
        <function-ref name="request" scoped="" ref="0x7fc8c16cf6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c16cf850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c16cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fc8c16b61a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c16b61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc8c16b6520"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc8c16b66b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc8c16b6840"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc8c16b69d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc8c16b6b60"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc8c16b6cf0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc8c16b6e80"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc8c16b5030"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc8c16b51c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc8c16b5350"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc8c16b54e0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc8c16b5670"/>
        <function-ref name="sync" scoped="" ref="0x7fc8c16b5800"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc8c16b5a90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc8c16b5c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fc8c168e1e0" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c168e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c168e560"/>
        <function-ref name="write" scoped="" ref="0x7fc8c168e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fc8c16af970" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c16af970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fc8c16afcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fc8c16a8790" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fc8c16a8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c16a6020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c16a7020"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8c16a79a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c16a74e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8c16a64e0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c16ae5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c16aeae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fc8c1691020" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c1691020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c16913a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1691530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fc8c16a4ce0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fc8c16a4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c16a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c16a3230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c16a33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c16a3550"/>
        <function-ref name="get" scoped="" ref="0x7fc8c16a36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c16a3870"/>
        <function-ref name="set" scoped="" ref="0x7fc8c16a3a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c16a3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fc8c16b3500" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fc8c16b3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c16b2130"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c16b25b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fc8c167c2f0" loc="126:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fc8c167c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c167c670"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c167c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fc8c168ea80" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc8c168ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c168ee00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c168d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fc8c168d3c0" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c168d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c168d740"/>
        <function-ref name="write" scoped="" ref="0x7fc8c168d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fc8c168fd50" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c168fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c1696100"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1696290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fc8c1697390" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c1697390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fc8c1697710"/>
        <function-ref name="changed" scoped="" ref="0x7fc8c16978a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fc8c1697a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7fc8c1697bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fc8c16a69d0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc8c16a69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c16a6d50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c16a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c16a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c16a4340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c16a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c16a4660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c16a47f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c16a4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fc8c168cae0" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c168cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c168b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fc8c16a2020" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fc8c16a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c16a23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c16a2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c16a26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c16a2850"/>
        <function-ref name="get" scoped="" ref="0x7fc8c16a29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c16a2b70"/>
        <function-ref name="set" scoped="" ref="0x7fc8c16a2d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c16a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c16bad70" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c16bad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c16b7180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fc8c16918f0" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c16918f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c1691c70"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1691e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fc8c168b440" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c168b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c168b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc8c168bb60" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc8c168bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1688020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c16881b0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1688340"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c16884d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1688660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fc8c1687880" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fc8c1687880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1687c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1687d90"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1686020"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c16861b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1686340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fc8c16b4020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fc8c16b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fc8c16b43a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fc8c16b4530"/>
        <function-ref name="rxOn" scoped="" ref="0x7fc8c16b46c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fc8c16b4850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fc8c16b49e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fc8c16b4b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fc8c16b4d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fc8c16b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fc8c1696630" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c1696630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c16969b0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1696b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fc8c168f4a0" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c168f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c168f820"/>
        <function-ref name="write" scoped="" ref="0x7fc8c168f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fc8c168abb0" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc8c168abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c168c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c1686600" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c1686600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c1686980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c1686b10"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c1686ca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c1686e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c1685020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c16851b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c1685340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c1685980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c16854d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c1685660"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c16857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fc8c167d410" loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fc8c167d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c167d790"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c167d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c16b7470" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c16b7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c16b77f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c16b7980"/>
        <function-ref name="request" scoped="" ref="0x7fc8c16b7b10"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c16b7ca0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c16b7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fc8c1692e20" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc8c1692e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c169c1c0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c169c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fc8c16924a0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c16924a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c1692920"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1692ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fc8c169dc00" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fc8c169dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c16a0020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c16a01b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc8c16a0340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc8c16a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fc8c1688a10" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fc8c1688a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1688d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1687020"/>
        <function-ref name="request" scoped="" ref="0x7fc8c16871b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c1687340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c16874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fc8c168c3b0" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c168c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c168c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c16067f0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c16067f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c1606b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fc8c1603220" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c1603220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c1600b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1602a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8c16004e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c1600020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8c15ff020"/>
        <function-ref name="start" scoped="" ref="0x7fc8c1602090"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c16025a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c15fd490" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c15fd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c15fd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fc8c15fdd20" loc="43:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fc8c15fdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c1504670"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1505550"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8c1504020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c1505a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8c1504b30"/>
        <function-ref name="start" scoped="" ref="0x7fc8c1506b60"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c1505090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfe6c1d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe6c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfe69b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe6b9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfe694e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfe69020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfe68020"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfe6b020"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfe6b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bfe6d950" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bfe6d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bfe6dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfe642a0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe642a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfe62b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe63aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfe624e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfe62020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfe61020"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfe630d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfe635e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bfe65a10" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bfe65a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bfe65d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fc8bfe4cc10" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfe4cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8bfe4b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8bfe4b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8bfe4b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8bfe4b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fc8bfe4e1b0" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfe4e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8bfe4e530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8bfe4e6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfe4e850"/>
        <function-ref name="get" scoped="" ref="0x7fc8bfe4e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfe4eb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8bfe4ed00"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8bfe4d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8bfe4d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8bfe4d340"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8bfe4d4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8bfe4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fc8bfe4d8f0" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfe4d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8bfe4dc70"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8bfe4de00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfe4c020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8bfe4c1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8bfe4c340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfe4c4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8bfe4c660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8bfe4c7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8bfe4c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fc8c15dbba0" loc="52:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8c15dbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c15d9020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8c15d91b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8c15d9340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8c15d94d0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c15d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fc8c15de4d0" loc="50:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c15de4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c15de850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c15de9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c15deb70"/>
        <function-ref name="get" scoped="" ref="0x7fc8c15ded00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c15dd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c15dd1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c15dd340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c15dd4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c15dd660"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c15dd7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c15dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fc8c15dc280" loc="51:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c15dc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c15dc600"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c15dc790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c15dc920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c15dcab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c15dcc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c15dcdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c15db020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c15db1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c15db340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fc8bfe42a80" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfe42a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8bfe42e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8bfe41020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8bfe411b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8bfe41340"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc8bfe44020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfe44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8bfe443a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8bfe44530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfe446c0"/>
        <function-ref name="get" scoped="" ref="0x7fc8bfe44850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfe449e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8bfe44b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8bfe44d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8bfe43020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8bfe431b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8bfe43340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8bfe434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfe49da0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe49da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfe45670"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe47610"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfe45020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfe47ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfe45b30"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfe48bf0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfe47150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bfe49510" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bfe49510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bfe49890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fc8bfe43760" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfe43760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8bfe43ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8bfe43c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfe43e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8bfe42020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8bfe421b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfe42340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8bfe424d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8bfe42660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8bfe427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c1589020" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c1589020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c1589e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1584800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1584340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1584cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fc8c1580060" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fc8c1580060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c1580e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c157f820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c157f360"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c157fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc8c156d2c0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c156d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c156d640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c156d7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c156d960"/>
        <function-ref name="get" scoped="" ref="0x7fc8c156daf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c156dc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c156de10"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c156c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c156c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c156c340"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c156c4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c156c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c157b0a0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c157b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c156e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c156e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c156e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c156ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fc8c154b540" loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fc8c154b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c15493d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c1549d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c1549890"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c1548260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c154d0f0" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c154d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c154c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c154c9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c154c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c154ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfe5f5f0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfe5f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfe5ce50"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe5de00"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfe5c800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfe5c340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfe5b340"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfe5d430"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfe5d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fc8bfe59d20" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fc8bfe59d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfe55670"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfe56550"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfe55020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfe56a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfe55b30"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfe57b60"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfe56090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc8bfe5b9b0" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8bfe5b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8bfe5a7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8bfe591b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8bfe5aca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8bfe59670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fc8c14fd380" loc="44:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fc8c14fd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14fd700"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14fd890"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14fda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14fdbb0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14fdd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14fc020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fc8c14fc6b0" loc="45:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fc8c14fc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14fca30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14fcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14fcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14fb020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14fb340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fc8c14fb9c0" loc="46:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fc8c14fb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14fbd40"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14fa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14fa340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14fa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14fa660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14fa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fc8c14fe080" loc="43:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc8c14fe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14fe400"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14fe590"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14fe720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14fe8b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14fea40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14febd0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14fed60"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fc8c14f8020" loc="48:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fc8c14f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14f83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14f8530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14f86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14f8850"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14f89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14f8b70"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14f8d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fc8c1604e50" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fc8c1604e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14ff210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14ff3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14ff530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14ff6c0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14ff850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14ff9e0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14ffb70"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14ffd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fc8c14facd0" loc="47:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fc8c14facd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14f90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14f9230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14f93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14f9550"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14f96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14f9870"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14f9a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14f9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14f5610" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14f5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14f5990"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14f5b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14f5cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14f5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14f4340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14f44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14f4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14f47f0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14f4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14f4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14f4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14f3020"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14f6440" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14f6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14f67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14f6950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14f6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14f6c70"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14f6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14f5020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14f02f0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14f0670"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14f0800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14f0990"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14f0b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14f0cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14f0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14ef020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14ef1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14ef340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14ef4d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14ef660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14ef7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14ef980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14efc10"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14efda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14f1020" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14f13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14f1530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14f16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14f1850"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14f19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14f1b70"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14f1d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14ecde0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14ecde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14eb180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14eb310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14eb4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14eb630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14eb7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14eb950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14ebae0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14ebc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14ebe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14ea020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14ea1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14ea340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14ea4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14ea760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14ea8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14edb70" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14edb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14ec020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14ec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14ec4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14ec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14ec980"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14ecb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14e6930" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14e6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14e6cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14e6e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14e5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14e5660"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14e57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14e5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14e5b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14e5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14e5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14e4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14e42b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14e4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14e7710" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14e7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14e7a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14e7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14e7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14e6020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14e6340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14e64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14e6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14e1480" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14e1800"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14e1990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14e1b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14e1cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14e1e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14e0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14e01b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14e0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14e04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14e0660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14e07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14e0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14e0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14e0da0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14e21d0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14e21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14e2550"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14e26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14e2870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14e2a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14e2b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14e2d20"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14e1020"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14dc020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14dc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14dc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14dc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14dc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14dc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14dcb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14dcd00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14db020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14db1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14db340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14db4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14db660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14db7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14dba80"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14dbc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14ded60" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14ded60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14dd180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14dd310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14dd4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14dd630"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14dd7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14dd950"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14ddae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14ddc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c14d8de0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c14d8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14d7180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14d7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14d74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14d7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14d77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14d7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14d7ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14d7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14d7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14d6020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14d6760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c14d9b70" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14d9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14d8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14d8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14d84d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14d8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14d87f0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14d8980"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14d8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fc8c14c2150" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fc8c14c2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fc8c14c24d0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14c2660"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c14c27f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fc8c14c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fc8c14c2d60" loc="43:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fc8c14c2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c14c1180"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14c1310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc8c14c14a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc8c14c1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fc8c14c1a20" loc="44:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc8c14c1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c14c1da0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14bd020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc8c14bd1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc8c14bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fc8c14a58f0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fc8c14a58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8c14a5c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fc8c14a5e00"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c14a4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c14a41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c14a4340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fc8c14a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fc8c14baa20" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fc8c14baa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fc8c14bada0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14a6020"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c14a61b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fc8c14a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fc8c14a65d0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8c14a65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8c14a6950"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8c14a6ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c14a6c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8c14a6e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8c14a5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c14a51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8c14a5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8c14a54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8c14a5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fc8c14a47a0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c14a47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c14a4b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c14a4cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c14a4e40"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c14a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c14a31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c14a3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c14a34d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c14a3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c14a37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c14a3980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c14a3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c14a3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c14a3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c14a2120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c14a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fc8c1495a30" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fc8c1495a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1495db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1494020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14941b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1494340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14944d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1494660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fc8c148bbc0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fc8c148bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c148a020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c148a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c148a340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c148a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c148a660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c148a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fc8c1492a30" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fc8c1492a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1492db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1491020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14911b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1491340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14914d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1491660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fc8c1490a30" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fc8c1490a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1490db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c148f020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c148f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c148f340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c148f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c148f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fc8c149ba30" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fc8c149ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c149bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1496020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14961b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1496340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14964d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1496660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fc8c148da30" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fc8c148da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c148c020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c148c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c148c340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c148c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c148c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c148c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fc8c1494a30" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fc8c1494a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1494db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1493020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14931b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1493340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14934d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1493660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fc8c148abc0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fc8c148abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1489020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c14891b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c1489340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c14894d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c1489660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c14897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fc8c1497a20" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fc8c1497a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1497da0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c149c020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c149c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c149c340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c149c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c149c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fc8c148fa30" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fc8c148fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c148fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c148e020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c148e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c148e340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c148e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c148e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fc8c1496a30" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fc8c1496a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1496db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1495020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14951b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1495340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14954d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1495660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fc8c148cbc0" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fc8c148cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c148b020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c148b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c148b340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c148b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c148b660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c148b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fc8c1493a30" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fc8c1493a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1493db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1492020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14921b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1492340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14924d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1492660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fc8c1491a30" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fc8c1491a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1491db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1490020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14901b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1490340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14904d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1490660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fc8c149ca30" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fc8c149ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c149cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c149b020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c149b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c149b340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c149b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c149b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fc8c148ea30" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fc8c148ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c148edb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c148d020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c148d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c148d340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c148d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c148d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fc8c1481a30" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fc8c1481a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1481db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1480020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14801b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1480340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14804d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1480660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fc8c1477bc0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fc8c1477bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1476020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c14761b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c1476340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c14764d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c1476660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c14767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fc8c147ea30" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fc8c147ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c147edb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c147d020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c147d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c147d340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c147d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c147d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fc8c147ca30" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fc8c147ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c147cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c147b020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c147b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c147b340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c147b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c147b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fc8c1484a30" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fc8c1484a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1484db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1483020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14831b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1483340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14834d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1483660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fc8c1479a30" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fc8c1479a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1478020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c14781b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c1478340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c14784d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c1478660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c14787f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fc8c1480a30" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fc8c1480a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1480db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c147f020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c147f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c147f340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c147f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c147f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fc8c1476bc0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fc8c1476bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1475020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c14751b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c1475340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c14754d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c1475660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c14757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fc8c14889d0" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fc8c14889d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1488d50"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1485020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14851b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1485340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14854d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1485660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fc8c147ba30" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fc8c147ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c147bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c147a020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c147a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c147a340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c147a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c147a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fc8c1483a30" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fc8c1483a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1483db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1481020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14811b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1481340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14814d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1481660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fc8c1478bc0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fc8c1478bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1477020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c14771b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c1477340"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c14774d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c1477660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c14777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fc8c147fa30" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fc8c147fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c147fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c147e020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c147e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c147e340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c147e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c147e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fc8c147da30" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fc8c147da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c147ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c147c020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c147c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c147c340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c147c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c147c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fc8c1485a30" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fc8c1485a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c1485db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1484020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14841b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1484340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14844d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1484660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fc8c147aa30" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fc8c147aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c147adb0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1479020"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c14791b0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1479340"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c14794d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1479660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fc8c1395020" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fc8c1395020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c13953a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1395530"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c13956c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1395850"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c13959e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1395b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fc8c13a3490" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fc8c13a3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c13a3810"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c13a39a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc8c13a3b30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc8c13a3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fc8c1392020" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fc8c1392020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c13923a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c1392530"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c13926c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc8c1392850"/>
        <function-ref name="enable" scoped="" ref="0x7fc8c13929e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc8c1392b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fc8c1393490" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fc8c1393490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c1393810"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c13939a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc8c1393b30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc8c1393cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc8c0f44e50" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0f44e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f42410"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f425a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc8c0f4d160" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0f4d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc8c0f47e50" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0f47e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f46210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc8c0f41880" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0f41880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f41c00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f41d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc8c0f390a0" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0f390a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f39420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f395b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc8c0f400a0" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0f400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f40420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f405b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc8c0f2b500" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0f2b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2b880"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc8c0f2e500" loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0f2e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2e880"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc8c0f4c490" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0f4c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc8c0f36880" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc8c0f36880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f36c00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f36d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc8c0f2f500" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0f2f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2f880"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc8c0f46e50" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc8c0f46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f45210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc8c0f45e50" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0f45e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f44210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc8c0f3b880" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0f3b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3bc00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc8c0f3d0a0" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc8c0f3d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3d420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc8c0f40880" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0f40880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f40c00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f40d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c0f4fa90" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0f4fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c0f4fe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c0f4e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c0f4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc8c0f4be00" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0f4be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc8c0f4a490" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc8c0f4a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc8c0f34c80" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0f34c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f310a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f31230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc8c0f4abe0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0f4abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc8c0f2fce0" loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0f2fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc8c0f4b160" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0f4b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc8c0f360a0" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0f360a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f36420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f365b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc8c0f45670" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0f45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f459f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f45b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc8c0f46670" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0f46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f469f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc8c0f4ead0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0f4ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc8c0f370a0" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0f370a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f37420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f375b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc8c0f39880" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0f39880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f39c00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f39d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc8c0f37880" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0f37880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f37c00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f37d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc8c0f2dce0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0f2dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2b0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc8c0f2ece0" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0f2ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2d0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc8c0f3d880" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc8c0f3d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3dc00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc8c0f380a0" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0f380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f38420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f385b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc8c0f30ce0" loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0f30ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc8c0f3f880" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0f3f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3fc00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc8c0f2bce0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0f2bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0f2a0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0f2a230"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2a3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0f2a550"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0f2a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc8c0f4e480" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0f4e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc8c0f47670" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc8c0f47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f479f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f47b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc8c0f44670" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0f44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f449f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f44b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc8c0f3a0a0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0f3a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3a420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc8c0f3f0a0" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0f3f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3f420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc8c0f3a880" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0f3a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3ac00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc8c0f42870" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0f42870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f42bf0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f42d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc8c0f4d7b0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc8c0f4d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc8c0f410a0" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0f410a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f41420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f415b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0f51e20" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0f51e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0f4f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0f4f350"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0f4f4e0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0f4f670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0f4f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc8c0f482f0" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0f482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f48670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc8c0f47020" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc8c0f47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc8c0f30500" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc8c0f30500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f30880"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f30a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc8c0f31ce0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0f31ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f300a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f30230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc8c0f4b7b0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0f4b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc8c0f31500" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0f31500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f31880"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f31a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc8c0f2d500" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc8c0f2d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f2d880"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f2da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc8c0f3b0a0" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0f3b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3b420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc8c0f38880" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0f38880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f38c00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f38d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc8c0f4de00" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc8c0f4de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc8c0f4cae0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0f4cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f4ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc8c0f3e0a0" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0f3e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3e420"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc8c0f48940" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc8c0f48940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f48cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc8c0f3e880" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0f3e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f3ec00"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f3ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc8c0f340a0" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0f340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f34820"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f349b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc8c0f2a9b0" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0f2a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0f2ad30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0f29020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f291b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0f29340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0f294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fc8c1351630" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fc8c1351630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c13519b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c1351b40"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1351cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c1351e60"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c1350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c1353680" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c1353680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c1353a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c1353b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c1353d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fc8c13508c0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fc8c13508c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c1350c40"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1350dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fc8c134f6f0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fc8c134f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c134fa70"/>
        <function-ref name="write" scoped="" ref="0x7fc8c134fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c1356970" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c1356970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1356cf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1356e80"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1353030"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c13531c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1353350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fc8c134e510" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fc8c134e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c134e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fc8c1338680" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c1338680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c1338a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c1338b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fc8c1349bb0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fc8c1349bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c1347020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c13471b0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1347340"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c13474d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c1347660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c134d940" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c134d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c134dcc0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c134de50"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c134a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fc8c1341080" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc8c1341080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc8c1341400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fc8c1340020" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fc8c1340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c13403a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c1340530"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c13406c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c1340850"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c13409e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c1340b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc8c1344400" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc8c1344400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1344780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1344910"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1344aa0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c1344c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1344dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fc8c1346020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fc8c1346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c13463a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1346530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fc8c1346db0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fc8c1346db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c1345180"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1345310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c1340df0" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c1340df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c133f1c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c133f350"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c133f4e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c133f670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c133f800"/>
        <function-ref name="get" scoped="" ref="0x7fc8c133f990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c133fb20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c13391b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c133fcb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c133fe40"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c1339020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c134a810" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c134a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c134ab90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c134ad20"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1349020"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c13491b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1349340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fc8c1333120" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fc8c1333120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c13334a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c1333630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fc8c1345ba0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fc8c1345ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c1344020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc8c12d8770" loc="67:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c12d8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c12d8af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c12d8c80"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c12d8e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c12d1020"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c12d11b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c12d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc8c12d4280" loc="66:/home/rodrigoct/tinyos-main-master/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c12d4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c12d4600"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c12d4790"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c12d4920"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c12d4ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c12d4c40"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c12d4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c12d0020" loc="66:/home/rodrigoct/tinyos-main-master/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c12d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c12d03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc8c12d0b70" loc="67:/home/rodrigoct/tinyos-main-master/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c12d0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c12cf020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c12cf1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c12cf340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c12cf4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c12cf660"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c12cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc8c0f76020" loc="44:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c0f76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0f763a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0f76530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc8c0f778f0" loc="43:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc8c0f778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc8c0f77c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c12b7c40" loc="42:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c12b7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0f77020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0f771b0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0f77340"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0f774d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0f77660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8bfd668f0" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfd668f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8bfd66c70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bfd66e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc8bfd642b0" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc8bfd642b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8bfd64630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8bfd647c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fc8bfd64a50" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8bfd64a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8bfd64dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc8bfd650c0" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc8bfd650c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc8bfd65440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8bfd68c30" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8bfd68c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bfd66020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8bfd661b0"/>
        <function-ref name="request" scoped="" ref="0x7fc8bfd66340"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bfd664d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bfd66660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc8bfd656d0" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8bfd656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc8bfd65a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc8bfd65be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc8bfd65d70"/>
        <function-ref name="write" scoped="" ref="0x7fc8bfd64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc8c12515e0" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c12515e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c1251960"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c1251af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc8c124e510" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c124e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c124e890"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c124ea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fc8c124b600" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8c124b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8c124b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc8c1251dd0" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc8c1251dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc8c1250180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fc8c124c370" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fc8c124c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c124c6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c124c880"/>
        <function-ref name="request" scoped="" ref="0x7fc8c124ca10"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c124cba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c124cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c1255a30" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c1255a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1255db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c1252020"/>
        <function-ref name="request" scoped="" ref="0x7fc8c12521b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c1252340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c12524d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc8c1250480" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8c1250480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc8c1250800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc8c1250990"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc8c1250b20"/>
        <function-ref name="write" scoped="" ref="0x7fc8c1250cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fc8c12476a0" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c12476a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c1247a20"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c1247bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc8c11d6c40" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c11d6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c11d5020"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c11d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc8c11d4700" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fc8c11d4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c11d4aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c11d4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fc8c11d3e00" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fc8c11d3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8c11d21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc8c11d5440" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fc8c11d5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc8c11d57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fc8c11d2490" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fc8c11d2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c11d2810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c11d29a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c11d2b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c11d2cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c11d2e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c11d1020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c11d11b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c11d1340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c11d14d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c11d1660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c11d17f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c11d1980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c11d1b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c11d1da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c11d0020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c11d01b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c11d0340"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c11d04d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c11d0660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c11d07f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c11d0980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c11d0b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c11d0ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c11d0e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c11cf020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c11cf3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c11cf540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c11cf6d0"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c11cf860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c11cf9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c11cfb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c11cfd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c11ce020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c11ce1b0"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c11ce340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c11ce4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c11ce660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c11ce7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c11ce980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c11ceb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c11cc5a0" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c11cc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c11cc920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c11ccab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c11ccc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c11ccdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c11cb020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c11cb1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c11cb340"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c11cb980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c11cb660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c11cb4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c11cb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fc8c11d3060" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fc8c11d3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c11d3400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c11d3590"/>
        <function-ref name="request" scoped="" ref="0x7fc8c11d3720"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c11d38b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c11d3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c11d7e80" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c11d7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c11d6240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c11d63d0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c11d6560"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c11d66f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c11d6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc8c11d5a50" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc8c11d5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc8c11d5dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc8c11d4020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc8c11d41b0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c11d4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fc8c11cede0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c11cede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c11cc180"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c11cc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fc8c11cbc50" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fc8c11cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c11ca020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c11ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fc8c11bb980" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc8c11bb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c11bbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fc8c11be3b0" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8c11be3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c11be730"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c11be8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fc8c11c5870" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c11c5870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c11c5bf0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c11c5d80"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c11c2020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c11c21b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c11c2340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c11c24d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c11c2660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c11c27f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c11c2980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c11c2b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c11c2ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c11c2e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c11c1020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c11c12b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c11c1440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c11c15d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c11c1760"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c11c18f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c11c1a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c11c1c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c11c1da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c11c0020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c11c01b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c11c0340"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c11c04d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c11c0860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c11c09f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c11c0b80"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c11c0d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c11bf020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c11bf1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c11bf340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c11bf4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c11bf660"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c11bf7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c11bf980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c11bfb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c11bfca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c11bfe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c11be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fc8c1182670" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fc8c1182670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c11829f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1182b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1182d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1180020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c11801b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1180340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c11804d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1180660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c11807f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1180980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1180b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1180ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1180e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c117f120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c117f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc8c11b5dc0" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc8c11b5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c11b4180"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c11b4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fc8c117f670" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fc8c117f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c117f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c117fb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c117fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c117e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c117e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c117e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c117e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c117e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c117e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c117e980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c117eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c117eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c117ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c117d120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c117d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fc8c117d670" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fc8c117d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c117d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c117db80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c117dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c117c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c117c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c117c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c117c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c117c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c117c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c117c980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c117cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c117cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c117ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c117b120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c117b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fc8c11b9060" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fc8c11b9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c11b93e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c11b9570"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c11b9700"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c11b9890"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c11b9a20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c11b9bb0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c11b9d40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c11b8020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c11b81b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c11b8340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c11b84d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c11b8660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c11b87f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c11b8a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c11b8c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c11b8da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c11b7020"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c11b71b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c11b7340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c11b74d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c11b7660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c11b77f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c11b7980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c11b7b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c11b7ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c11b6220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c11b63b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c11b6540"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c11b66d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c11b6860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c11b69f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c11b6b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c11b6d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c11b5020"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c11b51b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c11b5340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c11b54d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c11b5660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c11b57f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c11b5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fc8c118b5b0" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fc8c118b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc8c118b930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc8c118bac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc8c118bc50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc8c118bde0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc8c11b2020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc8c11b21b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc8c11b2340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc8c11b24d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c11b2660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc8c11b27f0"/>
        <function-ref name="getData" scoped="" ref="0x7fc8c11b2980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc8c11b2b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc8c11b2ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc8c11b1020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc8c11b11b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fc8c11b1340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc8c11b14d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc8c11b1660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc8c11b17f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc8c11b1980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc8c11b1b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc8c11b1ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc8c11b1e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc8c118a020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc8c118a1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc8c118a540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc8c118a6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc8c118a860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc8c118a9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc8c118ab80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc8c118ad10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc8c1189020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc8c11891b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc8c1189340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc8c11894d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc8c1189660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc8c11897f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc8c1189980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc8c1189b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc8c1189ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc8c1189e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc8c1188020"/>
        <function-ref name="setData" scoped="" ref="0x7fc8c11881b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc8c1188340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc8c11884d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc8c1188660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc8c11887f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc8c1188980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc8c1188b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc8c1187420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc8c11875b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc8c1187740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc8c11878d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc8c1187a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc8c1187bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc8c1187d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc8c1186020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc8c11861b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc8c1186340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fc8c1184670" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fc8c1184670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c11849f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1184b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1184d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1183020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c11831b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1183340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c11834d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1183660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c11837f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1183980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1183b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1183ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1183e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1182120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c11822b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc8c11b4750" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c11b4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c11b4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fc8c1186700" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fc8c1186700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c1186a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1186c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1186da0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1185020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c11851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1185340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c11854d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1185660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c11857f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1185980"/>
        <function-ref name="set" scoped="" ref="0x7fc8c1185b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1185ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c1185e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1184120"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c11842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8bfd5c2c0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfd5c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8bfd5c640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bfd5c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fc8bfd55440" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fc8bfd55440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8bfd557c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8bfd4e760" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bfd4e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8bfd4eae0"/>
        <function-ref name="configure" scoped="" ref="0x7fc8bfd4ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fc8bfd55a50" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc8bfd55a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc8bfd55dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc8bfd54020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc8bfd541b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc8bfd54340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc8bfd544d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc8bfd54660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc8bfd547f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc8bfd54980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8bfd54b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc8bfd54ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fc8bfd54e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc8bfd53020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc8bfd531b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc8bfd53440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc8bfd535d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fc8bfd53760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc8bfd538f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc8bfd53a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc8bfd53c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc8bfd53da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc8bfd52020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc8bfd521b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc8bfd52340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc8bfd524d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc8bfd52660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc8bfd529f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc8bfd52b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc8bfd52d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc8bfd51020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc8bfd511b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc8bfd51340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc8bfd514d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc8bfd51660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc8bfd517f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc8bfd51980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc8bfd51b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc8bfd51ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc8bfd51e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc8bfd50020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc8bfd501b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc8bfd50340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc8bfd504d0"/>
        <function-ref name="setData" scoped="" ref="0x7fc8bfd50660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc8bfd507f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc8bfd50980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc8bfd50b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc8bfd50ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc8bfd50e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc8bfd4f020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc8bfd4f5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc8bfd4f740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc8bfd4f8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc8bfd4fa60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc8bfd4fbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc8bfd4fd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc8bfd4e020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc8bfd4e1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc8bfd4e340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc8bfd4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fc8bfd56c10" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8bfd56c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8bfd55020"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8bfd551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8bfd5d640" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8bfd5d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bfd5d9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8bfd5db50"/>
        <function-ref name="request" scoped="" ref="0x7fc8bfd5dce0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bfd5de70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bfd5c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fc8bfd5a2b0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8bfd5a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8bfd5a630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8bfd5a7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8bfd5a950"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8bfd5aae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8bfd5ac70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8bfd5ae00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8bfd59020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8bfd591b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8bfd59340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8bfd594d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8bfd59660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8bfd597f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8bfd59980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8bfd59c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8bfd59da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8bfd58020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8bfd581b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8bfd58340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8bfd584d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8bfd58660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8bfd587f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8bfd58980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8bfd58b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8bfd58ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8bfd58e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8bfd57220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8bfd573b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8bfd57540"/>
        <function-ref name="tx" scoped="" ref="0x7fc8bfd576d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8bfd57860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8bfd579f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8bfd57b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8bfd57d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8bfd56020"/>
        <function-ref name="rx" scoped="" ref="0x7fc8bfd561b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8bfd56340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8bfd564d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8bfd56660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8bfd567f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8bfd56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8bfd5ca60" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bfd5ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8bfd5cde0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8bfd5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8c10d98a0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c10d98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8c10d9c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c10d9db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8c10d7020" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c10d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c10d73a0"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c10d7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc8c10dfa90" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc8c10dfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c10dfe10"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c10dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c10da5c0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c10da5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c10da940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c10daad0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c10dac60"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c10dadf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c10d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc8c10dc9a0" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c10dc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c10dcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8c10d8130" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c10d8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c10d84b0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c10d8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc8c10c24b0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c10c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c10c2830"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c10c29c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc8c10d55c0" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc8c10d55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c10d5960"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c10d5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fc8c10c3e70" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fc8c10c3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c10c2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc8c10c3020" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c10c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c10c33c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fc8c10c3690" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fc8c10c3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c10c3a10"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c10c3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8c1049bf0" loc="92:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c1049bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8c1048020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c10481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8c1047930" loc="96:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c1047930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c1047cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c1047e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc8c1048400" loc="93:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c1048400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1048780"/>
        <function-ref name="requested" scoped="" ref="0x7fc8c1048910"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c1048aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1048c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c1048dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c104ae60" loc="91:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c104ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c1049230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c10493c0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c1049550"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c10496e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c1049870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8c1047060" loc="94:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c1047060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c10473e0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c1047570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bfce5140" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bfce5140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bfce54c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc8bfce5750" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc8bfce5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc8bfce5ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc8bfce5c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc8bfce5df0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8bfce4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8bfce1850" loc="55:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bfce1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8bfce1bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bfce1d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8bfcdf590" loc="60:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bfcdf590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8bfcdf930"/>
        <function-ref name="configure" scoped="" ref="0x7fc8bfcdfac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc8bfcdfd50" loc="61:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc8bfcdfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc8bfcde100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc8bfcde290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc8bfcde420"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8bfcde5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc8bfce0020" loc="56:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8bfce0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bfce03a0"/>
        <function-ref name="requested" scoped="" ref="0x7fc8bfce0530"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bfce06c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bfce0850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bfce09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8bfcde800" loc="62:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8bfcde800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8bfcdeb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8bfcded10"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8bfcdd020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8bfcdd1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8bfcdd340"/>
        <function-ref name="get" scoped="" ref="0x7fc8bfcdd4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8bfcdd660"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8bfcddca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8bfcdd980"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8bfcdd7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8bfcddb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8bfce2970" loc="54:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8bfce2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bfce2d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8bfce1020"/>
        <function-ref name="request" scoped="" ref="0x7fc8bfce11b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bfce1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bfce14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8bfce0c30" loc="57:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bfce0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8bfcdf020"/>
        <function-ref name="userId" scoped="" ref="0x7fc8bfcdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fc8bfcdc020" loc="75:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fc8bfcdc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8bfcdc3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8bfcdc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fc8c103f890" loc="4:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fc8c103f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc8c103fc10"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc8c103fda0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc8c103c020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc8c103c1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc8c103c340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc8c103c4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc8c103c660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc8c103c7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c103c980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc8c103cb10"/>
        <function-ref name="getData" scoped="" ref="0x7fc8c103cca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc8c103ce30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc8c103b020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc8c103b2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc8c103b440"/>
        <function-ref name="getIV" scoped="" ref="0x7fc8c103b5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc8c103b760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc8c103b8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc8c103ba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc8c103bc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc8c103bda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc8c103a020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc8c103a1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc8c103a340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc8c103a4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc8c103a860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc8c103a9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc8c103ab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc8c103ad10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc8c1039020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc8c10391b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc8c1039340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc8c10394d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc8c1039660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc8c10397f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc8c1039980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc8c1039b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc8c1039ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc8c1039e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc8c1038020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc8c10381b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc8c1038340"/>
        <function-ref name="setData" scoped="" ref="0x7fc8c10384d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc8c1038660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc8c10387f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc8c1038980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc8c1038b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc8c1038ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc8c1038e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc8c1037420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc8c10375b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc8c1037740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc8c10378d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc8c1037a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc8c1037bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc8c1037d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc8c1036020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc8c10361b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc8c1036340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fc8c102c250" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fc8c102c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c102c5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c102c760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c102c8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c102ca80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c102cc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c102cda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c102b020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c102b1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c102b340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c102b4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c102b660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c102b7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c102b980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c102bc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c102bda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c102a020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c102a1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c102a340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c102a4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c102a660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c102a7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c102a980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c102ab10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c102aca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c102ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c1029220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c10293b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c1029540"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c10296d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c1029860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c10299f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c1029b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c1029d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c1028020"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c10281b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c1028340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c10284d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c1028660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c10287f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c1028980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fc8c1026cb0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fc8c1026cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c10250a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1025230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c10253c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1025550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c10256e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c1025870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1025a00"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1025b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1025d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1024020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c10241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1024340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c10244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1024760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c10248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fc8c1033430" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fc8c1033430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fc8c10337b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fc8c1033940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fc8c1033ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fc8c1033c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fc8c1033df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fc8c1032020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fc8c10321b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fc8c1032340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c10324d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fc8c1032660"/>
        <function-ref name="getData" scoped="" ref="0x7fc8c10327f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fc8c1032980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fc8c1032b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fc8c1032da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fc8c1031020"/>
        <function-ref name="getIV" scoped="" ref="0x7fc8c10311b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fc8c1031340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fc8c10314d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fc8c1031660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fc8c10317f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fc8c1031980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fc8c1031b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fc8c1031ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fc8c1031e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fc8c1030020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fc8c10303b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fc8c1030540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fc8c10306d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fc8c1030860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fc8c10309f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fc8c1030b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fc8c1030d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fc8c102f020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fc8c102f1b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fc8c102f340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fc8c102f4d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fc8c102f660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fc8c102f7f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fc8c102f980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fc8c102fb10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fc8c102fca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fc8c102fe30"/>
        <function-ref name="setData" scoped="" ref="0x7fc8c102e020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fc8c102e1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fc8c102e340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fc8c102e4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fc8c102e660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fc8c102e7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fc8c102e980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fc8c102d020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fc8c102d1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fc8c102d340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fc8c102d4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fc8c102d660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fc8c102d7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fc8c102d980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fc8c102db10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fc8c102dca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fc8c102de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fc8c1028d40" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fc8c1028d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c10270e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c1027270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c1027400"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c1027590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c1027720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c10278b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c1027a40"/>
        <function-ref name="get" scoped="" ref="0x7fc8c1027bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c1027d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c1026020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c10261b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c1026340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c10264d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c1026760"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c10268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc8c0f11c60" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0f11c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f10210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc8c0f1cda0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0f1cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f1b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc8c0f15b50" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0f15b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f13020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc8c0f0f670" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0f0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc8c0f08e50" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0f08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f06210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc8c0f0fe50" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0f0fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0e210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc8c0efb2f0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0efb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efb670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc8c0efd2f0" loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0efd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efd670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc8c0f19120" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0f19120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f194a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc8c0f03670" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc8c0f03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f039f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f03b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc8c0efe2f0" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0efe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efe670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc8c0f13c60" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc8c0f13c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f12020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc8c0f12c60" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0f12c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f11020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc8c0f09670" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0f09670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f099f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f09b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc8c0f0be50" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc8c0f0be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0a210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc8c0f0e670" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0f0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c0f1d760" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0f1d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c0f1dae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c0f1dc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c0f1de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc8c0f18aa0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0f18aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f18e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc8c0f17120" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc8c0f17120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f175a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc8c0f02a70" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0f02a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f02df0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc8c0f17870" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0f17870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f17bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc8c0efead0" loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0efead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efee50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc8c0f19dc0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0f19dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f18180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc8c0f04e50" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0f04e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f03210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc8c0f12480" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0f12480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f12800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f12990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc8c0f13480" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0f13480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f13800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f13990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc8c0f1c750" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0f1c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f1cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc8c0f05e50" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0f05e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f04210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc8c0f06670" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0f06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f069f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f06b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc8c0f04670" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0f04670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f049f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f04b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc8c0efcad0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0efcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efce50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc8c0efdad0" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0efdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efde50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc8c0f0a670" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc8c0f0a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc8c0f06e50" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0f06e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f05210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc8c0f00ad0" loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0f00ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f00e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc8c0f0c670" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0f0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc8c0efbad0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0efbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0efbe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0efa020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efa1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0efa340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0efa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc8c0f1c100" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0f1c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f1c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc8c0f15370" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc8c0f15370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f156f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f15880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc8c0f11480" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0f11480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f11800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f11990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc8c0f09e50" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0f09e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f08210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc8c0f0ee50" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0f0ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0c210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc8c0f08670" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0f08670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f089f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f08b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc8c0f10670" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0f10670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f109f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f10b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc8c0f1b450" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc8c0f1b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f1b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc8c0f10e50" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0f10e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0f210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0f1ea80" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0f1ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0f1ee00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0f1d020"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0f1d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0f1d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0f1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc8c0f16020" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0f16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc8c0f16cc0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc8c0f16cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f150a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc8c0f002f0" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc8c0f002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f00670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f00800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc8c0f01ad0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0f01ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f01e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc8c0f18450" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0f18450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f187d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc8c0f012f0" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0f012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f01670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f01800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc8c0efc2f0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc8c0efc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0efc670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc8c0f0ae50" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0f0ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f09210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc8c0f05670" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0f05670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f059f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f05b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc8c0f1baa0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc8c0f1baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f1be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc8c0f19770" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0f19770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f19af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc8c0f0ce50" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0f0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0b210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc8c0f16670" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc8c0f16670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0f169f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc8c0f0b670" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0f0b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f0b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f0bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc8c0f03e50" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0f03e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0f02610"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0f027a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc8c0efa7a0" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0efa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0efab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0efacb0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0efae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0ef9020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0ef91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc8c0ee5c60" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0ee5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee3210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc8c0eefda0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0eefda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eee180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc8c0ee8b50" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0ee8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee7020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc8c0ee2670" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0ee2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee29f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc8c0edbe50" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0edbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0eda210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0eda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc8c0ee2e50" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0ee2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee1210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc8c0ece2f0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0ece2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ece670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ece800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc8c0ed12f0" loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0ed12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed1670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc8c0eed120" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0eed120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eed4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc8c0ed6670" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc8c0ed6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed69f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc8c0ed22f0" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0ed22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed2670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc8c0ee7c60" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc8c0ee7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee6020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc8c0ee6c60" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0ee6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee5020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc8c0edc670" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0edc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edc9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc8c0edfe50" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc8c0edfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edd210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc8c0ee1670" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0ee1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee19f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c0ef0760" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0ef0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c0ef0ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c0ef0c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c0ef0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc8c0eecaa0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0eecaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eece20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc8c0eea120" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc8c0eea120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eea5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc8c0ed5a70" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0ed5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed5df0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc8c0eea870" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0eea870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eeabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc8c0ed2ad0" loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0ed2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed2e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc8c0eeddc0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0eeddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eec180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc8c0ed8e50" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0ed8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed6210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc8c0ee6480" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0ee6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee6800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc8c0ee7480" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0ee7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee7800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc8c0eef750" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0eef750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eefad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc8c0ed9e50" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0ed9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed8210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc8c0eda670" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0eda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0eda9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc8c0ed8670" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0ed8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed89f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc8c0ecfad0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0ecfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ecfe50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ece020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc8c0ed1ad0" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0ed1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed1e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ecf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc8c0edd670" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc8c0edd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0eddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc8c0edae50" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0edae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed9210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc8c0ed3ad0" loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0ed3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed3e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc8c0ee0670" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0ee0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee09f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc8c0ecead0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0ecead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0ecee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0ecd020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ecd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0ecd340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0ecd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc8c0eef100" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0eef100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eef480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc8c0ee8370" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc8c0ee8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee86f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc8c0ee5480" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0ee5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee5800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc8c0edce50" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0edce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edb210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc8c0ee1e50" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0ee1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee0210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc8c0edb670" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0edb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc8c0ee3670" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0ee3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee39f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc8c0eee450" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc8c0eee450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eee7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc8c0ee3e50" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0ee3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ee2210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ee23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0ef29e0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0ef29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0ef2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0ef0020"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0ef01b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0ef0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0ef04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc8c0ee9020" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0ee9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0ee93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc8c0ee9cc0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc8c0ee9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0ee80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc8c0ed32f0" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc8c0ed32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed3670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc8c0ed4ad0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0ed4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed4e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc8c0eec450" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0eec450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eec7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc8c0ed42f0" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0ed42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed4670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc8c0ecf2f0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc8c0ecf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ecf670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ecf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc8c0edde50" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0edde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edc210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc8c0ed9670" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0ed9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed99f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc8c0eeeaa0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc8c0eeeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eeee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc8c0eed770" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0eed770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0eedaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc8c0ee0e50" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0ee0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edf210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc8c0ee9670" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc8c0ee9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0ee99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc8c0edf670" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0edf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0edf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0edfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc8c0ed6e50" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0ed6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ed5610"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ed57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc8c0ecd7a0" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0ecd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0ecdb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0ecdcb0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0ecde40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0ecc020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0ecc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fc8c0ec5b40" loc="54:/home/rodrigoct/tinyos-main-master/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c0ec5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fc8c0ec2020"/>
        <function-ref name="changed" scoped="" ref="0x7fc8c0ec21b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fc8c0ec2340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fc8c0ec24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fc8c0ec4d40" loc="13:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c0ec4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fc8c0eae0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fc8c0eaa310" loc="5:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fc8c0eaa310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fc8c0eaa690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fc8c0ea78c0" loc="8:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0ea78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0ea7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fc8c0e9c020" loc="8:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0e9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0e9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fc8c0e92cb0" loc="14:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e92cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0e950a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0e95230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fc8c0e955b0" loc="15:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fc8c0e955b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0e95930"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0e95ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fc8c0e96210" loc="11:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fc8c0e96210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0e96590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fc8c0e82020" loc="8:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0e823a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0e82530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fc8c0e828c0" loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fc8c0e828c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0e82c40"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0e82dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0e80020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0e801b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0e80340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0e804d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0e80660"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0e807f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fc8c0e77b40" loc="15:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e77b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc8c0e7a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fc8c0e7f4a0" loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fc8c0e7f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0e7f820"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0e7f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fc8c0e7fd40" loc="14:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fc8c0e7fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0e7c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0e7c270"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0e7c400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0e7c590"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0e7c720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0e7c8b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0e7ca40"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0e7cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fc8c0e57020" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc8c0e57e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fc8c0e55d20" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fc8c0e55d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc8c0e54b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc8c0e44260" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c0e44260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0e43090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0e43a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0e43550"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0e42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fc8c0e418a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fc8c0e418a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0e3e6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0e3c090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0e3eba0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0e3c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc8c0e37190" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8c0e37190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c0e37510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8c0e376a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8c0e37830"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0e379c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8c0e37b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0e37ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c0e37e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0e36030"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0e361c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8c0e36350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8c0e364e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c0e3a060" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c0e3a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e5510"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc8c17e5880"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0e3ae70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0e39820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0e39360"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0e39ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fc8c0e835b0" loc="3:/home/rodrigoct/tinyos-main-master/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fc8c0e835b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0e83930"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0e83ac0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0e83c50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0e83de0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0e32020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0e321b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0e32340"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0e324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fc8c0e30c50" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fc8c0e30c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0e2f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0e2f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c0e2f340"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0e2f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0e2f660"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c0e2f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0e2f980"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0e2fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c0e2fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c0e2fe30"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0e2e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c0e2e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c0e2e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c0e2e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0e2e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fc8c0e319e0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fc8c0e319e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0e31d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0e30020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0e301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0e30340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0e304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0e30660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0e307f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0e30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c0e33a30" loc="14:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e33a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0e33db0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0e29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc8c0e1acb0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c0e1acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c0e190a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c0e19230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c0e193c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c0e19550"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c0e196e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c0e19870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fc8c0e169f0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc8c0e169f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc8c0e16d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fc8c0e1a020" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fc8c0e1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0e1a3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0e1a530"/>
        <function-ref name="modify" scoped="" ref="0x7fc8c0e1a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0e1a850"/>
        <function-ref name="resend" scoped="" ref="0x7fc8c0e1a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c0e1d6d0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e1d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0e1da50"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0e1dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fc8c0e18190" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fc8c0e18190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc8c0e18510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc8c0e0c970" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c0e0c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c0e0ccf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c0e0ce80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c0e0b030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c0e0b1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c0e0b350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c0e0b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fc8c0e02950" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc8c0e02950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c0dff020"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c0dff750"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c0e00780"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0dffe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fc8c0dea020" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0dea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0dea3a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0dea530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fc8c0dea890" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0dea890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0deac10"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0deada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fc8c0e0b900" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fc8c0e0b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc8c0e0bc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fc8c0dee530" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0dee530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0dee8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fc8c0dfd880" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fc8c0dfd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fc8c0dfdc00"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c0dfdd90"/>
        <function-ref name="captured" scoped="" ref="0x7fc8c0dfc020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fc8c0dfc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fc8c0e0aae0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fc8c0e0aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0e06390"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0e07360"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8c0e07ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0e07820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8c0e06850"/>
        <function-ref name="start" scoped="" ref="0x7fc8c0e09970"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0e09e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc8c0e06d00" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0e06d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c0e050a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c0e05230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c0e053c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c0e05550"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c0e056e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c0e05870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fc8c0df0550" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0df0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0df08d0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0df0a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fc8c0df0e00" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0df0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0def1c0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0def350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fc8c0de4d40" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0de4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0de70e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fc8c0de7270"/>
        <function-ref name="sfd" scoped="" ref="0x7fc8c0de7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c0e0dbc0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c0e0dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0e0c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0e0c1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fc8c0e0c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0e0c4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fc8c0e0c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fc8c0df2d10" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0df2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c0df10e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c0df1270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c0df1400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fc8c0deec60" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0deec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0dec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fc8c0df5820" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc8c0df5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0df5ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0df5d30"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0df4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0df41b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0df4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0df44d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0df4660"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0df47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0e0ec60" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0e0ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0e0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c0e05bb0" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0e05bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0e02020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0e021b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0e02340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fc8c0df7be0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0df7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0dfd020"/>
        <function-ref name="isSet" scoped="" ref="0x7fc8c0dfd1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0dfd340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0dfd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fc8c0dec3e0" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0dec3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0dec960"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0decaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc8c0df2020" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc8c0df2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0df23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0df2530"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0df26c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0df2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0df29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fc8c0dfc500" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fc8c0dfc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0dfc980"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0dfcb10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0dfcca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0dfce30"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0df5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0df51b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0df5340"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0df54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fc8c0de9130" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0de9130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0de94b0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0de9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fc8c0de99c0" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0de99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0de9d40"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0de8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fc8c0def6d0" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0def6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0defa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fc8c0df4b40" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fc8c0df4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0df3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0df31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0df3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0df34d0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0df3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0df37f0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0df3980"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0df3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c0de76c0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c0de76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c0de7a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c0de7bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c0de7d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c0de6020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c0de61b0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0de6340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c0de64d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c0de6b10"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0de6660"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c0de67f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c0de6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fc8c0deb5e0" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0deb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0deb960"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0debaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c0e0d320" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c0e0d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0e0d6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0e0d830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fc8c0df1780" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0df1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0df1b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0df1c90"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0df1e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0df0020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0df01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fc8c0defde0" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc8c0defde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0dee180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fc8c0dece80" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc8c0dece80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0deb220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fc8c0e0a0f0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fc8c0e0a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc8c0e0a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc8c0d4ac60" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0d4ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d48210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc8c0d53020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc8c0d4dc70" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0d4dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4c020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc8c0d47670" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0d47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d479f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d47b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc8c0d40e50" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0d40e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3f210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc8c0d47e50" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0d47e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d46210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc8c0d332f0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0d332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d33670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d33800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc8c0d362f0" loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0d362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d36670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d36800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc8c0d52370" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0d52370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d526f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc8c0d3b670" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc8c0d3b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc8c0d372f0" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0d372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d37670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d37800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc8c0d4cc60" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc8c0d4cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4b020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc8c0d4bc60" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0d4bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4a020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc8c0d41670" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0d41670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d419f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d41b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc8c0d44e50" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc8c0d44e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d42210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc8c0d46670" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0d46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d469f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c0d558f0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0d558f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c0d55c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c0d55e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c0d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc8c0d51d00" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0d51d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d4f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc8c0d4f370" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc8c0d4f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d4f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc8c0d3aa70" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0d3aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3adf0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc8c0d4fac0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0d4fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d4fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc8c0d37ad0" loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0d37ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d37e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc8c0d51060" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0d51060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d513e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc8c0d3de50" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0d3de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3b210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc8c0d4b480" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0d4b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4b800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc8c0d4c480" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0d4c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4c800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc8c0d54940" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0d54940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d54cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc8c0d3ee50" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0d3ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3d210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc8c0d3f670" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0d3f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc8c0d3d670" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0d3d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc8c0d34ad0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0d34ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d34e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc8c0d36ad0" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0d36ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d36e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc8c0d42670" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc8c0d42670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d429f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d42b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc8c0d3fe50" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0d3fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3e210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc8c0d38ad0" loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0d38ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d38e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc8c0d45670" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0d45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d459f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d45b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc8c0d33ad0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0d33ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0d33e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0d32020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d321b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0d32340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0d324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc8c0d542f0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0d542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d54670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc8c0d4d490" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc8c0d4d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4d810"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc8c0d4a480" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0d4a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d4a800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d4a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc8c0d41e50" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0d41e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d40210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc8c0d46e50" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0d46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d45210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc8c0d40670" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0d40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d409f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d40b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc8c0d48670" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0d48670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d489f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d48b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc8c0d53670" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc8c0d53670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d539f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc8c0d48e50" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0d48e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d47210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0d57c30" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0d57c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0d55020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0d551b0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0d55340"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0d554d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0d55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc8c0d4e160" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0d4e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d4e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc8c0d4ee00" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc8c0d4ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d4d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc8c0d382f0" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc8c0d382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d38670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d38800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc8c0d39ad0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0d39ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d39e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d38020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc8c0d516b0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0d516b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d51a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc8c0d392f0" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0d392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d39670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d39800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc8c0d342f0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc8c0d342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d34670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d34800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc8c0d42e50" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0d42e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d41210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc8c0d3e670" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0d3e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc8c0d53cc0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc8c0d53cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d520a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc8c0d529c0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0d529c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d52d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc8c0d45e50" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0d45e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d44210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc8c0d4e7b0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc8c0d4e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d4eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc8c0d44670" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0d44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d449f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d44b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc8c0d3be50" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0d3be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d3a610"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d3a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc8c0d327a0" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0d327a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0d32b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0d32cb0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d32e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0d31020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0d311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fc8c0d26e00" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0d26e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0d231c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fc8c0d23350"/>
        <function-ref name="sfd" scoped="" ref="0x7fc8c0d234e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0d237c0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0d237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0d23b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fc8c0d22020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fc8c0d22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc8c0d223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c0d265d0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c0d265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0d26950"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0d26ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fc8c0d1a380" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fc8c0d1a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0d1a700"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0d1a890"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0d1aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0d1abb0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0d1ad40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0d18020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0d181b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0d18340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fc8c0d12b90" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c0d12b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc8c0d11020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc8c0d111b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc8c0d11340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc8c0d114d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc8c0d11660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc8c0d117f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc8c0d11980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc8c0d11b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc8c0d11ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc8c0d11e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc8c0d10020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc8c0d101b0"/>
        <function-ref name="sync" scoped="" ref="0x7fc8c0d10340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc8c0d105d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc8c0d10760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fc8c0cfb9d0" loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fc8c0cfb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0cfbd50"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0cfa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fc8c0d10d70" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fc8c0d10d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c0d0e330"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c0d0ea60"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c0d0fba0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0d0c210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fc8c0d186b0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fc8c0d186b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0d18a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0d18bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0d18d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0d17020"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0d171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0d17340"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0d174d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0d17660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fc8c0d0bcb0" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0d0bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d0a0a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d0a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fc8c0d0a590" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0d0a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d0a910"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d0aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fc8c0d096d0" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0d096d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d09a50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d09be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc8c0d13330" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0d13330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c0d136b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c0d13840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c0d139d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c0d13b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c0d13cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c0d13e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fc8c0d1d550" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fc8c0d1d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0d1d8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fc8c0d1da60"/>
        <function-ref name="sfd" scoped="" ref="0x7fc8c0d1dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fc8c0d143a0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc8c0d143a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d14720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fc8c0d1b020" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fc8c0d1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0d1b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0d1b530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0d1b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c0d1b850"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0d1b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c0d1bb70"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0d1bd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c0d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fc8c0d08020" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0d08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d083a0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d08530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0d1e620" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0d1e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0d1e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c0d121e0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0d121e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0d12560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0d126f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0d12880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0d1c020" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0d1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0d1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fc8c0d166e0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fc8c0d166e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0d16a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0d16bf0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0d16d80"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0d15020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0d151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fc8c0d0ae00" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0d0ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d091c0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d09350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fc8c0d15530" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0d15530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0d158b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0d15a40"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d15bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0d15d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0d14020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fc8c0d088b0" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0d088b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d08e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fc8c0d1c7c0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fc8c0d1c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fc8c0d1cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c0d07150" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c0d07150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c0d074d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c0d07660"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c0d077f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c0d07980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c0d07b10"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0d07ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c0d07e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c0d064d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0d06020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c0d061b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c0d06340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fc8c0d0b3e0" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0d0b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0d0b760"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0d0b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fc8c0d0cb10" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0d0cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fc8c0d17a50" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fc8c0d17a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c0d17dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fc8c0d16020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fc8c0d161b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fc8c0d16340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fc8c0d14ad0" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0d14ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0d13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c0d1eca0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c0d1eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0d1d0a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0d1d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc8c0c9aa70" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c0c9aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc8c0c9adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc8c0c9e680" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c9e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c0c9ea00"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c0c9eb90"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c0c9ed20"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c0c9b020"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c0c9b1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c0c9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fc8c0c99550" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c99550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c0c98b00"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c0c972a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c0c983d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0c979d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fc8c0c9a0c0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c9a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0c9a440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0c9a5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0c9a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fc8c0c91480" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0c91480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c91800"/>
        <function-ref name="isSet" scoped="" ref="0x7fc8c0c91990"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0c91b20"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0c91cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fc8c0c95660" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c0c95660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c0c94ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c0c93460"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c0c945b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0c93b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc8c0c9b6e0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc8c0c9b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c0c9ba60"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c0c9bbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c0c9bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fc8c0c8b020" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fc8c0c8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fc8c0c8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fc8c0c90d30" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0c90d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c0c8d0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c0c8d270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c0c8d400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c0c8d590"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c0c8d720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c0c8d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc8c0c824a0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c0c824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c0c82820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c0c829b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0c82b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0c82cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c0c82e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fc8c0c8ba80" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fc8c0c8ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c0c89020"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c0c89750"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c0c8a8d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0c89e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fc8c0c8c640" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0c8c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0c8c9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0c8cb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0c8cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fc8c0c838b0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fc8c0c838b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c83c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fc8c0c83dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0c82020"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0c821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fc8c0c7e820" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fc8c0c7e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c804c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fc8c0c80b80" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fc8c0c80b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c7d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fc8c0c87af0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fc8c0c87af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fc8c0c850d0"/>
        <function-ref name="clear" scoped="" ref="0x7fc8c0c85800"/>
        <function-ref name="isValid" scoped="" ref="0x7fc8c0c86970"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0c83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc8c0c8dc50" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc8c0c8dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c0c8c020"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c0c8c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c0c8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc8c0c2d4e0" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0c2d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c24150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc8c0c247c0" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c0c247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c23620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0c21020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0c23ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0c214e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fc8c0c1c7d0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0c1c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0c10c40"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0c11260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0c10020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0c11b60"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0c0f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0c0f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0c116e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0c1b400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0c10630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0c1b8d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0c1bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc8c0c0fb80" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0c0fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0c0d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0c1d130" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0c1d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0c1d4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8c0be0af0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8c0be0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0bdc390"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0bdd360"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8c0bddce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0bdd820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8c0bdc850"/>
        <function-ref name="start" scoped="" ref="0x7fc8c0bde970"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0bdee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0be02a0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0be02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0be0620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfbd4260" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbd4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfbd1b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfbd3a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfbd14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfbd1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfbd0020"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfbd3090"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfbd35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bfbd59d0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bfbd59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bfbd5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fc8bfbbba80" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfbbba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8bfbbbe00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8bfbba020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8bfbba1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8bfbba340"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfbba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fc8bfbbe020" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfbbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8bfbbe3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8bfbbe530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfbbe6c0"/>
        <function-ref name="get" scoped="" ref="0x7fc8bfbbe850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfbbe9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8bfbbeb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8bfbbed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8bfbbc020"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8bfbbc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8bfbbc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8bfbbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fc8bfbbc760" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfbbc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8bfbbcae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8bfbbcc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfbbce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8bfbbb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8bfbbb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfbbb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8bfbbb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8bfbbb660"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8bfbbb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fc8bfb8e760" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fc8bfb8e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fc8bfb8eae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fc8bfb8ec70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fc8bfb8ee00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fc8bfb8d020"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfb8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fc8bfbb5dd0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fc8bfbb5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8bfbb3180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fc8bfbb3310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfbb34a0"/>
        <function-ref name="get" scoped="" ref="0x7fc8bfbb3630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfbb37c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8bfbb3950"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8bfbb3ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8bfbb3c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8bfbb3e00"/>
        <function-ref name="setMode" scoped="" ref="0x7fc8bfbb2020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fc8bfbb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfbb8bf0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbb8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfbb54e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfbb64e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfbb6e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfbb69a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfbb59a0"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfbb7a80"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfbb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bfbb8360" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bfbb8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bfbb86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fc8bfbb2440" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fc8bfbb2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fc8bfbb27c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fc8bfbb2950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fc8bfbb2ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fc8bfbb2c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fc8bfbb2e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fc8bfb8e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc8bfb8e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fc8bfb8e340"/>
        <function-ref name="setControl" scoped="" ref="0x7fc8bfb8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c0bfc080" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c0bfc080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0bfb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0bfb9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0bfb4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0bfbe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fc8c0bf30f0" loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fc8c0bf30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0bf2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0bf29a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0bf24e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0bf2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c0bf7cd0" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c0bf7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0bf5b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0bf4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0bf4090"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0bf4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc8bfbce5f0" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8bfbce5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfbcce50"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfbcde00"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfbcc800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfbcc340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfbca340"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfbcd430"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfbcd940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fc8bfbc8d20" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fc8bfbc8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8bfbc4670"/>
        <function-ref name="fired" scoped="" ref="0x7fc8bfbc6550"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8bfbc4020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8bfbc6a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8bfbc4b30"/>
        <function-ref name="start" scoped="" ref="0x7fc8bfbc7b60"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bfbc6090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc8bfbca9b0" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8bfbca9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8bfbc97e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8bfbc81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8bfbc9ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8bfbc8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fc8c0ba9020" loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fc8c0ba9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0ba93a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0ba9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fc8c0baecd0" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fc8c0baecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0bab670"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0bac550"/>
        <function-ref name="startAt" scoped="" ref="0x7fc8c0bab020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0baca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc8c0babb30"/>
        <function-ref name="start" scoped="" ref="0x7fc8c0badb60"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0bac090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c0bb3830" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c0bb3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0bb0cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0bb1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0bb00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0bb1c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0bae660"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0bae1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0bb1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0bb2480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0bb06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0bb2950"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0bb2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fc8c0b59a00" loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fc8c0b59a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0b59d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0b58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fc8c0b5e640" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fc8c0b5e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0b5ac40"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0b5c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0b5a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0b5cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0b59590"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0b59110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0b5c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0b5d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0b5a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0b5d860"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0b5dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c0b64150" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c0b64150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0b60700"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0b63c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0b61a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0b615b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0b5e090"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0b60ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0b61110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0b64d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0b600d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0b632a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0b63790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc8c0b562b0" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fc8c0b562b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0b54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc8c0b54690" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c0b54690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c0b535b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c0b52020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c0b53a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c0b524e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c0b4c8c0" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c0b4c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0b38cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0b39320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0b380d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0b39c20"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0b37660"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0b371e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0b397a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0b3a4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0b386e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0b3a9b0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0b3ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fc8c0b422c0" loc="49:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fc8c0b422c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0b3f870"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0b41e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0b40c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0b40780"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0b3e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0b3fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0b40300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0b41020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0b3f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0b414f0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0b419c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fc8c0b26c60" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fc8c0b26c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b25210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fc8c0b30020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fc8c0b30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fc8c0b2ac70" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fc8c0b2ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b29020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fc8c0b24670" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fc8c0b24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b249f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b24b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fc8c0b1de50" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fc8c0b1de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1c210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fc8c0b24e50" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fc8c0b24e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b23210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fc8c0b102f0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fc8c0b102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b10670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b10800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fc8c0b122f0" loc="104:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fc8c0b122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b12670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b12800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fc8c0b2f370" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fc8c0b2f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fc8c0b18670" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fc8c0b18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b189f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fc8c0b142f0" loc="102:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fc8c0b142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b14670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b14800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fc8c0b29c60" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fc8c0b29c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b27020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fc8c0b27c60" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fc8c0b27c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b26020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fc8c0b1e670" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fc8c0b1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fc8c0b20e50" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fc8c0b20e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1f210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fc8c0b23670" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fc8c0b23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b239f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fc8c0b32970" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fc8c0b32970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fc8c0b32cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fc8c0b32e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fc8c0b31030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fc8c0b2dd00" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fc8c0b2dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fc8c0b2c370" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fc8c0b2c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fc8c0b17a70" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fc8c0b17a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b17df0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fc8c0b2cac0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fc8c0b2cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fc8c0b14ad0" loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fc8c0b14ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b14e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fc8c0b2d060" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fc8c0b2d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fc8c0b19e50" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fc8c0b19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b18210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fc8c0b27480" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fc8c0b27480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b27800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b27990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fc8c0b29480" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fc8c0b29480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b29800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b29990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fc8c0b31950" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fc8c0b31950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b31cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fc8c0b1be50" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fc8c0b1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b19210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fc8c0b1c670" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fc8c0b1c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fc8c0b19670" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fc8c0b19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b199f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fc8c0b11ad0" loc="107:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fc8c0b11ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b11e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fc8c0b12ad0" loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fc8c0b12ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b12e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fc8c0b1f670" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fc8c0b1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fc8c0b1ce50" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fc8c0b1ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1b210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fc8c0b15ad0" loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fc8c0b15ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b15e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fc8c0b22670" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fc8c0b22670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b229f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b22b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fc8c0b10ad0" loc="111:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fc8c0b10ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0b10e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0b0f020"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b0f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0b0f340"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0b0f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fc8c0b31300" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fc8c0b31300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b31680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fc8c0b2a490" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fc8c0b2a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b2a810"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b2a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fc8c0b26480" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fc8c0b26480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b26800"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b26990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fc8c0b1ee50" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fc8c0b1ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1d210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fc8c0b23e50" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fc8c0b23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b22210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fc8c0b1d670" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fc8c0b1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fc8c0b25670" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fc8c0b25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b259f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b25b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fc8c0b30670" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fc8c0b30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b309f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fc8c0b25e50" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fc8c0b25e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b24210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0b33d00" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0b33d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0b320a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0b32230"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0b323c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0b32550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0b326e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fc8c0b2b160" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fc8c0b2b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fc8c0b2be00" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fc8c0b2be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fc8c0b152f0" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fc8c0b152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b15670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b15800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fc8c0b16ad0" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fc8c0b16ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b16e50"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fc8c0b2d6b0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fc8c0b2d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fc8c0b162f0" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fc8c0b162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b16670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b16800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fc8c0b112f0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fc8c0b112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b11670"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b11800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fc8c0b1fe50" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fc8c0b1fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1e210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fc8c0b1b670" loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fc8c0b1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b1b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b1bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fc8c0b30cc0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fc8c0b30cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fc8c0b2f9c0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fc8c0b2f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fc8c0b22e50" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fc8c0b22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b20210"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fc8c0b2b7b0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fc8c0b2b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fc8c0b2bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fc8c0b20670" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fc8c0b20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b209f0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b20b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fc8c0b18e50" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fc8c0b18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc8c0b17610"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b177a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fc8c0b0f7a0" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fc8c0b0f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fc8c0b0fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc8c0b0fcb0"/>
        <function-ref name="write" scoped="" ref="0x7fc8c0b0fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fc8c0b0e020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc8c0b0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fc8c0ae5a20" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc8c0ae5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc8c0ae5da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fc8c0ae4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fc8c0ae2920" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fc8c0ae2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0ae5560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0ae99b0" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0ae99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0ae9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fc8c0adaa20" loc="48:/home/rodrigoct/tinyos-main-master/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc8c0adaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc8c0adada0"/>
        <function-ref name="rand32" scoped="" ref="0x7fc8c0ad8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fc8c0adb940" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fc8c0adb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0ada560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0adb080" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0adb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0adb400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc8c0ae7aa0" loc="67:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c0ae7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c0ae7e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c0adc020"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c0adc1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c0adc340"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c0adc4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c0adc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c0ac2020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c0ac2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0ac23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0ac2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0ac26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0ac2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0ac29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c0ac3260" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c0ac3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0ac35e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0ac3770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0ac3900"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0ac3a90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0ac3c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c0abee60" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c0abee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0abd210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0abd3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0abd530"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0abd6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0abd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c0ac1a30" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c0ac1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0ac1db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0abe020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0abe1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0abe340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0abe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fc8c0abc8f0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc8c0abc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc8c0abcc70"/>
        <function-ref name="rand32" scoped="" ref="0x7fc8c0abce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0abe750" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0abe750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0abead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c0abb170" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0abb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0abb4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0abb680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0abb810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fc8c0abdae0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c0abdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c0abde60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c0abc020"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c0abc1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c0abc340"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c0abc4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c0abc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc8c0abf690" loc="67:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c0abf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c0abfa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c0abfba0"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c0abfd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c0aaa020"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c0aaa1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c0aaa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c0aa3950" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0aa3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0aa3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0aa6ab0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0aa6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0aa6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fc8c0aa3200" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc8c0aa3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0aa3580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c0a9e3f0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a9e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a9e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0a9fb70" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0a9fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0a9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0aa2e40" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0aa2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a9f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c0a9ea70" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0a9ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a9edf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0a9d020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0a9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fc8c0a9f570" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fc8c0a9f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a9f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c0a70020" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a703a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c0a706b0" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a706b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a70a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a70bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a70d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a6f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c0a74960" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c0a74960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a74ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a74e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a73030"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a731c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a73350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fc8c0a73ca0" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c0a73ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a720a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a72230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a723c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a72550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a726e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0a735f0" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0a735f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a73970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0a75cb0" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0a75cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0a740a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0a74230"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0a743c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0a74550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0a746e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fc8c0a72a50" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c0a72a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a72dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fc8c0a71170" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fc8c0a71170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c0a714f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c0a71680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a71810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a719a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c0a71b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c0a66d70" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a66d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a65180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a65310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a654a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a65630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a657c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c0a65b10" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a65b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fc8c0a37db0" loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fc8c0a37db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0a35180"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0a35310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc8c0a642f0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c0a642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c0a64670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c0a64800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c0a64990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c0a64b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c0a64cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c0a64e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fc8c0a68a20" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fc8c0a68a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a68da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a67020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a671b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a67340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a674d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc8c0a63b70" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc8c0a63b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc8c0a62020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc8c0a621b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc8c0a62340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8c0a624d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c0a63170" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c0a63170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a634f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c0a63680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c0a63810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fc8c0a68370" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fc8c0a68370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a686f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0a6a7b0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0a6a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0a6ab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0a6acc0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0a6ae50"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0a69020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0a691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fc8c0a694d0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fc8c0a694d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a69850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a699e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a69b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a69d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fc8c0a67840" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fc8c0a67840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a67bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fc8c0a66020" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fc8c0a66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c0a663a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c0a66530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a666c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a66850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c0a669e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0a16dd0" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0a16dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c0a15180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc8c0a15410" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc8c0a15410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc8c0a15790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc8c0a15920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc8c0a15ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8c0a15c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c0a0ab80" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c0a0ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c0a09020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c0a091b0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c0a09340"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0a094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c0a08860" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c0a08860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a08be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a08d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a07020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a071b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a07340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c0a07690" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0a07690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a07a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c0a0ed00" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c0a0ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0a0b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0a0b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0a0b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0a0b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0a0b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc8c0a0a080" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c0a0a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc8c0a0a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc8c0a0a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc8c0a0a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc8c0a0a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fc8c0a09800" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fc8c0a09800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c0a09b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c0a09d10"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c0a08020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c0a081b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c0a08340"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c0a084d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fc8c0a07d90" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fc8c0a07d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c0a06180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c0a06310"/>
        <function-ref name="start" scoped="" ref="0x7fc8c0a064a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0a06630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0a0b980" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0a0b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0a0bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fc8c0a032d0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fc8c0a032d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fc8c0a03650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fc8c0a037e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fc8c0a03970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fc8c0a03b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fc8c0a05580" loc="67:/home/rodrigoct/tinyos-main-master/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fc8c0a05580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fc8c0a05900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fc8c0a05a90"/>
        <function-ref name="isState" scoped="" ref="0x7fc8c0a05c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fc8c0a05db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fc8c0a04020"/>
        <function-ref name="forceState" scoped="" ref="0x7fc8c0a041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c09f5d70" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c09f5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c09f4180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c09f4310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c09f44a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c09f4630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c09f47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c09f8360" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c09f8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c09f86e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c09f8870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c09f8a00"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c09f8b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c09f8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc8c09f5020" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc8c09f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc8c09f53a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc8c09f5530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc8c09f56c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc8c09f5850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc8c09f59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fc8c09f01c0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c09f01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c09f0540"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c09f06d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c09f0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fc8c09f3420" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fc8c09f3420"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fc8c09f37a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fc8c09f3930"/>
        <function-ref name="getRetries" scoped="" ref="0x7fc8c09f3ac0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fc8c09f3c50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fc8c09f3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c09d1690" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c09d1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c09d1a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c09d2860" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c09d2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c09d2be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c09d2d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c09d1020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c09d11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c09d1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fc8c09ce610" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c09ce610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc8c09ce990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc8c09ceb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc8c09cecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc8c09cee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc8c09cd020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc8c09cd1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc8c09cd340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc8c09cd4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc8c09cd660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc8c09cd7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc8c09cd980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc8c09cdb10"/>
        <function-ref name="sync" scoped="" ref="0x7fc8c09cdca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc8c09cc020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc8c09cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fc8c09d38b0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fc8c09d38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c09d3c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c09d3dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c09d2020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c09d21b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c09d2340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c09d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fc8c09d4ce0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fc8c09d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fc8c09d30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fc8c09cb1f0" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fc8c09cb1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fc8c09cb570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fc8c09cb700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fc8c09cb890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fc8c09cba20"/>
        <function-ref name="setCca" scoped="" ref="0x7fc8c09cbbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fc8c09cbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c09d5a80" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c09d5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c09d5e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c09d4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c09d41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c09d4340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c09d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c09d9020" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c09d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c09d93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c09d9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c09d96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c09d9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c09d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fc8c09d7df0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fc8c09d7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c09d61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fc8c09d1ce0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fc8c09d1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fc8c09cf0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fc8c09cf230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fc8c09cf3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fc8c09cf550"/>
        <function-ref name="getPower" scoped="" ref="0x7fc8c09cf6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fc8c09cf870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fc8c09cc4d0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fc8c09cc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fc8c09cc950"/>
        <function-ref name="changed" scoped="" ref="0x7fc8c09ccae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fc8c09ccc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fc8c09cce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fc8c09cfb70" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fc8c09cfb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c09ce020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fc8c09ce1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fc8c09ce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c09d7210" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c09d7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c09d7590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c09cad30" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c09cad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c09c90e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c09c9270"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c09c9400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c09c9590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c09c9720"/>
        <function-ref name="get" scoped="" ref="0x7fc8c09c98b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c09c9a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c09c81b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c09c9bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c09c9d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c09c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c09d6470" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c09d6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c09d67f0"/>
        <function-ref name="source" scoped="" ref="0x7fc8c09d6980"/>
        <function-ref name="address" scoped="" ref="0x7fc8c09d6b10"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c09d6ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c09d6e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c09d5020"/>
        <function-ref name="type" scoped="" ref="0x7fc8c09d51b0"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c09d5340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c09d54d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c09d5660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c09d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fc8c09ca0f0" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fc8c09ca0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c09ca470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c09ca600"/>
        <function-ref name="request" scoped="" ref="0x7fc8c09ca790"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c09ca920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c09caab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fc8c0921c50" loc="73:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fc8c0921c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fc8c0920100"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fc8c0920290"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fc8c0920420"/>
        <function-ref name="syncDone" scoped="" ref="0x7fc8c09205b0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fc8c0920740"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fc8c09208d0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fc8c0920a60"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fc8c0920bf0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fc8c0920d80"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fc8c091f020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fc8c091f1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fc8c091f340"/>
        <function-ref name="sync" scoped="" ref="0x7fc8c091f4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc8c091f760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fc8c091f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fc8c0940a80" loc="50:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc8c0940a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc8c0940e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerPeriodic3" ref="0x7fc8c09260f0" loc="68:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerPeriodic3" scoped="" ref="0x7fc8c09260f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0922630"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0925b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0923920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c09234a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0921020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0922ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0923020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0926ce0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0922020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0925220"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c09256f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7fc8c09373b0" loc="56:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7fc8c09373b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c0937730"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c09378c0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c0937a50"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0937be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fc8c0921450" loc="70:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fc8c0921450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fc8c09217d0"/>
        <function-ref name="rand32" scoped="" ref="0x7fc8c0921960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerPeriodic" ref="0x7fc8c0931680" loc="66:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerPeriodic" scoped="" ref="0x7fc8c0931680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c092dc40"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c092f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c092d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c092fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c092c590"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c092c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c092f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0930390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c092d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0930860"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0930d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0940420" loc="47:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0940420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c09407a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetryTimer" ref="0x7fc8c09361c0" loc="65:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RetryTimer" scoped="" ref="0x7fc8c09361c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0932630"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0935c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c09349d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0934550"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0931020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0932ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c09340d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0936db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0932020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c09352e0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c09357b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDataTask" ref="0x7fc8c08ec020" loc="273:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDataTask" scoped="" ref="0x7fc8c08ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c08ec3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c08ec530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c093b0c0" loc="51:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c093b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c093b440"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c093b5d0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c093b760"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c093b8f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c093ba80"/>
        <function-ref name="get" scoped="" ref="0x7fc8c093bc10"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c093bda0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c093a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c093a020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c093a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c093a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerPeriodic2" ref="0x7fc8c092cbf0" loc="67:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerPeriodic2" scoped="" ref="0x7fc8c092cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0927110"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c092a6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c09284a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0928020"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0927a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0927590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c092ab20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c092b860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0928ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c092bd30"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c092a220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveData" ref="0x7fc8c0938b70" loc="55:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveData" scoped="" ref="0x7fc8c0938b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0937020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc8c093a780" loc="53:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c093a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c093ab00"/>
        <function-ref name="source" scoped="" ref="0x7fc8c093ac90"/>
        <function-ref name="address" scoped="" ref="0x7fc8c093ae20"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c0939020"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c09391b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c0939340"/>
        <function-ref name="type" scoped="" ref="0x7fc8c09394d0"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c0939660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c09397f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c0939980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c0939b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendData" ref="0x7fc8c0939e40" loc="54:FWBC.nc">
      <component-ref qname="FWBC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendData" scoped="" ref="0x7fc8c0939e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c09381e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0938370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0938500"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0938690"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0938820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c083c020" loc="49:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c083c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c083c3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c083c530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c083c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c083c850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c083c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c083cc30" loc="50:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c083cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c083b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c083b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c083b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c083b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c083b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c083b8b0" loc="51:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c083b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c083bc30"/>
        <function-ref name="source" scoped="" ref="0x7fc8c083bdc0"/>
        <function-ref name="address" scoped="" ref="0x7fc8c0839020"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c08391b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c0839340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c08394d0"/>
        <function-ref name="type" scoped="" ref="0x7fc8c0839660"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c08397f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c0839980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c0839b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c0839ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc8c0838020" loc="52:/home/rodrigoct/tinyos-main-master/tos/system/AMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc8c0838020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c08383a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c0838530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c08386c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8bfacc020" loc="49:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8bfacc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8bfacc3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8bfacc530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8bfacc6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8bfacc850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8bfacc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8bfaccc30" loc="50:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8bfaccc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8bfacb020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8bfacb1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8bfacb340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8bfacb4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8bfacb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8bfacb8b0" loc="51:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfacb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8bfacbc30"/>
        <function-ref name="source" scoped="" ref="0x7fc8bfacbdc0"/>
        <function-ref name="address" scoped="" ref="0x7fc8bfaca020"/>
        <function-ref name="destination" scoped="" ref="0x7fc8bfaca1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8bfaca340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8bfaca4d0"/>
        <function-ref name="type" scoped="" ref="0x7fc8bfaca660"/>
        <function-ref name="setType" scoped="" ref="0x7fc8bfaca7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8bfaca980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8bfacab10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8bfacaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc8bfac9020" loc="52:/home/rodrigoct/tinyos-main-master/tos/system/DirectAMSenderC.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc8bfac9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8bfac93a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8bfac9530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8bfac96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8bfabf200" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8bfabf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8bfabf580"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8bfabf710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8bfabf8a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8bfabfa30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8bfabfbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fc8bfabfe70" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8bfabfe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8bfabe220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8bfabe3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8bfabe540"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8bfabe6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8bfabe860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc8bfabeab0" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <component-ref qname="FWBAppC.SenderReq.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfabeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8bfabee30"/>
        <function-ref name="source" scoped="" ref="0x7fc8bfabd020"/>
        <function-ref name="address" scoped="" ref="0x7fc8bfabd1b0"/>
        <function-ref name="destination" scoped="" ref="0x7fc8bfabd340"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8bfabd4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8bfabd660"/>
        <function-ref name="type" scoped="" ref="0x7fc8bfabd7f0"/>
        <function-ref name="setType" scoped="" ref="0x7fc8bfabd980"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8bfabdb10"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8bfabdca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8bfabde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c089e950" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c089e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c089ecd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c089ee60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c089b020"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c089b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c089b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fc8c0850400" loc="48:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c0850400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c08507a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0850930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0850ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0850c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0850de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c08514b0" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c08514b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0851850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c08519e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0851b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0851d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0850020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc8c084e720" loc="50:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c084e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c084eaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c084ec30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c084edc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c084d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c084d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fc8c084d480" loc="169:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fc8c084d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c084d800"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c084d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fc8c084dc60" loc="126:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fc8c084dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c084c020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c084c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc8c084f060" loc="49:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c084f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c084f3e0"/>
        <function-ref name="source" scoped="" ref="0x7fc8c084f570"/>
        <function-ref name="address" scoped="" ref="0x7fc8c084f700"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c084f890"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c084fa20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c084fbb0"/>
        <function-ref name="type" scoped="" ref="0x7fc8c084fd40"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c084e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c084e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c084e340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c084e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c082f2f0" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <component-ref qname="FWBAppC.ReceiverReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c082f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c082f670"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c082f800"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c082f990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c082fb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c082fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c0834cc0" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <component-ref qname="FWBAppC.ReceiverReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c0834cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c082f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c082e020" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/AMReceiverC.nc">
      <component-ref qname="FWBAppC.ReceiverReq"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c082e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c082e3a0"/>
        <function-ref name="source" scoped="" ref="0x7fc8c082e530"/>
        <function-ref name="address" scoped="" ref="0x7fc8c082e6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c082e850"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c082e9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c082eb70"/>
        <function-ref name="type" scoped="" ref="0x7fc8c082ed00"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c082d020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c082d1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c082d340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c082d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c082b1e0" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <component-ref qname="FWBAppC.RetryTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c082b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0827630"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0829c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c08289d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0828550"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0826020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0827ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c08280d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c082bdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0827020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c08292e0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c08297b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c0824b00" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <component-ref qname="FWBAppC.PeriodicTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c0824b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0820110"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c08225b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c08214a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c0821020"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0820a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0820590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0822a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0823750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0821ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0823c20"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c0822130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c081d560" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <component-ref qname="FWBAppC.PeriodicTimerC2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c081d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c081aa20"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c081b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c081bda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c081b920"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c08194a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0819020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c081b4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c081c1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c081a410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c081c680"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c081cb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc8c0816020" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/TimerMilliC.nc">
      <component-ref qname="FWBAppC.PeriodicTimerC3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fc8c0816020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6570"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc8c17e68e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc8c0813630"/>
        <function-ref name="fired" scoped="" ref="0x7fc8c0815a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc8c0814920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc8c08144a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc8c0811020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc8c0813ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc8c0814020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc8c0816c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc8c0813020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc8c0815110"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c08155e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c0459020" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c0459020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c04593a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0459530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c04596c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0459850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c04599e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c0459c30" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c0459c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c0458020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c04581b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0458340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c04584d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c0458660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c04588b0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c04588b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c0458c30"/>
        <function-ref name="source" scoped="" ref="0x7fc8c0458dc0"/>
        <function-ref name="address" scoped="" ref="0x7fc8c0456020"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c04561b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c0456340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c04564d0"/>
        <function-ref name="type" scoped="" ref="0x7fc8c0456660"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c04567f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c0456980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c0456b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c0456ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fc8c0455020" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fc8c0455020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c04553a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c0455530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c04556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8bfa5f020" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8bfa5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8bfa5f3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8bfa5f530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8bfa5f6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8bfa5f850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8bfa5f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fc8bfa5fc90" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8bfa5fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8bfa5d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8bfa5d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8bfa5d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8bfa5d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8bfa5d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc8bfa5d930" loc="47:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8bfa5d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8bfa5dcb0"/>
        <function-ref name="source" scoped="" ref="0x7fc8bfa5de40"/>
        <function-ref name="address" scoped="" ref="0x7fc8bfa5c020"/>
        <function-ref name="destination" scoped="" ref="0x7fc8bfa5c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8bfa5c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8bfa5c4d0"/>
        <function-ref name="type" scoped="" ref="0x7fc8bfa5c660"/>
        <function-ref name="setType" scoped="" ref="0x7fc8bfa5c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8bfa5c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8bfa5cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8bfa5cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c07ff530" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c07ff530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c07ff8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07ffa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07ffbd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c07ffd60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c07fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fc8c07fbe20" loc="48:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c07fbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c07fa1e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07fa370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07fa500"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c07fa690"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c07fa820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c07fb060" loc="46:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c07fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c07fb400"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07fb590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07fb720"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c07fb8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c07fba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc8c07f80e0" loc="50:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c07f80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c07f8460"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c07f85f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07f8780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07f8910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c07f8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fc8c07f8d70" loc="169:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fc8c07f8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c07f7180"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c07f7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fc8c07f75e0" loc="126:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fc8c07f75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c07f7960"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c07f7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fc8c07faa70" loc="49:/home/rodrigoct/tinyos-main-master/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07faa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c07fadf0"/>
        <function-ref name="source" scoped="" ref="0x7fc8c07f9020"/>
        <function-ref name="address" scoped="" ref="0x7fc8c07f91b0"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c07f9340"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c07f94d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c07f9660"/>
        <function-ref name="type" scoped="" ref="0x7fc8c07f97f0"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c07f9980"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c07f9b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c07f9ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c07f9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c07f5ab0" loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c07f5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c07f5e30"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c07f2020"/>
        <function-ref name="start" scoped="" ref="0x7fc8c07f21b0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c07f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c07f2b10" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c07f2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c07f1020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07f11b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07f1340"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c07f14d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c07f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c07ef470" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c07ef470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c07ef7f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c07ef980"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07efb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07efca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c07efe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c07f1e40" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c07f1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c07ef1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c07ec300" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c07ec300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c07ec680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c07ec810"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c07ec9a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c07ecb30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c07eccc0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c07ece50"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c07eb020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c07eb660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c07eb1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c07eb340"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c07eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc8c07ed800" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c07ed800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c07edb80"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c07edd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c07ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c07ee120" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07ee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c07ee4a0"/>
        <function-ref name="source" scoped="" ref="0x7fc8c07ee630"/>
        <function-ref name="address" scoped="" ref="0x7fc8c07ee7c0"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c07ee950"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c07eeae0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c07eec70"/>
        <function-ref name="type" scoped="" ref="0x7fc8c07eee00"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c07ed020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c07ed1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c07ed340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c07ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fc8c07914a0" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fc8c07914a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0791820"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07919b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0791b40"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0791cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0791e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fc8c0790120" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fc8c0790120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c07904a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fc8c07e9300" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c07e9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c07e96a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07e9830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c07e99c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c07e9b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c07e9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fc8c0793d60" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c0793d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c0792180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c0792310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c07924a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0792630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c07927c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c07940d0" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c07940d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0794470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fc8c0792a10" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fc8c0792a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fc8c0792d90"/>
        <function-ref name="noAck" scoped="" ref="0x7fc8c0791020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fc8c07911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fc8c07946c0" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fc8c07946c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fc8c0794a40"/>
        <function-ref name="source" scoped="" ref="0x7fc8c0794bd0"/>
        <function-ref name="address" scoped="" ref="0x7fc8c0794d60"/>
        <function-ref name="destination" scoped="" ref="0x7fc8c0793020"/>
        <function-ref name="setSource" scoped="" ref="0x7fc8c07931b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fc8c0793340"/>
        <function-ref name="type" scoped="" ref="0x7fc8c07934d0"/>
        <function-ref name="setType" scoped="" ref="0x7fc8c0793660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fc8c07937f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fc8c0793980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fc8c0793b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c078dbb0" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c078dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c078a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c078a1b0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c078a340"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c078a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c0789790" loc="52:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c0789790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fc8c1c4c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0789b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0789ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c0789e30"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0788020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c07881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c078d560" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c078d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c078d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c078ac60" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c078ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fc8c1c4c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c0789020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c07872b0" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c07872b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c0787630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c07877c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c0787950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c0787ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c0787c70"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0787e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c0786020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c0786660"/>
        <function-ref name="set" scoped="" ref="0x7fc8c07861b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c0786340"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c07864d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fc8c0782970" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fc8c0782970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fc8c1c4c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fc8c0782cf0"/>
        <function-ref name="offset" scoped="" ref="0x7fc8c0782e80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fc8c0787030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc8c077d7c0" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fc8c077d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c077db40"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c077dcd0"/>
        <function-ref name="start" scoped="" ref="0x7fc8c077de60"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c077c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fc8c07166e0" loc="332:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fc8c07166e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0716a60"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0716bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fc8c076b860" loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fc8c076b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c076bbe0"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c076bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fc8c074d4f0" loc="191:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fc8c074d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c074d870"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c074da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c077d170" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c077d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c077d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fc8c07664e0" loc="75:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fc8c07664e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fc8c0766860"/>
        <function-ref name="flush" scoped="" ref="0x7fc8c07669f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fc8c071ac70" loc="322:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fc8c071ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0718020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c07181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fc8c0774020" loc="72:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fc8c0774020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fc8c07743a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fc8c0774530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fc8c07746c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fc8c0774850"/>
        <function-ref name="putData" scoped="" ref="0x7fc8c07749e0"/>
        <function-ref name="putDone" scoped="" ref="0x7fc8c0774b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fc8c0774d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c0771020" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c0771020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c07713a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c0771530"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c07716c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c0771850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c07719e0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0771b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c0771d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c076b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c076b020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c076b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c076b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fc8c0712a00" loc="341:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fc8c0712a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0712d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0711020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fc8c0776720" loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fc8c0776720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fc8c0776aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7fc8c0776c30"/>
        <function-ref name="startSend" scoped="" ref="0x7fc8c0776dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fc8c077b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fc8c0772c40" loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fc8c0772c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fc8c077a020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fc8c077a1b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fc8c077a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fc8c0647020" loc="275:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fc8c0647020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c06473a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0647530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fc8c064dde0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fc8c064dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fc8c1c4c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c064c1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c064c350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c064c4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c064c670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c064c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fc8c0647800" loc="158:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fc8c0647800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c0647b80"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0647d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fc8c064d6c0" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fc8c064d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fc8c1c4c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fc8c064da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fc8c064cc20" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fc8c064cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fc8c1c4c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fc8c064b020"/>
        <function-ref name="offset" scoped="" ref="0x7fc8c064b1b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fc8c064b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c0649920" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c0649920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c0649ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c0649e30"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c0648020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c06481b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c0648340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c06484d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c0648660"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c0648ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0648980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c06487f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c0648b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fc8c064be80" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fc8c064be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fc8c0649220"/>
        <function-ref name="nextByte" scoped="" ref="0x7fc8c06493b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fc8c0649540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fc8c06496d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fc8c064b590" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fc8c064b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fc8c064b910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fc8c064baa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fc8c064bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fc8c0637d20" loc="50:/home/rodrigoct/tinyos-main-master/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fc8c0637d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c06400e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fc8c0640270"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c0640400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fc8c0640590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fc8c0640720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fc8c06408b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0640a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fc8c0645e20" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fc8c0645e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fc8c06421c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fc8c0642350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fc8c06424e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fc8c0642670"/>
        <function-ref name="putData" scoped="" ref="0x7fc8c0642800"/>
        <function-ref name="putDone" scoped="" ref="0x7fc8c0642990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fc8c0642b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c0640cc0" loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c0640cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c063f0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c063f230"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c063f3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c063f550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c063f6e0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c063f870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c063fa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c06351b0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c063fb90"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c063fd20"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c0635020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fc8c0619020" loc="6:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fc8c0619020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c06193a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fc8c0619530"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c06196c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fc8c0619850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fc8c061b8d0" loc="5:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fc8c061b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c061bc50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fc8c061bde0"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c061a020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fc8c061a1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fc8c061a340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fc8c061a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c061a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c061b0c0" loc="4:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c061b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c061b440"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c061b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8c048ac70" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c048ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8c0489020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c04891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fc8c0488440" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fc8c0488440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c04887c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fc8c0488950"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c0488ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fc8c0488c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fc8c0487020" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0487020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8c04873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fc8c0489440" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fc8c0489440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c04897c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fc8c0489950"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c0489ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fc8c0489c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fc8c0489e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fc8c0488020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c04881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c048a020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c048a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c048a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c048a530"/>
        <function-ref name="request" scoped="" ref="0x7fc8c048a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c048a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c048a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc8c0608a30" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c0608a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c0608db0"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c0607020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fc8c0604020" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fc8c0604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c06043a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fc8c0604530"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c06046c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fc8c0604850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fc8c0602450" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0602450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8c06027d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fc8c0607860" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fc8c0607860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0607be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fc8c0607d70"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c0606020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fc8c06061b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fc8c0606340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fc8c06064d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c0606660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fc8c06031d0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fc8c06031d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0603550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c06036e0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0603870"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0603a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0603b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c06097a0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c06097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0609b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0609cb0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0609e40"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0608020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c06081b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fc8c06011d0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c06011d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c0601550"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c06016e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc8c0596dc0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c0596dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c0594180"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c0594310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fc8c0593890" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fc8c0593890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0593c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fc8c0593dc0"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c0592020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fc8c05921b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fc8c05913e0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c05913e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8c0591780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fc8c0591a50" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fc8c0591a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c0591dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c0590020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c05901b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c0590340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c05904d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c0590660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c05907f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c0590980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c0590b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c0590ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c0590e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c058f020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c058f1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c058f440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c058f5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c058f760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c058f8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c058fa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c058fc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c058fda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c058e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c058e1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c058e340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c058e4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c058e660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c058e9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c058eb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c058ed10"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c058d020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c058d1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c058d340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c058d4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c058d660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c058d7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c058d980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c058db10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c058dca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c058de30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c058c020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c058c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fc8c05946d0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fc8c05946d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c0594a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fc8c0594c00"/>
        <function-ref name="receive" scoped="" ref="0x7fc8c0594d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fc8c0593020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fc8c05931b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fc8c0593340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c05934d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc8c058b020" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c058b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c058be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c058a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c058a340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c058acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fc8c05925b0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fc8c05925b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c0592950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0592ae0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c0592c70"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0592e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0591020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c0596020" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0596020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c05963c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0596550"/>
        <function-ref name="request" scoped="" ref="0x7fc8c05966e0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0596870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c0596a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fc8c058c5b0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fc8c058c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c058c950"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c058cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c0588120" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c0588120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c05884a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c0588630"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c05887c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c0588950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c0588ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0588c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c0588e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c05874d0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c05871b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c0587020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c0587340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fc8c0579860" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8c0579860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c0579be0"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c0579d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fc8c057c500" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c057c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c057c880"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c057ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fc8c057cd30" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8c057cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c057f0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c057f270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c057f400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c057f590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c057f720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c057f8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c057fa40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c057fbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c057fd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c057e020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c057e1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c057e340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c057e4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c057e760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c057e8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c057ea80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c057ec10"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c057eda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c057b020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c057b1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c057b340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c057b4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c057b660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c057b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c057b980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c057bd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c057a020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c057a1b0"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c057a340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c057a4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c057a660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c057a7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c057a980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c057ab10"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c057aca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c057ae30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c0579020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c05791b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c0579340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c05794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fc8c056c990" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fc8c056c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c056cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c056b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c056b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c056b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c056b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c056b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c056b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c056b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c056bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c056bca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c056be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c056a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c056a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c056a440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c056a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc8c0570130" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc8c0570130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c05704b0"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c0570640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fc8c056a990" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fc8c056a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c056ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0569020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c05691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0569340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c05694d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c0569660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c05697f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0569980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c0569b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c0569ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0569e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c0568020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c05681b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c0568440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c05685d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fc8c0568990" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fc8c0568990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0568d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c0567020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c05671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c0567340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c05674d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c0567660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c05677f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c0567980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c0567b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c0567ca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c0567e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c0566020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c05661b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c0566440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c05665d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fc8c0575550" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fc8c0575550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8c05758d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8c0575a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8c0575bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8c0575d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8c0574020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8c05741b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8c0574340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8c05744d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8c0574660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8c05747f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8c0574980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8c0574b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8c0574ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8c0573020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8c05731b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8c0573340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8c05734d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8c0573660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8c05737f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8c0573980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8c0573b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8c0573ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8c0573e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8c0572020"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8c05721b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8c0572540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8c05726d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8c0572860"/>
        <function-ref name="tx" scoped="" ref="0x7fc8c05729f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8c0572b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8c0572d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8c0571020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8c05711b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8c0571340"/>
        <function-ref name="rx" scoped="" ref="0x7fc8c05714d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8c0571660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8c05717f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8c0571980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8c0571b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8c0571ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fc8c0578bd0" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c0578bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0575020"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c05751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fc8c056e990" loc="79:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fc8c056e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c056ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c056d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c056d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c056d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c056d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c056d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c056d7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c056d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c056db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c056dca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c056de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c056c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c056c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c056c440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c056c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fc8c0570a00" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fc8c0570a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc8c0570d80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc8c056f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fc8c056f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc8c056f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc8c056f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fc8c056f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc8c056f7f0"/>
        <function-ref name="get" scoped="" ref="0x7fc8c056f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fc8c056fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fc8c056fca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c056fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fc8c056e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fc8c056e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fc8c056e440"/>
        <function-ref name="clr" scoped="" ref="0x7fc8c056e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc8c04e8110" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fc8c04e8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fc8c17e6d20"/>
            <typename><typedef-ref name="T32khz" ref="0x7fc8c17e50d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc8c04e7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc8c04e79a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc8c04e74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc8c04e7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8bf99ba90" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bf99ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8bf99be10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bf999020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8bf994be0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bf994be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8bf993020"/>
        <function-ref name="configure" scoped="" ref="0x7fc8bf9931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fc8bf994440" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fc8bf994440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8bf9947c0"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8bf994950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8bf99ce00" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8bf99ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bf99b1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8bf99b350"/>
        <function-ref name="request" scoped="" ref="0x7fc8bf99b4e0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bf99b670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bf99b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fc8bf999a50" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fc8bf999a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fc8bf999dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fc8bf998020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fc8bf9981b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fc8bf998340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fc8bf9984d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fc8bf998660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fc8bf9987f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fc8bf998980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fc8bf998b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fc8bf998ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fc8bf998e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fc8bf997020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fc8bf9971b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fc8bf997440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fc8bf9975d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fc8bf997760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fc8bf9978f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fc8bf997a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fc8bf997c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fc8bf997da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fc8bf996020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fc8bf9961b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fc8bf996340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fc8bf9964d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fc8bf996660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fc8bf9969f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fc8bf996b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fc8bf996d10"/>
        <function-ref name="tx" scoped="" ref="0x7fc8bf995020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fc8bf9951b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fc8bf995340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc8bf9954d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fc8bf995660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fc8bf9957f0"/>
        <function-ref name="rx" scoped="" ref="0x7fc8bf995980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fc8bf995b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fc8bf995ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fc8bf995e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fc8bf994020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fc8bf9941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8bf9992b0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bf9992b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8bf999630"/>
        <function-ref name="userId" scoped="" ref="0x7fc8bf9997c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8c04cc510" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c04cc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8c04cc890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c04cca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8c04cbaf0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c04cbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c04cbe70"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c04ca030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc8c04cf510" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc8c04cf510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c04cf890"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c04cfa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c04cd280" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c04cd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c04cd600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c04cd790"/>
        <function-ref name="request" scoped="" ref="0x7fc8c04cd920"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c04cdab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c04cdc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8c04ccd20" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04ccd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c04cb0e0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c04cb270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc8c04c6120" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04c6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c04c64a0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c04c6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fc8c04c9230" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fc8c04c9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c04c95d0"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c04c9760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fc8c04c8ad0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fc8c04c8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c04c8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fc8c04c9b60" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fc8c04c9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc8c04c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fc8c04c82f0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fc8c04c82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fc8c04c8670"/>
        <function-ref name="txDone" scoped="" ref="0x7fc8c04c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8c04c3bd0" loc="92:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8c04c3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8c04c2020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c04c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8c04c1930" loc="96:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8c04c1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8c04c1cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fc8c04c1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc8c04c2400" loc="93:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c04c2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c04c2780"/>
        <function-ref name="requested" scoped="" ref="0x7fc8c04c2910"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c04c2aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c04c2c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c04c2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8c04c4e30" loc="91:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c04c4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c04c3210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c04c33a0"/>
        <function-ref name="request" scoped="" ref="0x7fc8c04c3530"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c04c36c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c04c3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8c04c1060" loc="94:/home/rodrigoct/tinyos-main-master/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c04c13e0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c04c1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8bf931ca0" loc="44:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8bf931ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8bf92f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc8bf92f330" loc="45:/home/rodrigoct/tinyos-main-master/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc8bf92f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc8bf92f6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc8bf92f840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc8bf92f9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8bf92fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc8bf92c3a0" loc="55:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc8bf92c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc8bf92c740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bf92c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc8bf92a210" loc="60:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc8bf92a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc8bf92a5b0"/>
        <function-ref name="configure" scoped="" ref="0x7fc8bf92a740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc8bf92a9d0" loc="61:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc8bf92a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc8bf92ad50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc8bf929020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc8bf9291b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8bf929340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc8bf92cb20" loc="56:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8bf92cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bf92b020"/>
        <function-ref name="requested" scoped="" ref="0x7fc8bf92b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bf92b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bf92b4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bf92b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8bf929590" loc="62:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8bf929590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8bf929910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8bf929aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8bf929c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8bf929dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8bf927020"/>
        <function-ref name="get" scoped="" ref="0x7fc8bf9271b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8bf927340"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8bf927980"/>
        <function-ref name="set" scoped="" ref="0x7fc8bf927660"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8bf9274d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8bf9277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc8bf92d540" loc="54:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8bf92d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bf92d8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8bf92da70"/>
        <function-ref name="request" scoped="" ref="0x7fc8bf92dc00"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bf92dd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bf92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc8bf92b8b0" loc="57:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bf92b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8bf92bc30"/>
        <function-ref name="userId" scoped="" ref="0x7fc8bf92bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fc8bf927c50" loc="75:/home/rodrigoct/tinyos-main-master/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fc8bf927c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8bf926020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8bf9261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fc8c04a4400" loc="72:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc8c04a4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fc8c04a4780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fc8c04a49d0" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8c04a49d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c04a4d50"/>
        <function-ref name="requested" scoped="" ref="0x7fc8c04a3020"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c04a31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c04a3340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8c04a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fc8c04bcb20" loc="70:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8c04bcb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c04a4020"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c04a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc8c04a3720" loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8c04a3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8c04a3aa0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8c04a3c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fc8bf8f7b00" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc8bf8f7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fc8bf8f7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fc8bf8f60f0" loc="63:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc8bf8f60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8bf8f6470"/>
        <function-ref name="requested" scoped="" ref="0x7fc8bf8f6600"/>
        <function-ref name="granted" scoped="" ref="0x7fc8bf8f6790"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8bf8f6920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc8bf8f6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fc8bf8f73a0" loc="60:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc8bf8f73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8bf8f7720"/>
        <function-ref name="stop" scoped="" ref="0x7fc8bf8f78b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc8bf8f6d00" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc8bf8f6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc8bf8f50a0"/>
        <function-ref name="userId" scoped="" ref="0x7fc8bf8f5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fc8c0483920" loc="3:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fc8c0483920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fc8c0483ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fc8c0482020" loc="4:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fc8c0482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc8c04823a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc8c0482530"/>
        <function-ref name="request" scoped="" ref="0x7fc8c04826c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc8c0482850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc8c04829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fc8c04830c0" loc="2:/home/rodrigoct/tinyos-main-master/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fc8c04830c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc8c0483440"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c04835d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fc8c04708e0" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fc8c04708e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fc8c0470c60"/>
        <function-ref name="offset" scoped="" ref="0x7fc8c0470df0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fc8c046d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fc8c0451720" loc="43:/home/rodrigoct/tinyos-main-master/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc8c0451720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fc8c042d5f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fc8c042c3a0"/>
        <function-ref name="element" scoped="" ref="0x7fc8c042ca10"/>
        <function-ref name="full" scoped="" ref="0x7fc8c042e810"/>
        <function-ref name="maxSize" scoped="" ref="0x7fc8c042d170"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8c042dca0"/>
        <function-ref name="empty" scoped="" ref="0x7fc8c042e390"/>
        <function-ref name="size" scoped="" ref="0x7fc8c042ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc8c04265a0" loc="93:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fc8c04265a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fc8c04234a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fc8c0421260"/>
        <function-ref name="element" scoped="" ref="0x7fc8c04218d0"/>
        <function-ref name="full" scoped="" ref="0x7fc8c0425680"/>
        <function-ref name="maxSize" scoped="" ref="0x7fc8c0423020"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc8c0423b50"/>
        <function-ref name="empty" scoped="" ref="0x7fc8c0425200"/>
        <function-ref name="size" scoped="" ref="0x7fc8c0425b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fc8c0420020" loc="94:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fc8c0420020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc8c04203a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c0420530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c04206c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc8c0420850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc8c04209e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fc8c0420c70" loc="95:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fc8c0420c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc8c041f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fc8c041f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fc8c041f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fc8c041f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fc8c041f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fc8c0419020" loc="114:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fc8c0419020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc8c04193a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc8c0419530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c0427470" loc="89:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c0427470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c04277f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc8c041f8e0" loc="96:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fc8c041f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc8c041fc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc8c041fdf0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc8c041e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc8c041e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc8c041e340"/>
        <function-ref name="get" scoped="" ref="0x7fc8c041e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc8c041e660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc8c041eca0"/>
        <function-ref name="set" scoped="" ref="0x7fc8c041e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc8c041e980"/>
        <function-ref name="led2On" scoped="" ref="0x7fc8c041eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fc8c0424c90" loc="90:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fc8c0424c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fc8c04260a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fc8c04037e0" loc="43:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fc8c04037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fc8c0403b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc8c03ffb20" loc="94:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fc8c03ffb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc8c03fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fc8c03fc300" loc="95:/home/rodrigoct/tinyos-main-master/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fc8c03fc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fc8c03fc680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fc8c03f4220" loc="39:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fc8c03f4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc8c03f45a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fc8c03f4940" loc="40:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fc8c03f4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc8c03f4cc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc8c03f4e50"/>
        <function-ref name="start" scoped="" ref="0x7fc8c03f3020"/>
        <function-ref name="stop" scoped="" ref="0x7fc8c03f31b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/Init.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fc8c1c37e20" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/Init.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fc8c1c38a30" loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fc8c1c08b40" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fc8c1c0ade0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fc8c1c08420" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fc8c1c0a700" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fc8c1c095a0" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fc8c1c0d910" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fc8c1c0a020" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fc8c1c09cc0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fc8c1dad020" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fc8c2072dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fc8c1bb4020" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fc8c1bb5cc0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fc8c1bb8390" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc8c1bff5a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fc8c1bfe860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fc8c1bb4890" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fc8c1bb37b0" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fc8c1bb5560" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fc8c1bb3020" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fc8c1bb8b30" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fc8c1bb6350" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fc8c1bb6da0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc8c1bff5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fc8c1bfe860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc8c1bb6b20" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc8c1bff5a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fc8c1bfe860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fc8c1ba60e0" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fc8c1ba4730" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fc8c1ba44b0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fc8c1ba32e0" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc8c1ba3060" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc8c1ba5ca0" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc8c1ba53e0" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fc8c1ba6a90" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fc8c1ba6810" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fc8c1bad420" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fc8c1badda0" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc8c1badb20" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fc8c1bac7d0" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fc8c1bac550" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fc8c1bab2a0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fc8c1bab020" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc8c1bab990" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc8c1bbe880" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fc8c1bbb2a0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fc8c1bbb020" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fc8c1bbc020" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc8c1bc4b00" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fc8c1bbc760" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc8c1bc09f0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fc8c1bbe190" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc8c1bc02b0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fc8c1bbf120" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fc8c1bbfa30" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc8c1bbf7b0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fc8c1bbbcb0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fc8c1bbba30" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc8c1b7d1f0" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fc8c1ccfa80" loc="85:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fc8c1cce1f0" loc="86:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fc8c1ccf2b0" loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fc8c1ee9830" loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fc8c212b020" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fc8c212a020" loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fc8c212b790" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fc8c211f350" loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fc8c211fba0" loc="75:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fc8c1a59190" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fc8c1a59940" loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fc8c1a58190" loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fc8c1a56120" loc="83:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fc8c1a55890" loc="100:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc8c1a540e0" loc="117:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fc8c1a58920" loc="77:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc8c1a54c50" loc="134:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fc8c1a549d0" loc="134:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fc8c1a5a9d0" loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fc8c1a56900" loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fc8c1a550e0" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/rodrigoct/tinyos-main-master/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fc8c1a4a8a0" loc="44:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fc8c1a49020" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fc8c1a4ba40" loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fc8c1a49e80" loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc8c1a4a190" loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fc8c1a49740" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc8c1a4ec50" loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fc8c1a4b350" loc="41:/home/rodrigoct/tinyos-main-master/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fc8c1a1e930" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fc8c1a1d0e0" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fc8c1a19b10" loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc8c1a19890" loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fc8c1a1f190" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fc8c1a1b020" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fc8c1a18490" loc="117:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fc8c1a1d820" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc8c1a1e190" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fc8c1a1a770" loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fc8c1a1f930" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc8c1a202b0" loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fc8c1a1b7a0" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fc8c1a19020" loc="101:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fc8c1a1a020" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fc8c1a209e0" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fc8c17e05c0" loc="113:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc8c17e0340" loc="113:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fc8c17dfab0" loc="138:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc8c17df830" loc="138:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc8c17e1920" loc="104:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc8c17e0e10" loc="130:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/rodrigoct/tinyos-main-master/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc8c17ddc90" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fc8c17dd340" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fc8c17dd6c0" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c17dd9f0" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fc8c17d8620" loc="135:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17d8020" loc="135:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c17d8350" loc="135:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fc8c17d76d0" loc="123:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc8c17da2a0" loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17da020" loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc8c17d97f0" loc="110:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17d9210" loc="110:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fc8c17d9560" loc="110:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fc8c17d2b10" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
              <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17d21b0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fc8c17d2500" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c17d2830" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc8c17d3b00" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17d3880" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fc8c17cbba0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17cb920" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fc8c17c7020" loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17c8910" loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c17c8c40" loc="126:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fc8c17c8020" loc="106:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fc8c17cc050" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17caa70" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c17cada0" loc="94:/home/rodrigoct/tinyos-main-master/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c17c6340" loc="35:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c17c6340"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc8c17c6580" loc="35:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c17c6580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fc8c17ab510" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c17c6580"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17ab290" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fc8c17a96c0" loc="70:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17a9440" loc="70:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fc8c17ac2a0" loc="49:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17ac020" loc="49:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc8c17a89c0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c17c6580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17a83d0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fc8c17a8730" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c17c6580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fc8c179bb50" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c179b530" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fc8c179b8c0" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fc8c1799d00" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1799a80" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fc8c179cc60" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fc8c179c2a0" loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fc8c179c020" loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fc8c17b2770" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17b24f0" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fc8c17b0940" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17b06c0" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fc8c17afab0" loc="85:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17af830" loc="85:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fc8c17b79f0" loc="177:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17b7770" loc="177:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fc8c17c2600" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17c2380" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fc8c17d09f0" loc="68:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fc8c17c3520" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17c32a0" loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fc8c17bf020" loc="121:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17be950" loc="121:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fc8c17beca0" loc="121:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fc8c17c0a30" loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17c0450" loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fc8c17c07a0" loc="103:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fc8c17bb4a0" loc="147:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17bb220" loc="147:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fc8c17ba850" loc="162:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17ba2a0" loc="162:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fc8c17ba5c0" loc="162:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fc8c1c4e550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fc8c17bd2a0" loc="136:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17bd020" loc="136:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fc8c17b8020" loc="187:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fc8c17b68c0" loc="187:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fc8c17b6c10" loc="187:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fc8c17b8e40" loc="195:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/rodrigoct/tinyos-main-master/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fc8c1772430" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17721b0" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fc8c1775720" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17754a0" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fc8c1777dc0" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fc8c1777b40" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fc8c17772a0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fc8c1777020" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fc8c1776880" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fc8c1776600" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fc8c17745e0" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1774360" loc="88:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fc8c1767e60" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fc8c1767850" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fc8c1767bd0" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fc8c17810c0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c1782aa0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fc8c1782df0" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fc8c177d6d0" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c177d0d0" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fc8c177d440" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fc8c1781ba0" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fc8c2ab6110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c1781920" loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fc8c177f600" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c177f380" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fc8c17822a0" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c1782020" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fc8c1780720" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c17804a0" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fc8c176b650" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c176b3d0" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fc8c176f730" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c176f110" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fc8c176f4a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fc8c176c630" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c176c3b0" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fc8c176db30" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c176d510" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fc8c176d8a0" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fc8c1769630" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17693b0" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/rodrigoct/tinyos-main-master/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fc8c177a0b0" loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1783df0" loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc8c1760e20" loc="75:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1760860" loc="75:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c1760b90" loc="75:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fc8c1753620" loc="125:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
        <documentation loc="115:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1753020" loc="125:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c1753350" loc="125:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fc8c1754660" loc="112:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
        <documentation loc="102:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc8c17582a0" loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
        <documentation loc="77:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1758020" loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc8c1756750" loc="100:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
        <documentation loc="91:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1756170" loc="100:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fc8c17564c0" loc="100:/home/rodrigoct/tinyos-main-master/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fc8c175ecc0" loc="120:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fc8c175fcc0" loc="97:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fc8c175f350" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fc8c175e4f0" loc="102:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fc8c175c8b0" loc="128:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/rodrigoct/tinyos-main-master/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc8c17325e0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c1732020" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fc8c1732350" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc8c17318f0" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fc8c172d2c0" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fc8c172f340" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fc8c172fb80" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c172d020" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc8c1730aa0" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fc8c17304c0" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fc8c1730810" loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fc8c17310b0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fc8c1732df0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/Random.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fc8c172a690" loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/Random.nc">
        <documentation loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fc8c1734e60" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/Random.nc">
        <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/rodrigoct/tinyos-main-master/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fc8c173dab0" loc="95:/home/rodrigoct/tinyos-main-master/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc8c1735350" loc="105:/home/rodrigoct/tinyos-main-master/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/rodrigoct/tinyos-main-master/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fc8c1724880" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c17245c0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fc8c1726d80" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fc8c1c8aea0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fc8c1c88830"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1726a80" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fc8c1723b90" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fc8c1c863e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fc8c1c85c90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c1723890" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fc8c173b8b0" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fc8c17389c0" loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fc8c17381f0" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fc8c173c020" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fc8c173b070" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fc8c173a190" loc="76:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fc8c173a9b0" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fc8c173c880" loc="56:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fc8c171d350" loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <documentation loc="68:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fc8c171f8f0" loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fc8c171eb00" loc="66:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fc8c171e880" loc="66:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fc8c171e0e0" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fc8c17215e0" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <documentation loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fc8c1721360" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fc8c171f110" loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fc8c1721e10" loc="51:/home/rodrigoct/tinyos-main-master/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fc8c16c1020" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fc8c16c39f0" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fc8c16c3d40" loc="106:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fc8c16c4960" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fc8c16c4020" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fc8c16c5820" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fc8c16c5c00" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fc8c16ca2a0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc8c16ca020" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fc8c16c3270" loc="98:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fc8c16c8d70" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fc8c16c8af0" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fc8c16c93e0" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc8c16c9160" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fc8c16c0270" loc="117:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fc8c16c5020" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fc8c16c6c50" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fc8c16c1a20" loc="112:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fc8c16c9b60" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fc8c17963b0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fc8c1796b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fc8c16c8390" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fc8c16cc850" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fc8c16ca9f0" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fc8c16c6530" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fc8c16bfc70" loc="49:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc8c16bfc70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fc8c16bc560" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
        <documentation loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc8c16bb2f0" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc8c16bfc70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fc8c16bcce0" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fc8c16bb060" loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc8c16bfc70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc8c1690560" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c16902e0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc8c168f0b0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c1690dc0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fc8c16af640" loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/rodrigoct/tinyos-main-master/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fc8c17963b0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fc8c1796b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c16b18c0" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c16b18c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc8c16b1b00" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fc8c16a9800" loc="109:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc8c16ab7e0" loc="78:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fc8c16aae10" loc="103:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc8c16aa840" loc="103:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fc8c16aab80" loc="103:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fc8c16aa020" loc="88:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fc8c16a8020" loc="116:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc8c16ad680" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc8c16ad400" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c16b1b00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc8c16ab020" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fc8c16990e0" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fc8c1697070" loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fc8c16998c0" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fc8c169a860" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fc8c169a280" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fc8c1c4e930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fc8c169a5d0" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fc8c1c4ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fc8c168a760" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc8c1695840" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fc8c169f9c0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc8c1695250" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c16955a0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc8c1692020" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fc8c1694150" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc8c16949c0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c1694d10" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc8c169d7e0" loc="68:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc8c169d020" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fc8c169e720" loc="54:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fc8c16a1dd0" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c15874f0" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c15874f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc8c1587730" loc="57:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c1587730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fc8c1586070" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c1587730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc8c1585190" loc="76:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc8c15868f0" loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fc8c15858f0" loc="82:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fc8c14c0bb0" loc="54:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc8c14bed70" loc="66:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fc8c14be5c0" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc8c14be340" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fc8c14c0350" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc8c149aae0" loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc8c1497670" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc8c149a350" loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fc8c1499d90" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fc8c1499b10" loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fc8c149db10" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fc8c1499350" loc="59:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fc8c1388dc0" loc="24:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fc8c13856a0" loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fc8c1384020" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fc8c135eb60" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c135e580" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c135e8d0" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fc8c1358dd0" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c1358490" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c13587e0" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc8c1358b30" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc8c135a6b0" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c135a0d0" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c135a420" loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fc8c135f730" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fc8c1c8c090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c135f150" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c135f4a0" loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc8c135b2c0" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c135c930" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fc8c135cc80" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc8c135b020" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc8c133edf0" loc="76:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fc8c133e480" loc="76:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fc8c133e810" loc="76:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c133eb50" loc="76:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc8c133a3c0" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fc8c133b6a0" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fc8c133ba30" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c133bd70" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc8c133a110" loc="89:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fc8c1342ca0" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fc8c1342a20" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fc8c125e6f0" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fc8c125d070" loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fc8c1256710" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fc8c1290020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fc8c1290440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fc8c125b2a0" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c125b020" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fc8c1259680" loc="74:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c1259400" loc="74:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fc8c125bb10" loc="68:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc8c12582a0" loc="81:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c1258020" loc="81:/home/rodrigoct/tinyos-main-master/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fc8c124fca0" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fc8c124f480" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fc8c12472a0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c1247020" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fc8c12487a0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fc8c1223af0" loc="213:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fc8c122f9e0" loc="143:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fc8c123c650" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12ad080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fc8c12ad8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc8c123c3d0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12ad080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fc8c12ad8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fc8c1231ae0" loc="123:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fc8c1239b00" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12a8080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fc8c12a88c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc8c1239880" loc="70:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12a8080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fc8c12a88c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fc8c1228e70" loc="180:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fc8c1225480" loc="197:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fc8c12390e0" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12aa020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fc8c12aa7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fc8c1238350" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12a8080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fc8c12a88c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fc8c12342a0" loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fc8c1234020" loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fc8c12357d0" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fc8c1228740" loc="179:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fc8c123a880" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12aa020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fc8c12aa7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc8c123a600" loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12aa020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fc8c12aa7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fc8c1236500" loc="85:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fc8c12275d0" loc="181:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fc8c1235020" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fc8c1236c60" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fc8c1233b50" loc="113:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fc8c1231350" loc="118:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fc8c122a860" loc="177:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fc8c122c850" loc="163:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fc8c1230a30" loc="133:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fc8c1228020" loc="178:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fc8c122e1f0" loc="148:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fc8c1227cf0" loc="182:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fc8c1234a80" loc="103:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fc8c12b4e00"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fc8c12af680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fc8c12264c0" loc="187:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fc8c1223350" loc="207:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fc8c1238cf0" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fc8c1238a70" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fc8c12224d0" loc="224:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c1222250" loc="224:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fc8c123ce30" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc8c12ad080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fc8c12ad8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fc8c1230270" loc="128:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fc8c122e940" loc="153:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fc8c122a040" loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc8c127fe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fc8c127d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fc8c122bda0" loc="174:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc8c127fe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fc8c127d2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fc8c122b350" loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fc8c1290020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fc8c1290440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fc8c122b0d0" loc="168:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fc8c1290020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fc8c1290440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fc8c1222d90" loc="231:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fc8c1226cb0" loc="192:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fc8c12332b0" loc="108:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fc8c1225be0" loc="202:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fc8c122c0e0" loc="158:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fc8c122f270" loc="138:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc8c11bb6e0" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fc8c1194070" loc="80:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fc8c11a7b10" loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fc8c119bd50" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fc8c119bad0" loc="62:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fc8c11ae270" loc="11:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fc8c1197350" loc="71:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fc8c11a0cf0" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fc8c11a8c50" loc="28:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fc8c11a59c0" loc="34:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fc8c11a9c00" loc="25:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fc8c11a9980" loc="25:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fc8c11aa120" loc="21:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fc8c11a3790" loc="41:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fc8c119ac80" loc="66:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fc8c11958f0" loc="78:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fc8c119b390" loc="61:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fc8c1190b60" loc="91:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fc8c118b270" loc="100:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fc8c11ad0e0" loc="14:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fc8c11a3020" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fc8c11a2910" loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fc8c11a8500" loc="27:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fc8c11b0020" loc="7:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fc8c119cba0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fc8c119c920" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fc8c11b37f0" loc="6:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fc8c1199b80" loc="69:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fc8c11947d0" loc="81:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fc8c118d350" loc="94:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fc8c118ca90" loc="97:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fc8c1196270" loc="74:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fc8c1192020" loc="83:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fc8c119a520" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fc8c1191bb0" loc="87:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fc8c11ad800" loc="15:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fc8c119e020" loc="53:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fc8c1191020" loc="86:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fc8c1195190" loc="77:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fc8c11a0520" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fc8c11a02a0" loc="46:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fc8c118daf0" loc="95:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fc8c119c1f0" loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fc8c1197ac0" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fc8c11b0aa0" loc="8:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc8c126bb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fc8c1269020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fc8c11b0820" loc="8:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc8c126bb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fc8c1269020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fc8c11a4870" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fc8c11ac980" loc="19:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc8c11ac700" loc="19:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fc8c11a2120" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c11a3e70" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fc8c11903b0" loc="90:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fc8c11a9270" loc="24:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fc8c11ac020" loc="18:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fc8c119e9e0" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fc8c119e760" loc="54:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fc8c11ae9a0" loc="12:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fc8c1192740" loc="84:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fc8c11969e0" loc="75:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fc8c1199420" loc="68:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fc8c119f740" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fc8c119f4c0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fc8c11a4120" loc="35:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fc8c11a73b0" loc="29:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fc8c118c2b0" loc="96:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fc8c11aaaa0" loc="22:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc8c11aa820" loc="22:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fc8c118f350" loc="92:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fc8c11a5270" loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fc8c118fb10" loc="93:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/rodrigoct/tinyos-main-master/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fc8c10ed780" loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/rodrigoct/tinyos-main-master/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fc8c10ec020" loc="98:/home/rodrigoct/tinyos-main-master/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/rodrigoct/tinyos-main-master/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fc8c10b7900" loc="56:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fc8c10b6a20" loc="73:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fc8c10b7070" loc="46:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fc8c10b61f0" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fc8c10b4390" loc="81:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fc8c10aab60" loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc8c10b3b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc8c10aa8e0" loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc8c10b3b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fc8c10afba0" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fc8c10ac6f0" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc8c10b3b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc8c10ac470" loc="62:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc8c10b3b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fc8c10aa030" loc="70:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/rodrigoct/tinyos-main-master/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fc8c10b3b50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc8c0ea7620" loc="13:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc8c0ea73a0" loc="13:/home/rodrigoct/tinyos-main-master/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fc8c0e93bc0" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fc8c0e93280" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fc8c0e935f0" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c0e93920" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc8c0e92960" loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fc8c0e923a0" loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c0e926d0" loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0e7b740" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0e7b740"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc8c0e7b980" loc="59:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c0e7b980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fc8c0e774d0" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c0e7b980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc8c0e77250" loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc8c0e7b980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fc8c0e165e0" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fc8c0de49e0" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fc8c0de4020" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fc8c0de4750" loc="63:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fc8c0de57f0" loc="55:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fc8c0de5020" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fc8c0de8d40" loc="49:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fc8c0df93d0" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c0df9150" loc="58:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fc8c0dfb3d0" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c0dfb150" loc="50:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc8c0df7350" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c0df70d0" loc="72:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc8c0df8390" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c0df8110" loc="65:/home/rodrigoct/tinyos-main-master/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0c81920" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0c81920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fc8c0c7e270" loc="61:/home/rodrigoct/tinyos-main-master/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc8c0c1a020" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc8c0c1a020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fc8c0c14c50" loc="136:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc8c0c185b0" loc="83:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fc8c0c15360" loc="114:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc8c0c16d60" loc="114:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fc8c0c150d0" loc="114:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fc8c0c165b0" loc="98:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fc8c0c13ca0" loc="151:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fc8c0c13420" loc="144:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fc8c0c18d90" loc="92:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fc8c0c1ab90" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc8c0c1a910" loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fc8c0c142f0" loc="129:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc8c0c15d00" loc="129:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fc8c0c14060" loc="129:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fc8c0c19680" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc8c0c19400" loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fc8c2ab5920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc8c0c19e80" loc="78:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/rodrigoct/tinyos-main-master/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fc8c0ae6600" loc="53:/home/rodrigoct/tinyos-main-master/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fc8c0ae6600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fc8c0ae22a0" loc="64:/home/rodrigoct/tinyos-main-master/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/rodrigoct/tinyos-main-master/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fc8c0ae6600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fc8c0ae2020" loc="64:/home/rodrigoct/tinyos-main-master/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fc8c0ae6600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fc8c0782020" loc="31:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c0783960" loc="31:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fc8c0783ce0" loc="31:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fc8c0785020" loc="15:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fc8c0783020" loc="23:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fc8c07858b0" loc="23:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fc8c1c3f720"/>
                <typename><typedef-ref name="message_t" ref="0x7fc8c1c3ed80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fc8c0785c20" loc="23:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fc8c07661f0" loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fc8c076aa00" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fc8c07702b0" loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fc8c076e720" loc="72:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fc8c076c390" loc="94:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c076c110" loc="94:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fc8c076d020" loc="79:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fc8c0770e20" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c0770ba0" loc="65:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fc8c076cbf0" loc="100:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fc8c076d8d0" loc="85:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fc8c0779c10" loc="71:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fc8c0778590" loc="81:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fc8c07792a0" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fc8c0779020" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fc8c07762a0" loc="91:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc8c0776020" loc="91:/home/rodrigoct/tinyos-main-master/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fc8c0773020" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fc8c0773c40" loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc8c07739c0" loc="69:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fc8c0772730" loc="80:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fc8c07724b0" loc="80:/home/rodrigoct/tinyos-main-master/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc8c0641de0" loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fc8c0641810" loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c0641b50" loc="48:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fc8c063bac0" loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fc8c063b840" loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fc8c0639930" loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fc8c0639360" loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c06396a0" loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fc8c063a740" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fc8c06372c0" loc="99:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fc8c0636920" loc="99:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c0636c60" loc="99:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc8c0637020" loc="99:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fc8c063b070" loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc8c063c720" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fc8c063edb0" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc8c063c130" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fc8c2ab5520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc8c063c480" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc8c06175b0" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fc8c0617330" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fc8c0617df0" loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fc8c0615cf0" loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fc8c0615700" loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fc8c0615a60" loc="69:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fc8c0613b50" loc="79:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/rodrigoct/tinyos-main-master/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fc8c060c460" loc="39:/home/rodrigoct/tinyos-main-master/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fc8c127fe70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fc8c127d2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/rodrigoct/tinyos-main-master/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fc8c057d860" loc="95:/home/rodrigoct/tinyos-main-master/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc8c057c0e0" loc="105:/home/rodrigoct/tinyos-main-master/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/rodrigoct/tinyos-main-master/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/rodrigoct/tinyos-main-master/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/rodrigoct/tinyos-main-master/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fc8c04b84b0" loc="62:/home/rodrigoct/tinyos-main-master/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/rodrigoct/tinyos-main-master/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fc8c044e1e0" loc="43:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fc8c044e1e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fc8c044c9e0" loc="80:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fc8c044e1e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fc8c044a4a0" loc="97:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc8c2126cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fc8c044e1e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fc8c044a220" loc="97:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fc8c044e1e0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fc8c2abbc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7fc8c2abbc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fc8c0448440" loc="108:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fc8c044e1e0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fc8c04481c0" loc="108:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fc8c044d270" loc="57:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fc8c044c270" loc="72:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fc8c0449610" loc="88:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fc8c044e1e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fc8c044ea90" loc="50:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc8c212e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fc8c044d9f0" loc="65:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/rodrigoct/tinyos-main-master/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc8c2ab5160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/rodrigoct/tinyos-main-master/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/rodrigoct/tinyos-main-master/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fc8c0424940" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/rodrigoct/tinyos-main-master/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fc8c04246c0" loc="49:/home/rodrigoct/tinyos-main-master/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
